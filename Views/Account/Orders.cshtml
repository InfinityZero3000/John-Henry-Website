@model List<Order>
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Lịch sử mua hàng";
    var currentUser = await UserManager.GetUserAsync(User);
    var avatarUrl = !string.IsNullOrEmpty(currentUser?.Avatar) 
        ? currentUser.Avatar 
        : "/images/avatars/default-avatar.svg";
    var userName = currentUser != null && !string.IsNullOrEmpty(currentUser.FirstName) 
        ? $"{currentUser.FirstName} {currentUser.LastName}".Trim()
        : (User.Identity?.Name ?? "User");
}

<div class="container py-4">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
            <li class="breadcrumb-item"><a href="/Account/Profile">Tài khoản</a></li>
            <li class="breadcrumb-item active">Lịch sử mua hàng</li>
        </ol>
    </nav>

    <div class="row">
        <!-- Sidebar -->
        <div class="col-lg-3 col-md-4 mb-4">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="text-center mb-3">
                        <img src="@avatarUrl" 
                             class="rounded-circle mb-2" 
                             alt="Avatar" 
                             width="80" 
                             height="80"
                             onerror="this.src='/images/avatars/default-avatar.svg'"
                             style="object-fit: cover;">
                        <h6 class="mb-1">@userName</h6>
                        <small class="text-muted">Thành viên</small>
                    </div>
                    <div class="list-group list-group-flush">
                        <a href="/Account/Profile" class="list-group-item list-group-item-action">
                            <i class="fas fa-user me-2"></i>Thông tin cá nhân
                        </a>
                        <a href="/Account/ChangePassword" class="list-group-item list-group-item-action">
                            <i class="fas fa-lock me-2"></i>Đổi mật khẩu
                        </a>
                        <a href="/Account/Orders" class="list-group-item list-group-item-action active">
                            <i class="fas fa-shopping-bag me-2"></i>Đơn hàng của tôi
                        </a>
                        <a href="/Wishlist" class="list-group-item list-group-item-action">
                            <i class="fas fa-heart me-2"></i>Sản phẩm yêu thích
                        </a>
                        <a asp-action="Addresses" class="list-group-item list-group-item-action">
                            <i class="fas fa-map-marker-alt me-2"></i>Địa chỉ
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="col-lg-9 col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <div class="row align-items-center">
                        <div class="col">
                            <h4 class="mb-0">
                                <i class="fas fa-shopping-bag me-2"></i>Lịch sử mua hàng
                            </h4>
                        </div>
                        <div class="col-auto">
                            <select class="form-select form-select-sm" id="orderFilter">
                                <option value="">Tất cả đơn hàng</option>
                                <option value="pending">Chờ xử lý</option>
                                <option value="processing">Đang xử lý</option>
                                <option value="shipped">Đã giao hàng</option>
                                <option value="delivered">Đã nhận hàng</option>
                                <option value="cancelled">Đã hủy</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model != null && Model.Any())
                    {
                        <div class="order-history">
                            @foreach (var order in Model)
                            {
                                <div class="order-item mb-4" data-status="@order.Status">
                                    <div class="order-header p-3 bg-light rounded-top">
                                        <div class="row align-items-center">
                                            <div class="col-md-6">
                                                <h6 class="mb-1">Đơn hàng #@order.OrderNumber</h6>
                                                <small class="text-muted">Đặt ngày: @order.CreatedAt.ToString("dd/MM/yyyy")</small>
                                            </div>
                                            <div class="col-md-3 text-center">
                                                @{
                                                    var badgeClass = order.Status switch
                                                    {
                                                        "delivered" => "bg-success",
                                                        "shipped" => "bg-info",
                                                        "processing" => "bg-warning",
                                                        "cancelled" => "bg-danger",
                                                        _ => "bg-secondary"
                                                    };
                                                    
                                                    var statusText = order.Status switch
                                                    {
                                                        "pending" => "Chờ xử lý",
                                                        "processing" => "Đang xử lý", 
                                                        "shipped" => "Đã giao hàng",
                                                        "delivered" => "Đã nhận hàng",
                                                        "cancelled" => "Đã hủy",
                                                        _ => "Không xác định"
                                                    };
                                                }
                                                <span class="badge @badgeClass">@statusText</span>
                                            </div>
                                            <div class="col-md-3 text-end">
                                                <strong class="text-primary">@order.TotalAmount.ToString("N0")₫</strong>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="order-body border border-top-0 rounded-bottom p-3">
                                        <div class="row">
                                            <div class="col-md-8">
                                                @if (order.OrderItems?.Any() == true)
                                                {
                                                    <div class="order-products">
                                                        @foreach (var item in order.OrderItems.Take(3))
                                                        {
                                                            <div class="product-item d-flex align-items-center mb-3">
                                                                <img src="@(!string.IsNullOrEmpty(item.ProductImage) ? item.ProductImage : (!string.IsNullOrEmpty(item.Product?.FeaturedImageUrl) ? item.Product.FeaturedImageUrl : "/images/placeholder.jpg"))" 
                                                                     alt="@(item.ProductName ?? item.Product?.Name)" 
                                                                     class="product-thumb me-3" 
                                                                     width="60" height="60">
                                                                <div>
                                                                    <h6 class="mb-1">@(item.ProductName ?? item.Product?.Name)</h6>
                                                                    <small class="text-muted">
                                                                        SKU: @(item.ProductSKU ?? item.Product?.SKU ?? "N/A") | SL: @item.Quantity
                                                                    </small>
                                                                    <div class="price">@item.UnitPrice.ToString("N0")₫</div>
                                                                </div>
                                                            </div>
                                                        }
                                                        @if (order.OrderItems.Count > 3)
                                                        {
                                                            <small class="text-muted">Và @(order.OrderItems.Count - 3) sản phẩm khác...</small>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <small class="text-muted">Không có sản phẩm</small>
                                                }
                                            </div>
                                            <div class="col-md-4">
                                                <div class="order-actions text-end">
                                                    <a href="/Account/OrderDetail/@order.Id" class="btn btn-outline-primary btn-sm me-2">
                                                        <i class="fas fa-eye me-1"></i>Xem chi tiết
                                                    </a>
                                                    @if (order.Status != "cancelled" && order.Status != "delivered")
                                                    {
                                                        <button class="btn btn-outline-danger btn-sm" onclick="cancelOrder('@order.Id')">
                                                            <i class="fas fa-times me-1"></i>Hủy đơn
                                                        </button>
                                                    }
                                                </div>
                                                <div class="delivery-info mt-3">
                                                    @if (order.Status == "delivered" && order.DeliveredAt.HasValue)
                                                    {
                                                        <small class="text-muted">
                                                            <i class="fas fa-truck me-1"></i>Giao ngày: @order.DeliveredAt.Value.ToString("dd/MM/yyyy")
                                                        </small>
                                                    }
                                                    else if (order.Status == "shipped")
                                                    {
                                                        <small class="text-muted">
                                                            <i class="fas fa-truck me-1"></i>Đang giao hàng
                                                        </small>
                                                    }
                                                    else if (order.Status == "cancelled")
                                                    {
                                                        <small class="text-muted text-danger">
                                                            <i class="fas fa-info-circle me-1"></i>Đã hủy
                                                        </small>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <!-- Empty State -->
                        <div class="empty-orders text-center py-5">
                            <div class="empty-icon mb-4">
                                <i class="fas fa-shopping-bag fa-4x text-muted"></i>
                            </div>
                            <h5 class="mb-3">Chưa có đơn hàng nào</h5>
                            <p class="text-muted mb-4">Bạn chưa thực hiện đơn hàng nào. Hãy khám phá sản phẩm và mua sắm ngay!</p>
                            <a href="/" class="btn btn-primary">
                                <i class="fas fa-shopping-bag me-2"></i>Mua sắm ngay
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .order-item {
            border-radius: 0.5rem;
            overflow: hidden;
            transition: all 0.3s ease;
        }
        
        .order-item:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        
        .order-header {
            border-bottom: 1px solid #dee2e6;
        }
        
        .product-thumb {
            border-radius: 0.25rem;
            object-fit: cover;
            border: 1px solid #dee2e6;
        }
        
        .product-item h6 {
            font-size: 0.95rem;
            font-weight: 600;
            color: #333;
        }
        
        .price {
            font-weight: 600;
            color: #dc3545;
            font-size: 0.9rem;
        }
        
        .badge {
            font-size: 0.75rem;
            padding: 0.5rem 0.75rem;
        }
        
        .order-actions .btn {
            font-size: 0.8rem;
            padding: 0.4rem 0.8rem;
        }
        
        .delivery-info {
            font-size: 0.8rem;
        }
        
        .empty-icon i {
            opacity: 0.3;
        }
        
        .list-group-item {
            border: none;
            border-radius: 0.5rem;
            margin-bottom: 0.25rem;
            transition: all 0.3s ease;
        }
        
        .list-group-item.active {
            background-color: #dc3545;
            border-color: #dc3545;
        }
        
        .list-group-item:hover:not(.active) {
            background-color: #f8f9fa;
            transform: translateX(5px);
        }
        
        @@media (max-width: 768px) {
            .order-header .row,
            .order-body .row {
                text-align: center;
            }
            
            .order-actions {
                margin-top: 1rem;
                text-align: center !important;
            }
            
            .delivery-info {
                text-align: center;
            }
        }
    </style>
}

@section Scripts {
    <script>
        // Order filter functionality
        document.getElementById('orderFilter').addEventListener('change', function() {
            const filterValue = this.value;
            const orderItems = document.querySelectorAll('.order-item');
            let visibleCount = 0;
            
            orderItems.forEach(item => {
                const status = item.getAttribute('data-status');
                let shouldShow = true;
                
                if (filterValue) {
                    shouldShow = status === filterValue;
                }
                
                if (shouldShow) {
                    item.style.display = 'block';
                    visibleCount++;
                } else {
                    item.style.display = 'none';
                }
            });
            
            // Show empty state if no orders match filter
            const emptyState = document.querySelector('.empty-orders');
            const orderHistory = document.querySelector('.order-history');
            
            if (visibleCount === 0 && orderHistory) {
                orderHistory.style.display = 'none';
                if (emptyState) {
                    emptyState.style.display = 'block';
                }
            } else {
                if (orderHistory) {
                    orderHistory.style.display = 'block';
                }
                if (emptyState) {
                    emptyState.style.display = 'none';
                }
            }
        });
        
        // Toast notification function
        function showToast(message, type = 'info') {
            // Create toast container if it doesn't exist
            let toastContainer = document.getElementById('toast-container');
            if (!toastContainer) {
                toastContainer = document.createElement('div');
                toastContainer.id = 'toast-container';
                toastContainer.className = 'position-fixed top-0 end-0 p-3';
                toastContainer.style.zIndex = '1055';
                document.body.appendChild(toastContainer);
            }
            
            const toastId = 'toast-' + Date.now();
            const toast = document.createElement('div');
            toast.id = toastId;
            toast.className = `toast align-items-center text-white bg-${type === 'success' ? 'success' : type === 'error' ? 'danger' : type === 'warning' ? 'warning' : 'info'} border-0`;
            toast.setAttribute('role', 'alert');
            
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">${message}</div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            `;
            
            toastContainer.appendChild(toast);
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();
            
            toast.addEventListener('hidden.bs.toast', () => {
                toast.remove();
            });
        }
        
        // Cancel order function
        function cancelOrder(orderId) {
            if (confirm('Bạn có chắc muốn hủy đơn hàng này?')) {
                fetch('/Account/CancelOrder', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ orderId: orderId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showToast('Đơn hàng đã được hủy thành công!', 'success');
                        setTimeout(() => {
                            location.reload();
                        }, 1500);
                    } else {
                        showToast(data.message || 'Không thể hủy đơn hàng. Vui lòng thử lại.', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('Có lỗi xảy ra. Vui lòng thử lại.', 'error');
                });
            }
        }
    </script>
}
