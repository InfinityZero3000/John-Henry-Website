@model IEnumerable<JohnHenryFashionWeb.Models.ProductReview>
@{
    ViewData["Title"] = "Review Management";
    var totalReviews = ViewBag.TotalReviews ?? 0;
    var pendingReviews = ViewBag.PendingReviews ?? 0;
    var approvedReviews = ViewBag.ApprovedReviews ?? 0;
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
    var status = ViewBag.Status as string;
}

<style>
    .glassmorphism {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }

    .review-gradient {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .stat-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
    }

    .review-card {
        transition: all 0.3s ease;
    }

    .review-card:hover {
        transform: translateX(5px);
        background: rgba(255, 255, 255, 0.15);
    }

    .rating-stars {
        color: #ffc107;
    }

    .status-badge {
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .status-pending {
        background: rgba(255, 193, 7, 0.2);
        color: #ffa000;
        border: 1px solid rgba(255, 193, 7, 0.3);
    }

    .status-approved {
        background: rgba(76, 175, 80, 0.2);
        color: #4caf50;
        border: 1px solid rgba(76, 175, 80, 0.3);
    }
</style>

<div class="review-gradient min-vh-100 py-5">
    <div class="container">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="glassmorphism p-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="text-white mb-1">
                                <i class="fas fa-star me-2"></i>Review Management
                            </h2>
                            <p class="text-white-50 mb-0">Approve or reject product reviews</p>
                        </div>
                        <a href="/admin" class="btn btn-outline-light">
                            <i class="fas fa-arrow-left me-2"></i>Back to Admin
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="glassmorphism p-4 stat-card">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <p class="text-white-50 mb-1">Total Reviews</p>
                            <h3 class="text-white mb-0">@totalReviews</h3>
                        </div>
                        <div class="bg-white bg-opacity-25 p-3 rounded-circle">
                            <i class="fas fa-comments fa-2x text-white"></i>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="glassmorphism p-4 stat-card">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <p class="text-white-50 mb-1">Pending</p>
                            <h3 class="text-white mb-0">@pendingReviews</h3>
                        </div>
                        <div class="bg-warning bg-opacity-25 p-3 rounded-circle">
                            <i class="fas fa-clock fa-2x text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="glassmorphism p-4 stat-card">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <p class="text-white-50 mb-1">Approved</p>
                            <h3 class="text-white mb-0">@approvedReviews</h3>
                        </div>
                        <div class="bg-success bg-opacity-25 p-3 rounded-circle">
                            <i class="fas fa-check-circle fa-2x text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filters -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="glassmorphism p-3">
                    <form method="get" class="row g-3 align-items-end">
                        <div class="col-md-3">
                            <label class="text-white mb-2">Filter by Status</label>
                            <select name="status" class="form-select">
                                <option value="">All Reviews</option>
                                <option value="pending" selected="@(status == "pending")">Pending</option>
                                <option value="approved" selected="@(status == "approved")">Approved</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <button type="submit" class="btn btn-light w-100">
                                <i class="fas fa-filter me-2"></i>Apply Filter
                            </button>
                        </div>
                        <div class="col-md-6 text-end">
                            <button type="button" class="btn btn-success me-2" onclick="bulkApprove()">
                                <i class="fas fa-check me-2"></i>Bulk Approve
                            </button>
                            <button type="button" class="btn btn-danger" onclick="bulkReject()">
                                <i class="fas fa-times me-2"></i>Bulk Reject
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Reviews List -->
        <div class="row">
            <div class="col-12">
                <div class="glassmorphism p-4">
                    @if (Model != null && Model.Any())
                    {
                        <form id="bulkForm">
                            <div class="table-responsive">
                                <table class="table table-dark table-hover mb-0">
                                    <thead>
                                        <tr>
                                            <th width="50">
                                                <input type="checkbox" id="selectAll" class="form-check-input">
                                            </th>
                                            <th>Product</th>
                                            <th>User</th>
                                            <th>Rating</th>
                                            <th>Review</th>
                                            <th>Date</th>
                                            <th>Status</th>
                                            <th width="150">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var review in Model)
                                        {
                                            <tr class="review-card">
                                                <td>
                                                    <input type="checkbox" name="reviewIds" value="@review.Id" class="form-check-input review-checkbox">
                                                </td>
                                                <td>
                                                    <div class="text-white">@review.Product?.Name</div>
                                                </td>
                                                <td>
                                                    <div class="text-white">@review.User?.UserName</div>
                                                    <small class="text-white-50">@review.User?.Email</small>
                                                </td>
                                                <td>
                                                    <div class="rating-stars">
                                                        @for (int i = 0; i < review.Rating; i++)
                                                        {
                                                            <i class="fas fa-star"></i>
                                                        }
                                                        @for (int i = review.Rating; i < 5; i++)
                                                        {
                                                            <i class="far fa-star"></i>
                                                        }
                                                    </div>
                                                    <small class="text-white-50">@review.Rating/5</small>
                                                </td>
                                                <td>
                                                    @if (!string.IsNullOrEmpty(review.Title))
                                                    {
                                                        <div class="text-white fw-bold">@review.Title</div>
                                                    }
                                                    <div class="text-white-50" style="max-width: 300px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                                        @review.Comment
                                                    </div>
                                                </td>
                                                <td>
                                                    <small class="text-white-50">@review.CreatedAt.ToString("MMM dd, yyyy")</small>
                                                </td>
                                                <td>
                                                    @if (review.IsApproved)
                                                    {
                                                        <span class="status-badge status-approved">
                                                            <i class="fas fa-check-circle me-1"></i>Approved
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="status-badge status-pending">
                                                            <i class="fas fa-clock me-1"></i>Pending
                                                        </span>
                                                    }
                                                </td>
                                                <td>
                                                    <a href="/admin/approvals/reviews/@review.Id" class="btn btn-sm btn-info me-1" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    @if (!review.IsApproved)
                                                    {
                                                        <button type="button" class="btn btn-sm btn-success" onclick="approveReview(@review.Id)" title="Approve">
                                                            <i class="fas fa-check"></i>
                                                        </button>
                                                    }
                                                    <button type="button" class="btn btn-sm btn-danger" onclick="rejectReview(@review.Id)" title="Reject">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </form>

                        <!-- Pagination -->
                        @if (totalPages > 1)
                        {
                            <nav class="mt-4">
                                <ul class="pagination justify-content-center mb-0">
                                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                        <a class="page-link" href="?page=@(currentPage - 1)@(string.IsNullOrEmpty(status) ? "" : "&status=" + status)">Previous</a>
                                    </li>
                                    @for (int i = 1; i <= totalPages; i++)
                                    {
                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                            <a class="page-link" href="?page=@i@(string.IsNullOrEmpty(status) ? "" : "&status=" + status)">@i</a>
                                        </li>
                                    }
                                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                        <a class="page-link" href="?page=@(currentPage + 1)@(string.IsNullOrEmpty(status) ? "" : "&status=" + status)">Next</a>
                                    </li>
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-inbox fa-3x text-white-50 mb-3"></i>
                            <p class="text-white-50">No reviews found</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Select all checkbox
        document.getElementById('selectAll')?.addEventListener('change', function() {
            const checkboxes = document.querySelectorAll('.review-checkbox');
            checkboxes.forEach(cb => cb.checked = this.checked);
        });

        // Approve single review
        function approveReview(id) {
            if (confirm('Are you sure you want to approve this review?')) {
                fetch(`/admin/approvals/reviews/${id}/approve`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    }
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Failed to approve review');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred');
                });
            }
        }

        // Reject single review
        function rejectReview(id) {
            const reason = prompt('Enter rejection reason (optional):');
            if (reason !== null) {
                fetch(`/admin/approvals/reviews/${id}/reject`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify({ reason: reason })
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Failed to reject review');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred');
                });
            }
        }

        // Bulk approve
        function bulkApprove() {
            const checkedBoxes = document.querySelectorAll('.review-checkbox:checked');
            if (checkedBoxes.length === 0) {
                alert('Please select at least one review');
                return;
            }

            const ids = Array.from(checkedBoxes).map(cb => parseInt(cb.value));
            
            if (confirm(`Are you sure you want to approve ${ids.length} review(s)?`)) {
                fetch('/admin/approvals/reviews/bulk-approve', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify({ reviewIds: ids })
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Failed to approve reviews');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred');
                });
            }
        }

        // Bulk reject
        function bulkReject() {
            const checkedBoxes = document.querySelectorAll('.review-checkbox:checked');
            if (checkedBoxes.length === 0) {
                alert('Please select at least one review');
                return;
            }

            const ids = Array.from(checkedBoxes).map(cb => parseInt(cb.value));
            
            if (confirm(`Are you sure you want to reject ${ids.length} review(s)?`)) {
                fetch('/admin/approvals/reviews/bulk-reject', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify({ reviewIds: ids })
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Failed to reject reviews');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred');
                });
            }
        }
    </script>
}
