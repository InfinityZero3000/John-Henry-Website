@model JohnHenryFashionWeb.Models.ProductReview
@{
    ViewData["Title"] = "Review Details";
    var userReviews = ViewBag.UserReviews as List<JohnHenryFashionWeb.Models.ProductReview> ?? new List<JohnHenryFashionWeb.Models.ProductReview>();
}

<style>
    .glassmorphism {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }

    .review-gradient {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .rating-stars {
        color: #ffc107;
        font-size: 1.5rem;
    }

    .product-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-radius: 10px;
    }

    .status-badge {
        padding: 6px 16px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .status-pending {
        background: rgba(255, 193, 7, 0.2);
        color: #ffa000;
        border: 1px solid rgba(255, 193, 7, 0.3);
    }

    .status-approved {
        background: rgba(76, 175, 80, 0.2);
        color: #4caf50;
        border: 1px solid rgba(76, 175, 80, 0.3);
    }

    .review-timeline-item {
        padding: 15px;
        border-left: 3px solid rgba(255, 255, 255, 0.3);
        margin-left: 20px;
        position: relative;
    }

    .review-timeline-item::before {
        content: '';
        position: absolute;
        left: -8px;
        top: 20px;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: white;
    }
</style>

<div class="review-gradient min-vh-100 py-5">
    <div class="container">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="glassmorphism p-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="text-white mb-1">
                                <i class="fas fa-star me-2"></i>Review Details
                            </h2>
                            <p class="text-white-50 mb-0">Review #@Model.Id</p>
                        </div>
                        <a href="/admin/approvals/reviews" class="btn btn-outline-light">
                            <i class="fas fa-arrow-left me-2"></i>Back to Reviews
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Left Column: Review Details -->
            <div class="col-lg-8">
                <!-- Product & Review Info -->
                <div class="glassmorphism p-4 mb-4">
                    <div class="row">
                        <div class="col-md-4">
                            @if (Model.Product?.GalleryImages != null && Model.Product.GalleryImages.Any())
                            {
                                <img src="@Model.Product.GalleryImages.First()" alt="@Model.Product.Name" class="product-image">
                            }
                            else if (!string.IsNullOrEmpty(Model.Product?.FeaturedImageUrl))
                            {
                                <img src="@Model.Product.FeaturedImageUrl" alt="@Model.Product.Name" class="product-image">
                            }
                            else
                            {
                                <div class="product-image bg-secondary d-flex align-items-center justify-content-center">
                                    <i class="fas fa-image fa-3x text-white-50"></i>
                                </div>
                            }
                        </div>
                        <div class="col-md-8">
                            <h4 class="text-white mb-2">@Model.Product?.Name</h4>
                            <p class="text-white-50 mb-3">
                                <i class="fas fa-tag me-2"></i>@Model.Product?.Category?.Name
                                <span class="mx-2">â€¢</span>
                                <i class="fas fa-dollar-sign me-1"></i>@Model.Product?.Price.ToString("N0")
                            </p>
                            
                            <div class="mb-3">
                                <div class="rating-stars mb-2">
                                    @for (int i = 0; i < Model.Rating; i++)
                                    {
                                        <i class="fas fa-star"></i>
                                    }
                                    @for (int i = Model.Rating; i < 5; i++)
                                    {
                                        <i class="far fa-star"></i>
                                    }
                                </div>
                                <span class="text-white">@Model.Rating out of 5 stars</span>
                            </div>

                            <div class="mb-3">
                                @if (Model.IsApproved)
                                {
                                    <span class="status-badge status-approved">
                                        <i class="fas fa-check-circle me-1"></i>Approved
                                    </span>
                                }
                                else
                                {
                                    <span class="status-badge status-pending">
                                        <i class="fas fa-clock me-1"></i>Pending Approval
                                    </span>
                                }
                            </div>

                            <p class="text-white-50 mb-0">
                                <i class="fas fa-calendar me-2"></i>Submitted: @Model.CreatedAt.ToString("MMMM dd, yyyy 'at' HH:mm")
                            </p>
                            @if (Model.UpdatedAt != Model.CreatedAt)
                            {
                                <p class="text-white-50 mb-0">
                                    <i class="fas fa-edit me-2"></i>Updated: @Model.UpdatedAt.ToString("MMMM dd, yyyy 'at' HH:mm")
                                </p>
                            }
                        </div>
                    </div>
                </div>

                <!-- Review Content -->
                <div class="glassmorphism p-4 mb-4">
                    <h5 class="text-white mb-3">
                        <i class="fas fa-comment-dots me-2"></i>Review Content
                    </h5>
                    
                    @if (!string.IsNullOrEmpty(Model.Title))
                    {
                        <h6 class="text-white mb-3">@Model.Title</h6>
                    }
                    
                    <p class="text-white-50 mb-0" style="line-height: 1.8;">
                        @Model.Comment
                    </p>
                </div>

                <!-- Actions -->
                @if (!Model.IsApproved)
                {
                    <div class="glassmorphism p-4">
                        <h5 class="text-white mb-3">
                            <i class="fas fa-tasks me-2"></i>Actions
                        </h5>
                        
                        <form method="post" action="/admin/approvals/reviews/@Model.Id/approve" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-success me-2">
                                <i class="fas fa-check me-2"></i>Approve Review
                            </button>
                        </form>
                        
                        <button type="button" class="btn btn-danger" onclick="showRejectModal()">
                            <i class="fas fa-times me-2"></i>Reject Review
                        </button>
                    </div>
                }
            </div>

            <!-- Right Column: User Info & History -->
            <div class="col-lg-4">
                <!-- User Information -->
                <div class="glassmorphism p-4 mb-4">
                    <h5 class="text-white mb-3">
                        <i class="fas fa-user me-2"></i>Reviewer Information
                    </h5>
                    
                    <div class="mb-3">
                        <p class="text-white-50 mb-1">Username</p>
                        <p class="text-white mb-0">@Model.User?.UserName</p>
                    </div>
                    
                    <div class="mb-3">
                        <p class="text-white-50 mb-1">Email</p>
                        <p class="text-white mb-0">@Model.User?.Email</p>
                    </div>
                    
                    @if (Model.User?.PhoneNumber != null)
                    {
                        <div class="mb-3">
                            <p class="text-white-50 mb-1">Phone</p>
                            <p class="text-white mb-0">@Model.User.PhoneNumber</p>
                        </div>
                    }
                    
                    <div class="mb-0">
                        <p class="text-white-50 mb-1">Member Since</p>
                        <p class="text-white mb-0">@Model.User?.CreatedAt.ToString("MMMM yyyy")</p>
                    </div>
                </div>

                <!-- Review History -->
                <div class="glassmorphism p-4">
                    <h5 class="text-white mb-3">
                        <i class="fas fa-history me-2"></i>User's Review History
                    </h5>
                    
                    @if (userReviews.Any())
                    {
                        <div class="mb-3">
                            <div class="d-flex justify-content-between mb-2">
                                <span class="text-white-50">Total Reviews</span>
                                <span class="text-white fw-bold">@userReviews.Count</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span class="text-white-50">Approved</span>
                                <span class="text-success fw-bold">@userReviews.Count(r => r.IsApproved)</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span class="text-white-50">Pending</span>
                                <span class="text-warning fw-bold">@userReviews.Count(r => !r.IsApproved)</span>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span class="text-white-50">Average Rating</span>
                                <span class="text-white fw-bold">@userReviews.Average(r => r.Rating).ToString("0.0")</span>
                            </div>
                        </div>

                        <hr class="border-light opacity-25">

                        <h6 class="text-white mb-3">Recent Reviews</h6>
                        <div style="max-height: 400px; overflow-y: auto;">
                            @foreach (var review in userReviews.OrderByDescending(r => r.CreatedAt).Take(5))
                            {
                                <div class="review-timeline-item mb-3">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <span class="text-white fw-bold">@review.Product?.Name</span>
                                        @if (review.IsApproved)
                                        {
                                            <i class="fas fa-check-circle text-success"></i>
                                        }
                                        else
                                        {
                                            <i class="fas fa-clock text-warning"></i>
                                        }
                                    </div>
                                    <div class="mb-2">
                                        <small class="text-warning">
                                            @for (int i = 0; i < review.Rating; i++)
                                            {
                                                <i class="fas fa-star"></i>
                                            }
                                        </small>
                                    </div>
                                    <p class="text-white-50 small mb-2" style="display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;">
                                        @review.Comment
                                    </p>
                                    <small class="text-white-50">@review.CreatedAt.ToString("MMM dd, yyyy")</small>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-inbox fa-2x text-white-50 mb-2"></i>
                            <p class="text-white-50 mb-0">No review history</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Reject Modal -->
<div class="modal fade" id="rejectModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content bg-dark">
            <div class="modal-header border-secondary">
                <h5 class="modal-title text-white">Reject Review</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" action="/admin/approvals/reviews/@Model.Id/reject">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label text-white">Rejection Reason (Optional)</label>
                        <textarea name="reason" class="form-control" rows="3" placeholder="Enter reason for rejecting this review..."></textarea>
                        <small class="text-white-50">This reason will be logged for administrative purposes.</small>
                    </div>
                </div>
                <div class="modal-footer border-secondary">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-times me-2"></i>Reject Review
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showRejectModal() {
            const modal = new bootstrap.Modal(document.getElementById('rejectModal'));
            modal.show();
        }
    </script>
}
