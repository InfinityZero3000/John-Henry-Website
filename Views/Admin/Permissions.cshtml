@{
    ViewData["Title"] = "Quản lý quyền hạn";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Breadcrumb"] = "<li class=\"breadcrumb-item active\">Quyền Hạn</li>";
}

<div class="admin-content">
    <!-- Page Header -->
    <div class="admin-page-header">
        <div class="admin-flex-between">
            <h1 class="admin-page-title">
                <i data-lucide="shield"></i>
                Quản lý quyền hạn
            </h1>
            <button class="admin-btn admin-btn-primary" data-bs-toggle="modal" data-bs-target="#createRoleModal">
                <i data-lucide="plus"></i>
                Tạo vai trò mới
            </button>
        </div>
    </div>

    <!-- Content Section -->
    <div class="row">
        <!-- Roles Section -->
        <div class="col-lg-6">
            <div class="admin-card">
                <div class="admin-card-header">
                    <h5 style="margin: 0;">Danh sách vai trò</h5>
                </div>
                <div class="admin-card-body">
                    <div class="admin-list-group">
                        <div class="admin-list-item" style="display: flex; justify-content: space-between; align-items: center; padding: 1rem; border-bottom: 1px solid var(--admin-border);">
                            <div style="display: flex; align-items: center; gap: 0.75rem;">
                                <i data-lucide="crown" style="width: 20px; height: 20px; color: var(--status-warning-text);"></i>
                                <div>
                                    <h6 style="margin: 0; font-weight: 600;">Admin</h6>
                                    <small style="color: var(--admin-text-light);">Quyền quản trị toàn bộ hệ thống</small>
                                </div>
                            </div>
                            <div style="display: flex; gap: 0.5rem; align-items: center;">
                                <span class="admin-badge admin-badge-primary">Hệ thống</span>
                                <button class="admin-btn admin-btn-sm admin-btn-secondary" onclick="viewRole('Admin')">
                                    <i data-lucide="eye"></i>
                                </button>
                            </div>
                        </div>
                        
                        <div class="admin-list-item" style="display: flex; justify-content: space-between; align-items: center; padding: 1rem; border-bottom: 1px solid var(--admin-border);">
                            <div style="display: flex; align-items: center; gap: 0.75rem;">
                                <i data-lucide="store" style="width: 20px; height: 20px; color: var(--status-success-text);"></i>
                                <div>
                                    <h6 style="margin: 0; font-weight: 600;">Seller</h6>
                                    <small style="color: var(--admin-text-light);">Quyền quản lý đơn hàng</small>
                                </div>
                            </div>
                            <div style="display: flex; gap: 0.5rem; align-items: center;">
                                <span class="admin-badge admin-badge-primary">Hệ thống</span>
                                <button class="admin-btn admin-btn-sm admin-btn-secondary" onclick="viewRole('Seller')">
                                    <i data-lucide="eye"></i>
                                </button>
                            </div>
                        </div>

                        <div class="admin-list-item" style="display: flex; justify-content: space-between; align-items: center; padding: 1rem;">
                            <div style="display: flex; align-items: center; gap: 0.75rem;">
                                <i data-lucide="user" style="width: 20px; height: 20px; color: var(--status-info-text);"></i>
                                <div>
                                    <h6 style="margin: 0; font-weight: 600;">Customer</h6>
                                    <small style="color: var(--admin-text-light);">Quyền khách hàng cơ bản</small>
                                </div>
                            </div>
                            <div style="display: flex; gap: 0.5rem; align-items: center;">
                                <span class="admin-badge admin-badge-secondary">Mặc định</span>
                                <button class="admin-btn admin-btn-sm admin-btn-secondary" onclick="viewRole('Customer')">
                                    <i data-lucide="eye"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Role Permissions Detail -->
            <div class="admin-card" id="roleDetailCard" style="display: none; margin-top: 1.5rem;">
                <div class="admin-card-header">
                    <h5 style="margin: 0;">Chi tiết quyền hạn: <span id="selectedRoleName"></span></h5>
                </div>
                <div class="admin-card-body">
                    <div id="permissionsList">
                        <!-- Permissions will be loaded here -->
                    </div>
                </div>
            </div>
        </div>

        <!-- User Assignments Section -->
        <div class="col-lg-6">
            <div class="admin-card">
                <div class="admin-card-header">
                    <h5 style="margin: 0;">Phân quyền người dùng</h5>
                </div>
                <div class="admin-card-body">
                    <!-- Search User -->
                    <div style="margin-bottom: 1rem;">
                        <label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Tìm kiếm người dùng</label>
                        <div style="display: flex; gap: 0.5rem;">
                            <input type="text" class="form-control" placeholder="Nhập email hoặc tên..." id="userSearch" style="flex: 1;">
                            <button class="admin-btn admin-btn-secondary" type="button" onclick="searchUsers()">
                                <i data-lucide="search" style="width: 16px; height: 16px;"></i>
                            </button>
                        </div>
                    </div>

                    <!-- User Results -->
                    <div id="userResults">
                        <div style="text-align: center; color: var(--admin-text-light); padding: 2rem 0;">
                            <i data-lucide="search" style="width: 48px; height: 48px; margin-bottom: 0.5rem;"></i>
                            <p>Nhập từ khóa để tìm kiếm người dùng</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Recent Role Changes -->
            <div class="admin-card" style="margin-top: 1.5rem;">
                <div class="admin-card-header">
                    <h5 style="margin: 0;">Thay đổi gần đây</h5>
                </div>
                <div class="admin-card-body">
                    <div class="admin-list-item" style="display: flex; justify-content: space-between; align-items: center; padding: 1rem; border-bottom: 1px solid var(--admin-border);">
                        <div>
                            <h6 style="margin: 0 0 0.25rem 0; font-weight: 600;">Thêm vai trò Seller</h6>
                            <p style="margin: 0; color: var(--admin-text-light); font-size: 0.875rem;">user@example.com</p>
                        </div>
                        <small style="color: var(--admin-text-light);">2 giờ trước</small>
                    </div>
                    <div class="admin-list-item" style="display: flex; justify-content: space-between; align-items: center; padding: 1rem; border-bottom: 1px solid var(--admin-border);">
                        <div>
                            <h6 style="margin: 0 0 0.25rem 0; font-weight: 600;">Thay đổi quyền Admin</h6>
                            <p style="margin: 0; color: var(--admin-text-light); font-size: 0.875rem;">admin@example.com</p>
                        </div>
                        <small style="color: var(--admin-text-light);">1 ngày trước</small>
                    </div>
                    <div class="admin-list-item" style="display: flex; justify-content: space-between; align-items: center; padding: 1rem;">
                        <div>
                            <h6 style="margin: 0 0 0.25rem 0; font-weight: 600;">Tạo vai trò mới</h6>
                            <p style="margin: 0; color: var(--admin-text-light); font-size: 0.875rem;">Manager</p>
                        </div>
                        <small style="color: var(--admin-text-light);">3 ngày trước</small>
                    </div>
                </div>
            </div>
        </div>
        </div>
    </div>
</div>

<!-- Create Role Modal -->
<div class="modal fade" id="createRoleModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Tạo vai trò mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createRoleForm">
                    <div class="mb-3">
                        <label for="roleName" class="form-label">Tên vai trò <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="roleName" required>
                    </div>
                    <div class="mb-3">
                        <label for="roleDescription" class="form-label">Mô tả</label>
                        <textarea class="form-control" id="roleDescription" rows="3"></textarea>
                    </div>
                    
                    <h6>Chọn quyền hạn:</h6>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <h6 class="text-muted">Quản lý đơn hàng</h6>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="perm_order_view">
                                    <label class="form-check-label" for="perm_order_view">Xem đơn hàng</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="perm_order_edit">
                                    <label class="form-check-label" for="perm_order_edit">Sửa đơn hàng</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="perm_order_delete">
                                    <label class="form-check-label" for="perm_order_delete">Xóa đơn hàng</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <h6 class="text-muted">Quản lý người dùng</h6>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="perm_user_view">
                                    <label class="form-check-label" for="perm_user_view">Xem người dùng</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="perm_user_edit">
                                    <label class="form-check-label" for="perm_user_edit">Sửa người dùng</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="perm_user_roles">
                                    <label class="form-check-label" for="perm_user_roles">Quản lý vai trò</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <h6 class="text-muted">Hệ thống</h6>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="perm_system_settings">
                                    <label class="form-check-label" for="perm_system_settings">Cài đặt hệ thống</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="perm_system_reports">
                                    <label class="form-check-label" for="perm_system_reports">Báo cáo</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="perm_system_logs">
                                    <label class="form-check-label" for="perm_system_logs">Xem logs</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="admin-btn admin-btn-secondary" data-bs-dismiss="modal">
                    <i data-lucide="x" style="width: 16px; height: 16px;"></i>
                    Hủy
                </button>
                <button type="button" class="admin-btn admin-btn-primary" onclick="createRole()">
                    <i data-lucide="plus" style="width: 16px; height: 16px;"></i>
                    Tạo vai trò
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Edit User Roles Modal -->
<div class="modal fade" id="editUserRolesModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Sửa quyền người dùng: <span id="editUserName"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="editUserId">
                <p class="text-muted mb-3">Chọn vai trò cho người dùng này:</p>
                <div id="rolesCheckboxes">
                    <!-- Roles will be loaded here -->
                    <div style="text-align: center; padding: 2rem;">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="admin-btn admin-btn-secondary" data-bs-dismiss="modal">
                    <i data-lucide="x" style="width: 16px; height: 16px;"></i>
                    Hủy
                </button>
                <button type="button" class="admin-btn admin-btn-primary" onclick="saveUserRoles()">
                    <i data-lucide="save" style="width: 16px; height: 16px;"></i>
                    Lưu thay đổi
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    // API URLs
    const API_BASE = '/api/admin/permissions';

    // View role permissions
    async function viewRole(roleName) {
        document.getElementById('selectedRoleName').textContent = roleName;
        document.getElementById('roleDetailCard').style.display = 'block';
        
        await loadRolePermissions(roleName);
    }

    // Load permissions from API
    async function loadRolePermissions(roleName) {
        const permissionsList = document.getElementById('permissionsList');
        
        try {
            permissionsList.innerHTML = '<div style="text-align: center; padding: 2rem;"><div class="spinner-border" role="status"></div></div>';
            
            const response = await fetch(`${API_BASE}/roles/${roleName}`);
            
            if (!response.ok) {
                throw new Error('Không thể tải quyền hạn');
            }
            
            const permissions = await response.json();
            
            if (permissions.length === 0) {
                permissionsList.innerHTML = `
                    <div style="text-align: center; color: var(--admin-text-light); padding: 2rem 0;">
                        <p>Vai trò này chưa có quyền hạn nào</p>
                    </div>
                `;
                return;
            }
            
            // Group permissions by module
            const groupedPerms = {};
            permissions.forEach(perm => {
                const module = perm.module || 'Khác';
                if (!groupedPerms[module]) {
                    groupedPerms[module] = [];
                }
                groupedPerms[module].push(perm);
            });
            
            // Display permissions grouped by module
            permissionsList.innerHTML = Object.entries(groupedPerms).map(([module, perms]) => `
                <div style="margin-bottom: 1.5rem;">
                    <h6 style="color: var(--admin-text-light); margin-bottom: 0.75rem; font-size: 0.875rem; text-transform: uppercase;">
                        ${module}
                    </h6>
                    ${perms.map(perm => `
                        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.75rem; padding: 0.5rem; background-color: var(--admin-bg-light); border-radius: 0.375rem;">
                            <span>${perm.name}</span>
                            <span class="admin-badge ${perm.granted ? 'admin-badge-success' : 'admin-badge-secondary'}">
                                ${perm.granted ? 'Có quyền' : 'Không có quyền'}
                            </span>
                        </div>
                    `).join('')}
                </div>
            `).join('');
            
        } catch (error) {
            console.error('Error loading permissions:', error);
            permissionsList.innerHTML = `
                <div style="text-align: center; color: var(--status-danger-text); padding: 2rem 0;">
                    <i data-lucide="alert-circle" style="width: 48px; height: 48px; margin-bottom: 0.5rem;"></i>
                    <p>Không thể tải quyền hạn. Vui lòng thử lại.</p>
                </div>
            `;
            if (typeof lucide !== 'undefined') {
                lucide.createIcons();
            }
        }
    }

    // Search users via API
    async function searchUsers() {
        const searchTerm = document.getElementById('userSearch').value.trim();
        const userResults = document.getElementById('userResults');
        
        if (searchTerm.length < 2) {
            userResults.innerHTML = `
                <div style="text-align: center; color: var(--admin-text-light); padding: 2rem 0;">
                    <i data-lucide="search" style="width: 48px; height: 48px; margin-bottom: 0.5rem;"></i>
                    <p>Nhập ít nhất 2 ký tự để tìm kiếm</p>
                </div>
            `;
            if (typeof lucide !== 'undefined') {
                lucide.createIcons();
            }
            return;
        }

        try {
            userResults.innerHTML = '<div style="text-align: center; padding: 2rem;"><div class="spinner-border" role="status"></div></div>';
            
            const response = await fetch(`${API_BASE}/users/search?term=${encodeURIComponent(searchTerm)}`);
            
            if (!response.ok) {
                throw new Error('Không thể tìm kiếm người dùng');
            }
            
            const users = await response.json();
            displayUsers(users);
            
        } catch (error) {
            console.error('Error searching users:', error);
            userResults.innerHTML = `
                <div style="text-align: center; color: var(--status-danger-text); padding: 2rem 0;">
                    <i data-lucide="alert-circle" style="width: 48px; height: 48px; margin-bottom: 0.5rem;"></i>
                    <p>Không thể tìm kiếm. Vui lòng thử lại.</p>
                </div>
            `;
            if (typeof lucide !== 'undefined') {
                lucide.createIcons();
            }
        }
    }

    // Display search results
    function displayUsers(users) {
        const userResults = document.getElementById('userResults');
        
        if (users.length === 0) {
            userResults.innerHTML = `
                <div style="text-align: center; color: var(--admin-text-light); padding: 2rem 0;">
                    <i data-lucide="user-x" style="width: 48px; height: 48px; margin-bottom: 0.5rem;"></i>
                    <p>Không tìm thấy người dùng nào</p>
                </div>
            `;
            if (typeof lucide !== 'undefined') {
                lucide.createIcons();
            }
            return;
        }

        userResults.innerHTML = users.map(user => `
            <div class="admin-card" style="margin-bottom: 0.75rem;">
                <div class="admin-card-body" style="padding: 1rem;">
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                        <div style="flex: 1;">
                            <h6 style="margin: 0 0 0.25rem 0; font-weight: 600;">${escapeHtml(user.fullName || user.email)}</h6>
                            <p style="margin: 0 0 0.5rem 0; color: var(--admin-text-light); font-size: 0.875rem;">${escapeHtml(user.email)}</p>
                            <div style="display: flex; gap: 0.375rem; flex-wrap: wrap;">
                                ${user.roles.map(role => `<span class="admin-badge admin-badge-primary">${escapeHtml(role)}</span>`).join('')}
                            </div>
                        </div>
                        <div>
                            <button class="admin-btn admin-btn-sm admin-btn-primary" onclick="editUserRoles('${user.id}', '${escapeHtml(user.fullName || user.email)}', ${JSON.stringify(user.roles).replace(/"/g, '&quot;')})">
                                <i data-lucide="edit" style="width: 16px; height: 16px;"></i>
                                Sửa quyền
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `).join('');
        
        if (typeof lucide !== 'undefined') {
            lucide.createIcons();
        }
    }

    // Edit user roles
    function editUserRoles(userId, userName, currentRoles) {
        // Show edit roles modal
        const modal = new bootstrap.Modal(document.getElementById('editUserRolesModal'));
        
        // Set user info
        document.getElementById('editUserName').textContent = userName;
        document.getElementById('editUserId').value = userId;
        
        // Load all roles and check current ones
        loadRolesForUser(currentRoles);
        
        modal.show();
    }

    // Load roles checkboxes
    async function loadRolesForUser(currentRoles) {
        const rolesContainer = document.getElementById('rolesCheckboxes');
        
        try {
            const response = await fetch(`${API_BASE}/roles`);
            const allRoles = await response.json();
            
            rolesContainer.innerHTML = allRoles.map(role => `
                <div class="form-check" style="margin-bottom: 0.75rem;">
                    <input class="form-check-input" type="checkbox" value="${role}" id="role_${role}" 
                           ${currentRoles.includes(role) ? 'checked' : ''}>
                    <label class="form-check-label" for="role_${role}">
                        ${role}
                    </label>
                </div>
            `).join('');
            
        } catch (error) {
            console.error('Error loading roles:', error);
            rolesContainer.innerHTML = '<p class="text-danger">Không thể tải danh sách vai trò</p>';
        }
    }

    // Save user roles
    async function saveUserRoles() {
        const userId = document.getElementById('editUserId').value;
        const selectedRoles = [];
        
        document.querySelectorAll('#rolesCheckboxes input[type="checkbox"]:checked').forEach(cb => {
            selectedRoles.push(cb.value);
        });
        
        if (selectedRoles.length === 0) {
            alert('Vui lòng chọn ít nhất một vai trò');
            return;
        }
        
        try {
            const response = await fetch(`${API_BASE}/users/${userId}/roles`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ roles: selectedRoles })
            });
            
            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.message || 'Không thể cập nhật vai trò');
            }
            
            // Close modal and refresh search
            bootstrap.Modal.getInstance(document.getElementById('editUserRolesModal')).hide();
            
            // Show success message
            showToast('Cập nhật vai trò thành công', 'success');
            
            // Refresh search results
            searchUsers();
            
        } catch (error) {
            console.error('Error saving roles:', error);
            alert('Lỗi: ' + error.message);
        }
    }

    // Helper function to escape HTML
    function escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }

    // Show toast notification
    function showToast(message, type = 'info') {
        // Simple toast implementation - you can enhance this
        const toast = document.createElement('div');
        toast.className = `alert alert-${type === 'success' ? 'success' : 'danger'} position-fixed`;
        toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
        toast.textContent = message;
        
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.remove();
        }, 3000);
    }

    // Allow Enter key to trigger search
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('userSearch');
        if (searchInput) {
            searchInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    searchUsers();
                }
            });
        }
    });

    function createRole() {
        const roleName = document.getElementById('roleName').value;
        const roleDescription = document.getElementById('roleDescription').value;
        
        if (!roleName) {
            alert('Vui lòng nhập tên vai trò');
            return;
        }

        // Collect selected permissions
        const permissions = [];
        document.querySelectorAll('input[type="checkbox"]:checked').forEach(cb => {
            permissions.push(cb.id);
        });

        // In real app, send to server
        alert('Vai trò đã được tạo thành công!');
        bootstrap.Modal.getInstance(document.getElementById('createRoleModal')).hide();
    }
</script>

<style>
    .table th {
        border-top: none;
        font-weight: 600;
        color: #495057;
        background-color: #f8f9fa;
    }

    .table td {
        vertical-align: middle;
    }

    .timeline-item {
        padding: 0.75rem;
        border-left: 3px solid #007bff;
        margin-bottom: 1rem;
        background-color: #f8f9fa;
        border-radius: 0.375rem;
    }
</style>

@section Scripts {
    <script>
        // Initialize Lucide icons on page load
        if (typeof lucide !== 'undefined') {
            lucide.createIcons();
        }
    </script>
}