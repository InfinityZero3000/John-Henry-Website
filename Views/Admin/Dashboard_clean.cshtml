@model JohnHenryFashionWeb.ViewModels.AdminDashboardViewModel
@{
    ViewData["Title"] = "Dashboard Quản Trị";
    Layout = "Views/Shared/_Layout.cshtml";
}

@section Styles {
    <style>
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }
        
        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-2px);
        }
        
        .stat-card.revenue {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        }
        
        .stat-card.orders {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .stat-card.users {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        }
        
        .stat-card.growth {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }
        
        .stat-value {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }
        
        .stat-label {
            opacity: 0.9;
            font-size: 0.9rem;
        }
        
        .stat-icon {
            position: absolute;
            top: 1rem;
            right: 1rem;
            opacity: 0.3;
            font-size: 2rem;
        }
        
        .chart-container {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }
        
        .admin-table {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .table-header {
            background: #f8f9fa;
            padding: 1rem 1.5rem;
            border-bottom: 1px solid #dee2e6;
            font-weight: 600;
        }
        
        .table-footer {
            background: #f8f9fa;
            border-top: 1px solid #dee2e6;
        }
        
        .product-image {
            width: 40px;
            height: 40px;
            object-fit: cover;
            border-radius: 6px;
        }
        
        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }
        
        .progress-wrapper {
            position: relative;
            margin-bottom: 1rem;
        }
        
        .progress-label {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
        }
    </style>
}

<div class="container-fluid py-4">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="h3 mb-0">Dashboard Quản Trị</h1>
            <p class="text-muted">Tổng quan hệ thống John Henry Fashion</p>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="stats-grid">
        <div class="stat-card revenue position-relative">
            <i class="fas fa-chart-line stat-icon"></i>
            <div class="stat-value">@Model.Stats.TodayRevenue.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</div>
            <div class="stat-label">Doanh thu hôm nay</div>
        </div>
        
        <div class="stat-card orders position-relative">
            <i class="fas fa-shopping-cart stat-icon"></i>
            <div class="stat-value">@Model.Stats.TodayOrders</div>
            <div class="stat-label">Đơn hàng hôm nay</div>
        </div>
        
        <div class="stat-card users position-relative">
            <i class="fas fa-users stat-icon"></i>
            <div class="stat-value">@Model.Stats.TotalUsers</div>
            <div class="stat-label">Tổng người dùng</div>
        </div>
        
        <div class="stat-card growth position-relative">
            <i class="fas fa-trending-up stat-icon"></i>
            <div class="stat-value">@Model.Stats.GrowthRate.ToString("F1")%</div>
            <div class="stat-label">Tăng trưởng</div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row mb-4">
        <div class="col-md-8">
            <div class="chart-container">
                <h5 class="mb-3">Doanh thu theo tháng</h5>
                <canvas id="revenueChart" height="100"></canvas>
            </div>
        </div>
        <div class="col-md-4">
            <div class="chart-container">
                <h5 class="mb-3">Phân bố danh mục</h5>
                <canvas id="categoryChart" height="200"></canvas>
            </div>
        </div>
    </div>

    <!-- Recent Orders and Top Products -->
    <div class="row">
        <div class="col-md-7">
            <div class="admin-table">
                <div class="table-header">
                    <i class="fas fa-clock me-2"></i>
                    Đơn hàng gần đây
                </div>
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Mã đơn</th>
                                <th>Khách hàng</th>
                                <th>Tổng tiền</th>
                                <th>Trạng thái</th>
                                <th>Ngày tạo</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.RecentOrders.Take(5))
                            {
                                <tr>
                                    <td>
                                        <strong class="text-primary">#@order.OrderNumber</strong>
                                    </td>
                                    <td>
                                        <div>@order.CustomerName</div>
                                        <small class="text-muted">@order.CustomerEmail</small>
                                    </td>
                                    <td>
                                        <strong class="text-success">
                                            @order.Total.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                                        </strong>
                                    </td>
                                    <td>
                                        <span class="badge bg-@(order.Status == "Completed" ? "success" : order.Status == "Pending" ? "warning" : "info")">
                                            @order.Status
                                        </span>
                                    </td>
                                    <td>
                                        <small class="text-muted">@order.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="table-footer p-3 text-center">
                    <a href="@Url.Action("Orders", "Admin")" class="btn btn-outline-primary">
                        <i class="fas fa-list me-1"></i>
                        Xem tất cả đơn hàng
                    </a>
                </div>
            </div>
        </div>
        
        <div class="col-md-5">
            <div class="admin-table">
                <div class="table-header">
                    <i class="fas fa-star me-2"></i>
                    Sản phẩm bán chạy
                </div>
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Sản phẩm</th>
                                <th>Giá</th>
                                <th>Đã bán</th>
                                <th>Doanh thu</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in Model.TopProducts.Take(5))
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(product.ImageUrl))
                                            {
                                                <img src="@product.ImageUrl" alt="@product.ProductName" class="product-image me-2">
                                            }
                                            <div>
                                                <div class="product-name">@product.ProductName</div>
                                                <small class="product-price">@product.Price.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <strong>@product.Price.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</strong>
                                    </td>
                                    <td>
                                        <span class="sold-count">@product.TotalSold</span>
                                    </td>
                                    <td>
                                        <strong class="text-success">
                                            @product.Revenue.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                                        </strong>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="table-footer p-3 text-center">
                    <a href="@Url.Action("Products", "Admin")" class="btn btn-outline-primary">
                        <i class="fas fa-box me-1"></i>
                        Xem tất cả sản phẩm
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Notification Area -->
<div id="notificationArea" class="position-fixed" style="top: 20px; right: 20px; z-index: 1050;"></div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Revenue Chart
            const revenueCtx = document.getElementById('revenueChart').getContext('2d');
            const revenueChart = new Chart(revenueCtx, {
                type: 'line',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.RevenueChart.Select(r => $"{r.Month}/{r.Year}"))),
                    datasets: [{
                        label: 'Doanh thu',
                        data: @Html.Raw(Json.Serialize(Model.RevenueChart.Select(r => r.Revenue))),
                        borderColor: '#667eea',
                        backgroundColor: 'rgba(102, 126, 234, 0.1)',
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return new Intl.NumberFormat('vi-VN', {
                                        style: 'currency',
                                        currency: 'VND'
                                    }).format(value);
                                }
                            }
                        }
                    }
                }
            });

            // Category Distribution Chart
            const categoryCtx = document.getElementById('categoryChart').getContext('2d');
            const categoryChart = new Chart(categoryCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Áo nam', 'Áo nữ', 'Quần', 'Đầm', 'Chân váy'],
                    datasets: [{
                        data: [30, 25, 20, 15, 10],
                        backgroundColor: [
                            '#667eea',
                            '#764ba2',
                            '#f093fb',
                            '#f5576c',
                            '#4facfe'
                        ],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });

            // Real-time updates simulation
            setInterval(function() {
                updateDashboardStats();
            }, 30000); // Update every 30 seconds

            // Add fade in animations
            const elements = document.querySelectorAll('.stat-card, .chart-container, .admin-table');
            elements.forEach((el, index) => {
                setTimeout(() => {
                    el.style.opacity = '0';
                    el.style.transform = 'translateY(20px)';
                    el.style.transition = 'all 0.5s ease';
                    
                    setTimeout(() => {
                        el.style.opacity = '1';
                        el.style.transform = 'translateY(0)';
                    }, 100);
                }, index * 100);
            });
        });

        function updateDashboardStats() {
            // Simulate real-time data updates
            fetch('/Admin/GetDashboardStats')
                .then(response => response.json())
                .then(data => {
                    // Update stat cards with new data
                    updateStatCard('todayRevenue', data.todayRevenue);
                    updateStatCard('todayOrders', data.todayOrders);
                    updateStatCard('totalUsers', data.totalUsers);
                    updateStatCard('growthRate', data.growthRate + '%');
                })
                .catch(error => {
                    console.log('Dashboard update error:', error);
                });
        }

        function updateStatCard(cardType, value) {
            const card = document.querySelector(`.stat-card.${cardType} .stat-value`);
            if (card) {
                card.textContent = value;
                card.classList.add('animate__animated', 'animate__pulse');
                setTimeout(() => {
                    card.classList.remove('animate__animated', 'animate__pulse');
                }, 1000);
            }
        }

        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `alert alert-${type} alert-dismissible fade show`;
            notification.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            const container = document.getElementById('notificationArea');
            container.appendChild(notification);
            
            // Auto remove after 5 seconds
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 5000);
        }
    </script>
}
