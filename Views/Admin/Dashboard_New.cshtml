@model JohnHenryFashionWeb.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard Quản trị";
    ViewData["CurrentSection"] = "dashboard";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <style>
        .dashboard-modern {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 2rem 0;
        }

        .dashboard-header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: white;
            padding: 2rem;
            border-radius: 20px;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

        .live-indicator {
            width: 12px;
            height: 12px;
            background: #10b981;
            border-radius: 50%;
            animation: pulse 2s infinite;
            margin-right: 0.5rem;
        }

        @@keyframes pulse {
            0% { transform: scale(1); opacity: 1; }
            50% { transform: scale(1.1); opacity: 0.7; }
            100% { transform: scale(1); opacity: 1; }
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: linear-gradient(45deg, #667eea, #764ba2);
            transform: scaleY(0);
            transition: transform 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }

        .stat-card:hover::before {
            transform: scaleY(1);
        }

        .stat-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1.5rem;
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
            background: linear-gradient(45deg, #667eea, #764ba2);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

        .stat-value {
            font-size: 2.5rem;
            font-weight: 700;
            color: #1f2937;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: #6b7280;
            font-size: 0.9rem;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .stat-trend {
            display: flex;
            align-items: center;
            margin-top: 1rem;
            padding: 0.5rem;
            border-radius: 8px;
            font-size: 0.85rem;
            font-weight: 600;
        }

        .trend-positive {
            background: rgba(16, 185, 129, 0.1);
            color: #059669;
        }

        .trend-negative {
            background: rgba(239, 68, 68, 0.1);
            color: #dc2626;
        }

        .quick-actions {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .quick-action-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 1.5rem;
            text-decoration: none;
            color: inherit;
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.2);
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .quick-action-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 12px 28px rgba(0, 0, 0, 0.15);
            text-decoration: none;
            color: inherit;
        }

        .action-icon {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
            color: white;
            flex-shrink: 0;
        }

        .action-content h4 {
            margin: 0 0 0.25rem 0;
            font-size: 1rem;
            font-weight: 600;
            color: #1f2937;
        }

        .action-content p {
            margin: 0;
            font-size: 0.875rem;
            color: #6b7280;
        }

        .section-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: white;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .charts-section {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .chart-card, .recent-activities, .system-alerts {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .chart-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #1f2937;
        }

        .time-selector {
            display: flex;
            gap: 0.5rem;
        }

        .time-btn {
            padding: 0.5rem 1rem;
            border: 1px solid #e5e7eb;
            background: white;
            border-radius: 8px;
            font-size: 0.875rem;
            cursor: pointer;
            transition: all 0.2s;
        }

        .time-btn.active, .time-btn:hover {
            background: #667eea;
            color: white;
            border-color: #667eea;
        }

        .activity-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem 0;
            border-bottom: 1px solid #f3f4f6;
        }

        .activity-item:last-child {
            border-bottom: none;
        }

        .activity-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(45deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 0.875rem;
        }

        .activity-content {
            flex: 1;
        }

        .activity-content h5 {
            margin: 0 0 0.25rem 0;
            font-size: 0.9rem;
            font-weight: 600;
            color: #1f2937;
        }

        .activity-content p {
            margin: 0;
            font-size: 0.8rem;
            color: #6b7280;
        }

        .activity-time {
            font-size: 0.75rem;
            color: #9ca3af;
        }

        .alert-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem;
            border-radius: 12px;
            margin-bottom: 1rem;
            background: rgba(59, 130, 246, 0.1);
            border-left: 4px solid #3b82f6;
        }

        .alert-item:last-child {
            margin-bottom: 0;
        }

        .alert-icon {
            width: 24px;
            height: 24px;
            color: #3b82f6;
        }

        .responsive-grid {
            display: grid;
            gap: 2rem;
        }

        @@media (min-width: 1024px) {
            .responsive-grid {
                grid-template-columns: 2fr 1fr;
            }
        }
    </style>
}

<div class="dashboard-modern">
    <div class="container-fluid">
        <!-- Dashboard Header -->
        <div class="dashboard-header">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h2 mb-2">Dashboard Quản trị</h1>
                    <p class="mb-0 opacity-90">Chào mừng bạn quay trở lại! Đây là tổng quan về hệ thống.</p>
                </div>
                <div class="text-end">
                    <div class="d-flex align-items-center mb-2">
                        <div class="live-indicator"></div>
                        <span class="text-sm">Dữ liệu thời gian thực</span>
                    </div>
                    <div class="text-sm opacity-75">Cập nhật: @DateTime.Now.ToString("HH:mm, dd/MM/yyyy")</div>
                </div>
            </div>
        </div>

        <!-- Key Metrics -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-header">
                    <div>
                        <div class="stat-value">@((Model.DashboardSummary?.TodayRevenue ?? 0).ToString("C0", new System.Globalization.CultureInfo("vi-VN")))</div>
                        <div class="stat-label">Doanh thu hôm nay</div>
                    </div>
                    <div class="stat-icon">
                        <i class="fas fa-dollar-sign"></i>
                    </div>
                </div>
                <div class="stat-trend trend-positive">
                    <i class="fas fa-arrow-up me-1"></i>
                    <span>+@((Model.DashboardSummary?.RevenueGrowth ?? 0).ToString("F1"))% so với hôm qua</span>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-header">
                    <div>
                        <div class="stat-value">@(Model.DashboardSummary?.TodayOrders ?? 0)</div>
                        <div class="stat-label">Đơn hàng hôm nay</div>
                    </div>
                    <div class="stat-icon" style="background: linear-gradient(45deg, #3b82f6, #1d4ed8);">
                        <i class="fas fa-shopping-cart"></i>
                    </div>
                </div>
                <div class="stat-trend trend-positive">
                    <i class="fas fa-arrow-up me-1"></i>
                    <span>+@((Model.DashboardSummary?.OrdersGrowth ?? 0).ToString("F1"))% so với hôm qua</span>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-header">
                    <div>
                        <div class="stat-value">@(Model.DashboardSummary?.TodayVisitors ?? 0)</div>
                        <div class="stat-label">Khách truy cập hôm nay</div>
                    </div>
                    <div class="stat-icon" style="background: linear-gradient(45deg, #8b5cf6, #7c3aed);">
                        <i class="fas fa-users"></i>
                    </div>
                </div>
                <div class="stat-trend trend-positive">
                    <i class="fas fa-arrow-up me-1"></i>
                    <span>+@((Model.DashboardSummary?.VisitorsGrowth ?? 0).ToString("F1"))% so với hôm qua</span>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-header">
                    <div>
                        <div class="stat-value">@((Model.DashboardSummary?.ConversionRate ?? 0).ToString("F1"))%</div>
                        <div class="stat-label">Tỷ lệ chuyển đổi</div>
                    </div>
                    <div class="stat-icon" style="background: linear-gradient(45deg, #f59e0b, #d97706);">
                        <i class="fas fa-chart-line"></i>
                    </div>
                </div>
                <div class="stat-trend trend-positive">
                    <i class="fas fa-arrow-up me-1"></i>
                    <span>+@((Model.DashboardSummary?.ConversionGrowth ?? 0).ToString("F1"))% so với hôm qua</span>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="section-title">
            <i class="fas fa-lightning"></i>
            Hành động nhanh
        </div>
        <div class="quick-actions">
            @if (Model.QuickActions != null)
            {
                @foreach (var action in Model.QuickActions)
                {
                    <a href="@action.Url" class="quick-action-card">
                        <div class="action-icon" style="background: @GetActionColor(action.Color);">
                            <i class="@action.Icon"></i>
                        </div>
                        <div class="action-content">
                            <h4>@action.Title</h4>
                            <p>Quản lý và theo dõi</p>
                        </div>
                    </a>
                }
            }
        </div>

        <!-- System Alerts -->
        @if (Model.SystemAlerts?.Any() == true)
        {
            <div class="system-alerts">
                <div class="section-title" style="color: #1f2937;">
                    <i class="fas fa-bell"></i>
                    Thông báo hệ thống
                </div>
                @foreach (var alert in Model.SystemAlerts)
                {
                    <div class="alert-item">
                        <i class="@alert.Icon alert-icon"></i>
                        <div class="flex-grow-1">
                            <span>@alert.Message</span>
                            @if (!string.IsNullOrEmpty(alert.Action))
                            {
                                <a href="@alert.Action" class="ms-2 text-decoration-none">
                                    <i class="fas fa-arrow-right"></i>
                                </a>
                            }
                        </div>
                    </div>
                }
            </div>
        }

        <!-- Charts and Recent Activities -->
        <div class="responsive-grid">
            <!-- Revenue Chart -->
            <div class="chart-card">
                <div class="chart-header">
                    <h3 class="chart-title">Doanh thu theo thời gian</h3>
                    <div class="time-selector">
                        <button class="time-btn active" data-period="7d">7 ngày</button>
                        <button class="time-btn" data-period="30d">30 ngày</button>
                        <button class="time-btn" data-period="90d">3 tháng</button>
                        <button class="time-btn" data-period="1y">1 năm</button>
                    </div>
                </div>
                <div id="revenueChart" style="height: 300px;"></div>
            </div>

            <!-- Recent Activities -->
            <div class="recent-activities">
                <div class="section-title" style="color: #1f2937;">
                    <i class="fas fa-clock"></i>
                    Hoạt động gần đây
                </div>
                @if (Model.RecentOrders?.Any() == true)
                {
                    @foreach (var order in Model.RecentOrders.Take(5))
                    {
                        <div class="activity-item">
                            <div class="activity-avatar">
                                @(order.User?.FirstName?.Substring(0, 1) ?? "U")
                            </div>
                            <div class="activity-content">
                                <h5>Đơn hàng mới #@order.OrderNumber</h5>
                                <p>@(order.User?.FirstName ?? "Khách hàng") - @order.TotalAmount.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</p>
                            </div>
                            <div class="activity-time">
                                @order.CreatedAt.ToString("HH:mm")
                            </div>
                        </div>
                    }
                }
                @if (Model.RecentUsers?.Any() == true)
                {
                    @foreach (var user in Model.RecentUsers.Take(3))
                    {
                        <div class="activity-item">
                            <div class="activity-avatar">
                                @(user.FirstName?.Substring(0, 1) ?? "U")
                            </div>
                            <div class="activity-content">
                                <h5>Người dùng mới đăng ký</h5>
                                <p>@user.FirstName @user.LastName - @user.Email</p>
                            </div>
                            <div class="activity-time">
                                @user.CreatedAt.ToString("HH:mm")
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Initialize revenue chart
        document.addEventListener('DOMContentLoaded', function() {
            const ctx = document.getElementById('revenueChart');
            if (ctx) {
                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(Json.Serialize(Model.SalesChartData?.Select(x => x.Label) ?? new string[0])),
                        datasets: [{
                            label: 'Doanh thu',
                            data: @Html.Raw(Json.Serialize(Model.SalesChartData?.Select(x => x.Value) ?? new decimal[0])),
                            borderColor: '#667eea',
                            backgroundColor: 'rgba(102, 126, 234, 0.1)',
                            borderWidth: 3,
                            fill: true,
                            tension: 0.4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: {
                                    color: 'rgba(0,0,0,0.05)'
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: false
                            }
                        }
                    }
                });
            }
        });
    </script>
}

@functions {
    string GetActionColor(string color)
    {
        return color switch
        {
            "success" => "linear-gradient(45deg, #10b981, #16a34a)",
            "info" => "linear-gradient(45deg, #3b82f6, #1d4ed8)",
            "warning" => "linear-gradient(45deg, #f59e0b, #d97706)",
            "danger" => "linear-gradient(45deg, #ef4444, #dc2626)",
            "purple" => "linear-gradient(45deg, #8b5cf6, #7c3aed)",
            _ => "linear-gradient(45deg, #6b7280, #4b5563)"
        };
    }
}