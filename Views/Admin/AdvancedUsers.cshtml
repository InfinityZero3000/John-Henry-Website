@model JohnHenryFashionWeb.ViewModels.AdvancedUsersViewModel
@{
    ViewData["Title"] = "Quản lý người dùng nâng cao";
    ViewData["CurrentSection"] = "advanced-users";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <style>
        .users-header {
            background: linear-gradient(135deg, #FF4747 0%, #CC3636 100%);
            color: white;
            padding: 25px;
            border-radius: 15px;
            margin-bottom: 25px;
        }

        .stats-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 25px;
        }

        .stat-card {
            background: white;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            text-align: center;
            transition: transform 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-3px);
        }

        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 15px;
            font-size: 24px;
            color: white;
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: #1e293b;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #64748b;
            font-size: 14px;
        }

        .filters-panel {
            background: white;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            margin-bottom: 25px;
        }

        .users-table-container {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            overflow: hidden;
        }

        .table-header {
            background: #f8fafc;
            padding: 20px;
            border-bottom: 1px solid #e2e8f0;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #FF4747 0%, #CC3636 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 16px;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .user-details {
            flex: 1;
        }

        .user-name {
            font-weight: 600;
            color: #1e293b;
            margin-bottom: 2px;
        }

        .user-email {
            color: #64748b;
            font-size: 14px;
        }

        .role-badge {
            padding: 4px 8px;
            border-radius: 6px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .role-admin { background: #fee2e2; color: #dc2626; }
        .role-seller { background: #fef3c7; color: #d97706; }
        .role-customer { background: #dbeafe; color: #2563eb; }

        .status-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
        }

        .status-active { background: #dcfce7; color: #16a34a; }
        .status-inactive { background: #fee2e2; color: #dc2626; }

        .action-buttons {
            display: flex;
            gap: 5px;
        }

        .btn-action {
            width: 32px;
            height: 32px;
            border-radius: 6px;
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .btn-view { background: #dbeafe; color: #2563eb; }
        .btn-edit { background: #fef3c7; color: #d97706; }
        .btn-delete { background: #fee2e2; color: #dc2626; }

        .btn-action:hover {
            transform: scale(1.1);
        }

        .user-modal .modal-header {
            background: linear-gradient(135deg, #FF4747 0%, #CC3636 100%);
            color: white;
            border-radius: 12px 12px 0 0;
        }

        .quick-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
            margin: 20px 0;
        }

        .quick-stat {
            text-align: center;
            padding: 15px;
            background: #f8fafc;
            border-radius: 8px;
        }

        .quick-stat-value {
            font-size: 1.5rem;
            font-weight: 700;
            color: #1e293b;
        }

        .quick-stat-label {
            font-size: 12px;
            color: #64748b;
            text-transform: uppercase;
        }

        .login-history {
            max-height: 300px;
            overflow-y: auto;
        }

        .login-item {
            display: flex;
            justify-content: between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #f1f5f9;
        }

        .login-item:last-child {
            border-bottom: none;
        }

        .bulk-actions {
            background: #f8fafc;
            padding: 15px 20px;
            border-top: 1px solid #e2e8f0;
            display: none;
        }

        .bulk-actions.show {
            display: block;
        }

        @@media (max-width: 768px) {
            .stats-cards {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .user-info {
                flex-direction: column;
                align-items: flex-start;
                gap: 8px;
            }
            
            .action-buttons {
                margin-top: 10px;
            }
        }
    </style>
}

<!-- Header -->
<div class="users-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="h3 mb-2">Quản lý người dùng nâng cao</h1>
            <p class="mb-0 opacity-90">Theo dõi và quản lý tất cả người dùng trong hệ thống</p>
        </div>
        <div>
            <button class="btn btn-light" data-bs-toggle="modal" data-bs-target="#exportModal">
                <i class="fas fa-download me-2"></i>Xuất dữ liệu
            </button>
        </div>
    </div>
</div>

<!-- Statistics Cards -->
<div class="stats-cards">
    <div class="stat-card">
        <div class="stat-icon" style="background: linear-gradient(45deg, #10b981, #16a34a);">
            <i class="fas fa-users"></i>
        </div>
        <div class="stat-value">@Model.Statistics.TotalUsers</div>
        <div class="stat-label">Tổng người dùng</div>
    </div>

    <div class="stat-card">
        <div class="stat-icon" style="background: linear-gradient(45deg, #3b82f6, #1d4ed8);">
            <i class="fas fa-user-check"></i>
        </div>
        <div class="stat-value">@Model.Statistics.ActiveUsers</div>
        <div class="stat-label">Đang hoạt động</div>
    </div>

    <div class="stat-card">
        <div class="stat-icon" style="background: linear-gradient(45deg, #8b5cf6, #7c3aed);">
            <i class="fas fa-user-plus"></i>
        </div>
        <div class="stat-value">@Model.Statistics.NewUsersThisMonth</div>
        <div class="stat-label">Mới tháng này</div>
    </div>

    <div class="stat-card">
        <div class="stat-icon" style="background: linear-gradient(45deg, #f59e0b, #d97706);">
            <i class="fas fa-circle"></i>
        </div>
        <div class="stat-value">@Model.Statistics.OnlineUsers</div>
        <div class="stat-label">Đang online</div>
    </div>
</div>

<!-- Filters Panel -->
<div class="filters-panel">
    <form method="get" class="row g-3">
        <div class="col-md-3">
            <label class="form-label">Tìm kiếm</label>
            <input type="text" class="form-control" name="search" value="@Model.SearchTerm" 
                   placeholder="Tên, email, số điện thoại...">
        </div>
        
        <div class="col-md-2">
            <label class="form-label">Vai trò</label>
            <select class="form-select" name="role">
                <option value="">Tất cả</option>
                <option value="Admin" selected="@(Model.RoleFilter == "Admin")">Admin</option>
                <option value="Seller" selected="@(Model.RoleFilter == "Seller")">Seller</option>
                <option value="Customer" selected="@(Model.RoleFilter == "Customer")">Customer</option>
            </select>
        </div>
        
        <div class="col-md-2">
            <label class="form-label">Trạng thái</label>
            <select class="form-select" name="status">
                <option value="">Tất cả</option>
                <option value="active" selected="@(Model.StatusFilter == "active")">Hoạt động</option>
                <option value="inactive" selected="@(Model.StatusFilter == "inactive")">Vô hiệu hóa</option>
            </select>
        </div>
        
        <div class="col-md-2">
            <label class="form-label">Sắp xếp</label>
            <select class="form-select" name="sortBy">
                <option value="created" selected="@(Model.SortBy == "created")">Ngày tạo</option>
                <option value="name" selected="@(Model.SortBy == "name")">Tên</option>
                <option value="email" selected="@(Model.SortBy == "email")">Email</option>
                <option value="lastlogin" selected="@(Model.SortBy == "lastlogin")">Đăng nhập cuối</option>
            </select>
        </div>
        
        <div class="col-md-3 d-flex align-items-end gap-2">
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-search me-2"></i>Lọc
            </button>
            <a href="@Url.Action("AdvancedUsers", "Admin")" class="btn btn-outline-secondary">
                <i class="fas fa-times me-2"></i>Xóa lọc
            </a>
        </div>
    </form>
</div>

<!-- Users Table -->
<div class="users-table-container">
    <div class="table-header">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                Danh sách người dùng
                <span class="badge bg-primary ms-2">@Model.Users.Count</span>
            </h5>
            <div class="d-flex gap-2">
                <button class="btn btn-sm btn-outline-primary" onclick="selectAll()">
                    <i class="fas fa-check-square me-1"></i>Chọn tất cả
                </button>
                <button class="btn btn-sm btn-success" data-bs-toggle="modal" data-bs-target="#addUserModal">
                    <i class="fas fa-plus me-1"></i>Thêm người dùng
                </button>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-hover mb-0">
            <thead class="table-light">
                <tr>
                    <th width="50">
                        <input type="checkbox" id="selectAllCheckbox" onchange="toggleSelectAll()">
                    </th>
                    <th>Người dùng</th>
                    <th>Vai trò</th>
                    <th>Trạng thái</th>
                    <th>Đơn hàng</th>
                    <th>Chi tiêu</th>
                    <th>Đăng nhập cuối</th>
                    <th width="120">Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.Users)
                {
                    <tr>
                        <td>
                            <input type="checkbox" class="user-checkbox" value="@user.Id">
                        </td>
                        <td>
                            <div class="user-info">
                                <div class="user-avatar">
                                    @if (!string.IsNullOrEmpty(user.AvatarUrl))
                                    {
                                        <img src="@user.AvatarUrl" alt="@user.FullName" 
                                             style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;">
                                    }
                                    else
                                    {
                                        @user.FirstName.Substring(0, 1).ToUpper()
                                    }
                                </div>
                                <div class="user-details">
                                    <div class="user-name">@user.FullName</div>
                                    <div class="user-email">@user.Email</div>
                                </div>
                            </div>
                        </td>
                        <td>
                            <div>
                                @foreach (var role in user.Roles)
                                {
                                    <span class="role-badge role-@role.ToLower()">@role</span>
                                }
                            </div>
                        </td>
                        <td>
                            <span class="status-badge status-@(user.IsActive ? "active" : "inactive")">
                                @user.Status
                            </span>
                        </td>
                        <td>
                            <strong>@user.OrderCount</strong>
                        </td>
                        <td>
                            <strong>@user.TotalSpent.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</strong>
                        </td>
                        <td>
                            <small>@user.LastLoginDisplay</small>
                        </td>
                        <td>
                            <div class="action-buttons">
                                <button class="btn-action btn-view" onclick="viewUser('@user.Id')" 
                                        title="Xem chi tiết">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <button class="btn-action btn-edit" onclick="editUser('@user.Id')" 
                                        title="Chỉnh sửa">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn-action btn-delete" onclick="toggleUserStatus('@user.Id', @user.IsActive.ToString().ToLower())" 
                                        title="@(user.IsActive ? "Vô hiệu hóa" : "Kích hoạt")">
                                    <i class="fas fa-@(user.IsActive ? "ban" : "check")"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Bulk Actions -->
    <div class="bulk-actions" id="bulkActions">
        <div class="d-flex justify-content-between align-items-center">
            <span id="selectedCount">0 người dùng được chọn</span>
            <div class="d-flex gap-2">
                <button class="btn btn-sm btn-success" onclick="bulkActivate()">
                    <i class="fas fa-check me-1"></i>Kích hoạt
                </button>
                <button class="btn btn-sm btn-warning" onclick="bulkDeactivate()">
                    <i class="fas fa-ban me-1"></i>Vô hiệu hóa
                </button>
                <button class="btn btn-sm btn-danger" onclick="bulkDelete()">
                    <i class="fas fa-trash me-1"></i>Xóa
                </button>
            </div>
        </div>
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="d-flex justify-content-between align-items-center p-3">
            <span class="text-muted">
                Hiển thị trang @Model.CurrentPage / @Model.TotalPages
            </span>
            <nav>
                <ul class="pagination pagination-sm mb-0">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@(Model.CurrentPage - 1)&search=@Model.SearchTerm&role=@Model.RoleFilter&status=@Model.StatusFilter&sortBy=@Model.SortBy">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    }
                    
                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i&search=@Model.SearchTerm&role=@Model.RoleFilter&status=@Model.StatusFilter&sortBy=@Model.SortBy">@i</a>
                        </li>
                    }
                    
                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@(Model.CurrentPage + 1)&search=@Model.SearchTerm&role=@Model.RoleFilter&status=@Model.StatusFilter&sortBy=@Model.SortBy">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>

<!-- User Details Modal -->
<div class="modal fade" id="userDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content user-modal">
            <div class="modal-header">
                <h5 class="modal-title">Chi tiết người dùng</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="userDetailsContent">
                <!-- Content will be loaded here -->
            </div>
        </div>
    </div>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thêm người dùng mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addUserForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Tên</label>
                            <input type="text" class="form-control" name="firstName" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Họ</label>
                            <input type="text" class="form-control" name="lastName" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" name="email" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Số điện thoại</label>
                        <input type="tel" class="form-control" name="phoneNumber">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Vai trò</label>
                        <select class="form-select" name="role" required>
                            <option value="Customer">Customer</option>
                            <option value="Seller">Seller</option>
                            <option value="Admin">Admin</option>
                        </select>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="isActive" checked>
                        <label class="form-check-label">Kích hoạt ngay</label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="saveUser()">Lưu</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let selectedUsers = [];

        function toggleSelectAll() {
            const selectAll = document.getElementById('selectAllCheckbox');
            const checkboxes = document.querySelectorAll('.user-checkbox');
            
            checkboxes.forEach(checkbox => {
                checkbox.checked = selectAll.checked;
            });
            
            updateSelectedUsers();
        }

        function selectAll() {
            const selectAll = document.getElementById('selectAllCheckbox');
            selectAll.checked = true;
            toggleSelectAll();
        }

        function updateSelectedUsers() {
            const checkboxes = document.querySelectorAll('.user-checkbox:checked');
            selectedUsers = Array.from(checkboxes).map(cb => cb.value);
            
            const bulkActions = document.getElementById('bulkActions');
            const selectedCount = document.getElementById('selectedCount');
            
            if (selectedUsers.length > 0) {
                bulkActions.classList.add('show');
                selectedCount.textContent = `${selectedUsers.length} người dùng được chọn`;
            } else {
                bulkActions.classList.remove('show');
            }
        }

        // Add event listeners to checkboxes
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.user-checkbox').forEach(checkbox => {
                checkbox.addEventListener('change', updateSelectedUsers);
            });
        });

        function viewUser(userId) {
            fetch(`/admin/users/${userId}/details`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('userDetailsContent').innerHTML = html;
                    new bootstrap.Modal(document.getElementById('userDetailsModal')).show();
                })
                .catch(error => {
                    console.error('Error loading user details:', error);
                    alert('Có lỗi xảy ra khi tải thông tin người dùng');
                });
        }

        function editUser(userId) {
            window.location.href = `/admin/users/${userId}/edit`;
        }

        function toggleUserStatus(userId, isActive) {
            const action = isActive ? 'vô hiệu hóa' : 'kích hoạt';
            
            if (confirm(`Bạn có chắc muốn ${action} người dùng này?`)) {
                fetch(`/admin/users/${userId}/toggle-status`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify({
                        reason: `Admin ${action} người dùng`
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra');
                });
            }
        }

        function bulkActivate() {
            if (selectedUsers.length === 0) return;
            
            if (confirm(`Bạn có chắc muốn kích hoạt ${selectedUsers.length} người dùng?`)) {
                // Implement bulk activate
                console.log('Bulk activate:', selectedUsers);
            }
        }

        function bulkDeactivate() {
            if (selectedUsers.length === 0) return;
            
            if (confirm(`Bạn có chắc muốn vô hiệu hóa ${selectedUsers.length} người dùng?`)) {
                // Implement bulk deactivate
                console.log('Bulk deactivate:', selectedUsers);
            }
        }

        function bulkDelete() {
            if (selectedUsers.length === 0) return;
            
            if (confirm(`Bạn có chắc muốn xóa ${selectedUsers.length} người dùng? Hành động này không thể hoàn tác!`)) {
                // Implement bulk delete
                console.log('Bulk delete:', selectedUsers);
            }
        }

        function saveUser() {
            const form = document.getElementById('addUserForm');
            const formData = new FormData(form);
            
            const userData = {
                firstName: formData.get('firstName'),
                lastName: formData.get('lastName'),
                email: formData.get('email'),
                phoneNumber: formData.get('phoneNumber'),
                role: formData.get('role'),
                isActive: formData.get('isActive') === 'on'
            };
            
            fetch('/admin/users/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                },
                body: JSON.stringify(userData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    bootstrap.Modal.getInstance(document.getElementById('addUserModal')).hide();
                    location.reload();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra');
            });
        }
    </script>
}