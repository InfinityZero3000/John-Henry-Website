@model JohnHenryFashionWeb.ViewModels.AdminBlogViewModel
@{
    ViewData["Title"] = "Quản lý Blog";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Breadcrumb"] = "<li class=\"breadcrumb-item active\">Blog</li>";
    
    var statusFilter = Model.StatusFilter ?? "";
    var searchTerm = Model.SearchTerm ?? "";
    
    var publishedCount = Model.Posts.Count(p => p.Status == "published");
    var draftCount = Model.Posts.Count(p => p.Status == "draft");
    var archivedCount = Model.Posts.Count(p => p.Status == "archived");
}

<div class="admin-content">
    <!-- Page Header -->
    <div class="admin-page-header">
        <div class="admin-flex-between">
            <div>
                <h1 class="admin-page-title">
                    <i data-lucide="file-text"></i>
                    Blog
                </h1>
            </div>
            <a href="/admin/blog/create" class="admin-btn admin-btn-primary">
                <i data-lucide="plus"></i>
                Viết bài mới
            </a>
        </div>
    </div>

    <!-- Alert Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="admin-alert admin-alert-success">
            <i data-lucide="check-circle"></i>
            <span>@TempData["SuccessMessage"]</span>
        </div>
    }

    <!-- Statistics Cards -->
    <div class="admin-stats-grid">
        <div class="admin-stat-card">
            <div class="admin-stat-card-content">
                <div class="admin-stat-card-info">
                    <h3>Tổng bài viết</h3>
                    <p class="value">@Model.TotalPosts</p>
                    <p class="change">Tất cả bài</p>
                </div>
                <div class="admin-stat-card-icon primary">
                    <i data-lucide="file-text"></i>
                </div>
            </div>
        </div>

        <div class="admin-stat-card">
            <div class="admin-stat-card-content">
                <div class="admin-stat-card-info">
                    <h3>Đã xuất bản</h3>
                    <p class="value">@publishedCount</p>
                    <p class="change">@((publishedCount > 0 ? (publishedCount * 100.0 / Model.TotalPosts).ToString("F1") : "0"))% tổng số</p>
                </div>
                <div class="admin-stat-card-icon success">
                    <i data-lucide="check-circle"></i>
                </div>
            </div>
        </div>

        <div class="admin-stat-card">
            <div class="admin-stat-card-content">
                <div class="admin-stat-card-info">
                    <h3>Bản nháp</h3>
                    <p class="value">@draftCount</p>
                    <p class="change">Chưa xuất bản</p>
                </div>
                <div class="admin-stat-card-icon warning">
                    <i data-lucide="edit"></i>
                </div>
            </div>
        </div>

        <div class="admin-stat-card">
            <div class="admin-stat-card-content">
                <div class="admin-stat-card-info">
                    <h3>Danh mục</h3>
                    <p class="value">@Model.Categories.Count</p>
                    <p class="change">
                        <a href="/admin/blog/categories" style="color: var(--admin-primary); text-decoration: none;">
                            Danh mục
                        </a>
                    </p>
                </div>
                <div class="admin-stat-card-icon info">
                    <i data-lucide="folder"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters & Search -->
    <div class="admin-filters">
        <form method="get" action="/admin/blog">
            <div class="row g-3 align-items-end">
                <!-- Search Box -->
                <div class="col-md-5">
                    <label class="admin-form-label">Tìm kiếm</label>
                    <div class="admin-search-box">
                        <i data-lucide="search" class="search-icon"></i>
                        <input type="text" name="search" class="admin-form-input" 
                               placeholder="Tìm theo tiêu đề, nội dung..." 
                               value="@searchTerm">
                    </div>
                </div>

                <!-- Status Filter -->
                <div class="col-md-3">
                    <label class="admin-form-label">Trạng thái</label>
                    <select name="status" class="admin-form-select">
                        <option value="" selected="@(string.IsNullOrEmpty(statusFilter))">Tất cả</option>
                        <option value="published" selected="@(statusFilter == "published")">Đã xuất bản</option>
                        <option value="draft" selected="@(statusFilter == "draft")">Bản nháp</option>
                        <option value="archived" selected="@(statusFilter == "archived")">Lưu trữ</option>
                    </select>
                </div>

                <!-- Category Filter -->
                <div class="col-md-2">
                    <label class="admin-form-label">Danh mục</label>
                    <select name="category" class="admin-form-select">
                        <option value="">Tất cả</option>
                        @foreach (var cat in Model.Categories)
                        {
                            <option value="@cat.Id" selected="@(Model.CategoryFilter == cat.Id.ToString())">@cat.Name</option>
                        }
                    </select>
                </div>

                <!-- Search Button -->
                <div class="col-md-2">
                    <button type="submit" class="admin-btn admin-btn-primary" style="width: 100%;">
                        <i data-lucide="search"></i>
                        Tìm kiếm
                    </button>
                </div>
            </div>
        </form>
    </div>

    <!-- Filter Tabs -->
    <div class="admin-filter-tabs">
        <a href="/admin/blog?search=@searchTerm" 
           class="admin-filter-tab @(string.IsNullOrEmpty(statusFilter) ? "active" : "")">
            Tất cả (@Model.TotalPosts)
        </a>
        <a href="/admin/blog?status=published&search=@searchTerm" 
           class="admin-filter-tab @(statusFilter == "published" ? "active" : "")">
            <i data-lucide="check-circle" style="width: 14px; height: 14px;"></i>
            Đã xuất bản (@publishedCount)
        </a>
        <a href="/admin/blog?status=draft&search=@searchTerm" 
           class="admin-filter-tab @(statusFilter == "draft" ? "active" : "")">
            <i data-lucide="edit" style="width: 14px; height: 14px;"></i>
            Bản nháp (@draftCount)
        </a>
        <a href="/admin/blog?status=archived&search=@searchTerm" 
           class="admin-filter-tab @(statusFilter == "archived" ? "active" : "")">
            <i data-lucide="archive" style="width: 14px; height: 14px;"></i>
            Lưu trữ (@archivedCount)
        </a>
    </div>

    <!-- Blog Posts Table -->
    @if (Model.Posts.Any())
    {
        <div class="admin-table-wrapper">
            <table class="admin-table">
                <thead>
                    <tr>
                        <th style="width: 100px;">Hình ảnh</th>
                        <th>Tiêu đề</th>
                        <th>Danh mục</th>
                        <th>Tác giả</th>
                        <th>Lượt xem</th>
                        <th>Trạng thái</th>
                        <th>Ngày tạo</th>
                        <th style="width: 180px;">Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var post in Model.Posts)
                    {
                        <tr>
                            <td>
                                @if (!string.IsNullOrEmpty(post.FeaturedImageUrl))
                                {
                                    <img src="@post.FeaturedImageUrl" alt="@post.Title" 
                                         style="width: 80px; height: 60px; object-fit: cover; border-radius: 4px; border: 1px solid var(--admin-border);">
                                }
                                else
                                {
                                    <div style="width: 80px; height: 60px; background: var(--admin-bg-secondary); border-radius: 4px; display: flex; align-items: center; justify-content: center; border: 1px solid var(--admin-border);">
                                        <i data-lucide="image" style="width: 24px; height: 24px; color: var(--admin-text-muted);"></i>
                                    </div>
                                }
                            </td>
                            <td>
                                <div style="font-weight: 500; color: var(--admin-text); margin-bottom: 0.25rem; max-width: 350px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                    @post.Title
                                </div>
                                @if (!string.IsNullOrEmpty(post.Excerpt))
                                {
                                    <div style="font-size: 0.8125rem; color: var(--admin-text-light); max-width: 350px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                        @post.Excerpt
                                    </div>
                                }
                            </td>
                            <td>
                                @if (post.Category != null)
                                {
                                    <span class="admin-badge admin-badge-info">
                                        <i data-lucide="folder" style="width: 12px; height: 12px;"></i>
                                        @post.Category.Name
                                    </span>
                                }
                                else
                                {
                                    <span class="admin-badge admin-badge-secondary">Không có</span>
                                }
                            </td>
                            <td>
                                @if (post.Author != null)
                                {
                                    <div style="font-weight: 500; font-size: 0.875rem;">@post.Author.FullName</div>
                                }
                                else
                                {
                                    <span class="admin-badge admin-badge-secondary">N/A</span>
                                }
                            </td>
                            <td>
                                <div style="font-weight: 500;">
                                    <i data-lucide="eye" style="width: 14px; height: 14px; color: var(--admin-text-light);"></i>
                                    @post.ViewCount.ToString("N0")
                                </div>
                            </td>
                            <td>
                                @switch (post.Status?.ToLower())
                                {
                                    case "published":
                                        <span class="admin-badge admin-badge-success">
                                            <i data-lucide="check-circle" style="width: 12px; height: 12px;"></i>
                                            Đã xuất bản
                                        </span>
                                        break;
                                    case "draft":
                                        <span class="admin-badge admin-badge-warning">
                                            <i data-lucide="edit" style="width: 12px; height: 12px;"></i>
                                            Bản nháp
                                        </span>
                                        break;
                                    case "archived":
                                        <span class="admin-badge admin-badge-secondary">
                                            <i data-lucide="archive" style="width: 12px; height: 12px;"></i>
                                            Lưu trữ
                                        </span>
                                        break;
                                    default:
                                        <span class="admin-badge admin-badge-secondary">@(post.Status ?? "N/A")</span>
                                        break;
                                }
                            </td>
                            <td>
                                <div style="font-size: 0.875rem;">@post.CreatedAt.ToString("dd/MM/yyyy")</div>
                                <div style="font-size: 0.8125rem; color: var(--admin-text-light);">@post.CreatedAt.ToString("HH:mm")</div>
                            </td>
                            <td class="actions">
                                <div style="display: flex; gap: 0.5rem; flex-wrap: wrap;">
                                    <a href="/blog/@post.Slug" target="_blank" class="admin-btn admin-btn-sm admin-btn-secondary" title="Xem">
                                        <i data-lucide="eye"></i>
                                    </a>
                                    <a href="/admin/blog/edit/@post.Id" class="admin-btn admin-btn-sm admin-btn-primary" title="Sửa">
                                        <i data-lucide="edit"></i>
                                    </a>
                                    @if (post.Status == "draft")
                                    {
                                        <button onclick="publishPost('@post.Id')" class="admin-btn admin-btn-sm admin-btn-success" title="Xuất bản">
                                            <i data-lucide="send"></i>
                                        </button>
                                    }
                                    <button onclick="deletePost('@post.Id')" class="admin-btn admin-btn-sm admin-btn-danger" title="Xóa">
                                        <i data-lucide="trash-2"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <div class="admin-pagination">
                @if (Model.CurrentPage > 1)
                {
                    <a href="/admin/blog?page=@(Model.CurrentPage - 1)&status=@statusFilter&search=@searchTerm&category=@Model.CategoryFilter" 
                       class="admin-pagination-btn">
                        <i data-lucide="chevron-left"></i>
                        Trước
                    </a>
                }
                else
                {
                    <button class="admin-pagination-btn" disabled>
                        <i data-lucide="chevron-left"></i>
                        Trước
                    </button>
                }

                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                {
                    <a href="/admin/blog?page=@i&status=@statusFilter&search=@searchTerm&category=@Model.CategoryFilter" 
                       class="admin-pagination-btn @(i == Model.CurrentPage ? "active" : "")">
                        @i
                    </a>
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <a href="/admin/blog?page=@(Model.CurrentPage + 1)&status=@statusFilter&search=@searchTerm&category=@Model.CategoryFilter" 
                       class="admin-pagination-btn">
                        Sau
                        <i data-lucide="chevron-right"></i>
                    </a>
                }
                else
                {
                    <button class="admin-pagination-btn" disabled>
                        Sau
                        <i data-lucide="chevron-right"></i>
                    </button>
                }
            </div>

            <div class="admin-text-center" style="margin-top: var(--spacing-md); color: var(--admin-text-light); font-size: 0.875rem;">
                Trang @Model.CurrentPage / @Model.TotalPages (Tổng @Model.TotalPosts bài viết)
            </div>
        }
    }
    else
    {
        <div class="admin-card">
            <div class="admin-card-body admin-text-center" style="padding: 3rem;">
                <i data-lucide="inbox" style="width: 64px; height: 64px; color: var(--admin-text-muted); margin-bottom: 1rem;"></i>
                <h3 style="margin-bottom: 0.5rem;">Không tìm thấy bài viết</h3>
                <p style="color: var(--admin-text-light); margin-bottom: 1.5rem;">
                    @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(statusFilter))
                    {
                        <text>Không có bài viết nào phù hợp với bộ lọc</text>
                    }
                    else
                    {
                        <text>Chưa có bài viết nào. Hãy tạo bài viết đầu tiên!</text>
                    }
                </p>
                <div class="admin-flex-center admin-gap-sm">
                    @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(statusFilter))
                    {
                        <a href="/admin/blog" class="admin-btn admin-btn-secondary">
                            <i data-lucide="x"></i>
                            Xóa bộ lọc
                        </a>
                    }
                    <a href="/admin/blog/create" class="admin-btn admin-btn-primary">
                        <i data-lucide="plus"></i>
                        Viết bài mới
                    </a>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Initialize Lucide icons
        lucide.createIcons();

        // Publish post
        function publishPost(postId) {
            if (!confirm('Xác nhận xuất bản bài viết này?')) {
                return;
            }

            fetch(`/admin/blog/publish/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Có lỗi xảy ra: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi xuất bản bài viết');
            });
        }

        // Delete post
        function deletePost(postId) {
            if (!confirm('Xác nhận xóa bài viết này? Hành động này không thể hoàn tác!')) {
                return;
            }

            fetch(`/admin/blog/delete/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Có lỗi xảy ra: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi xóa bài viết');
            });
        }

        // Auto-hide alerts
        setTimeout(function() {
            var alerts = document.querySelectorAll('.admin-alert');
            alerts.forEach(function(alert) {
                alert.style.transition = 'opacity 0.5s ease';
                alert.style.opacity = '0';
                setTimeout(function() {
                    alert.remove();
                }, 500);
            });
        }, 5000);
    </script>
}
