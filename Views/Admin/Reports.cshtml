@model JohnHenryFashionWeb.ViewModels.ReportsViewModel
@{
    ViewData["Title"] = "Báo Cáo & Thống Kê";
    ViewData["ActivePage"] = "Reports";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <style>
        .reports-dashboard {
            background: #f8f9fa;
        }
        
        .report-card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease;
            cursor: pointer;
        }
        
        .report-card:hover {
            transform: translateY(-2px);
        }
        
        .report-card .card-body {
            padding: 1.5rem;
        }
        
        .report-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
            margin-bottom: 1rem;
        }
        
        .report-icon.sales {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        }
        
        .report-icon.products {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .report-icon.customers {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        }
        
        .report-icon.inventory {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }
        
        .chart-section {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .stats-overview {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 12px;
            padding: 2rem;
            margin-bottom: 2rem;
        }
        
        .stat-item {
            text-align: center;
        }
        
        .stat-value {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }
        
        .stat-label {
            opacity: 0.9;
        }
        
        .filter-section {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .table-report {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
    </style>
}

<div class="reports-dashboard">
    <div class="content-wrapper">
        <div class="page-header">
            <h1 class="page-title">
                <i class="fas fa-chart-bar me-2"></i>
                Báo cáo & Thống kê
            </h1>
            <div class="page-actions">
                <div class="btn-group">
                    <button class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown">
                        <i class="fas fa-download me-2"></i>Xuất báo cáo
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" onclick="exportReport('sales', 'pdf')">
                            <i class="fas fa-file-pdf me-2"></i>Báo cáo bán hàng (PDF)
                        </a></li>
                        <li><a class="dropdown-item" href="#" onclick="exportReport('sales', 'excel')">
                            <i class="fas fa-file-excel me-2"></i>Báo cáo bán hàng (Excel)
                        </a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="#" onclick="exportReport('inventory', 'excel')">
                            <i class="fas fa-boxes me-2"></i>Báo cáo tồn kho
                        </a></li>
                        <li><a class="dropdown-item" href="#" onclick="exportReport('customers', 'excel')">
                            <i class="fas fa-users me-2"></i>Báo cáo khách hàng
                        </a></li>
                    </ul>
                </div>
                <button class="btn btn-outline-primary" onclick="refreshData()">
                    <i class="fas fa-sync-alt me-2"></i>Làm mới
                </button>
            </div>
        </div>

        <!-- Overall Statistics -->
        <div class="stats-overview">
            <div class="row">
                <div class="col-md-3 stat-item">
                    <div class="stat-value">@Model.TotalRevenue.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</div>
                    <div class="stat-label">Tổng doanh thu</div>
                </div>
                <div class="col-md-3 stat-item">
                    <div class="stat-value">@Model.TotalOrders</div>
                    <div class="stat-label">Tổng đơn hàng</div>
                </div>
                <div class="col-md-3 stat-item">
                    <div class="stat-value">@Model.TotalCustomers</div>
                    <div class="stat-label">Tổng khách hàng</div>
                </div>
                <div class="col-md-3 stat-item">
                    <div class="stat-value">@Model.TotalProducts</div>
                    <div class="stat-label">Tổng sản phẩm</div>
                </div>
            </div>
        </div>

        <!-- Date Filter -->
        <div class="filter-section">
            <form id="reportFilters">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label class="form-label">Khoảng thời gian</label>
                        <select class="form-select" name="dateRange" onchange="updateDateFilter()">
                            <option value="today">Hôm nay</option>
                            <option value="yesterday">Hôm qua</option>
                            <option value="thisWeek">Tuần này</option>
                            <option value="lastWeek">Tuần trước</option>
                            <option value="thisMonth" selected>Tháng này</option>
                            <option value="lastMonth">Tháng trước</option>
                            <option value="thisYear">Năm này</option>
                            <option value="custom">Tùy chọn</option>
                        </select>
                    </div>
                    <div class="col-md-3" id="customDateFrom" style="display: none;">
                        <label class="form-label">Từ ngày</label>
                        <input type="date" class="form-control" name="fromDate">
                    </div>
                    <div class="col-md-3" id="customDateTo" style="display: none;">
                        <label class="form-label">Đến ngày</label>
                        <input type="date" class="form-control" name="toDate">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">&nbsp;</label>
                        <button type="button" class="btn btn-primary w-100" onclick="applyFilters()">
                            <i class="fas fa-filter me-2"></i>Áp dụng
                        </button>
                    </div>
                </div>
            </form>
        </div>

        <!-- Quick Report Cards -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="report-card" onclick="loadDetailedReport('sales')">
                    <div class="card-body text-center">
                        <div class="report-icon sales mx-auto">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <h5 class="card-title">Báo cáo bán hàng</h5>
                        <p class="text-muted">Doanh thu, đơn hàng, tăng trưởng</p>
                        <div class="mt-3">
                            <small class="text-success">
                                <i class="fas fa-arrow-up me-1"></i>
                                +@Model.RevenueGrowth.ToString("F1")% so với tháng trước
                            </small>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-3">
                <div class="report-card" onclick="loadDetailedReport('products')">
                    <div class="card-body text-center">
                        <div class="report-icon products mx-auto">
                            <i class="fas fa-box"></i>
                        </div>
                        <h5 class="card-title">Báo cáo sản phẩm</h5>
                        <p class="text-muted">Sản phẩm bán chạy, tồn kho</p>
                        <div class="mt-3">
                            <small class="text-info">
                                <i class="fas fa-exclamation-triangle me-1"></i>
                                @Model.LowStockProducts sản phẩm sắp hết
                            </small>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-3">
                <div class="report-card" onclick="loadDetailedReport('customers')">
                    <div class="card-body text-center">
                        <div class="report-icon customers mx-auto">
                            <i class="fas fa-users"></i>
                        </div>
                        <h5 class="card-title">Báo cáo khách hàng</h5>
                        <p class="text-muted">Khách hàng mới, khách quen</p>
                        <div class="mt-3">
                            <small class="text-primary">
                                <i class="fas fa-user-plus me-1"></i>
                                +@Model.NewCustomers khách hàng mới
                            </small>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-3">
                <div class="report-card" onclick="loadDetailedReport('inventory')">
                    <div class="card-body text-center">
                        <div class="report-icon inventory mx-auto">
                            <i class="fas fa-warehouse"></i>
                        </div>
                        <h5 class="card-title">Báo cáo tồn kho</h5>
                        <p class="text-muted">Nhập xuất, giá trị tồn kho</p>
                        <div class="mt-3">
                            <small class="text-warning">
                                <i class="fas fa-boxes me-1"></i>
                                Giá trị: @Model.InventoryValue.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Charts Section -->
        <div class="row">
            <div class="col-md-8">
                <div class="chart-section">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="mb-0">Doanh thu theo thời gian</h5>
                        <div class="btn-group btn-group-sm">
                            <button class="btn btn-outline-primary active" onclick="switchRevenueChart('daily')">Ngày</button>
                            <button class="btn btn-outline-primary" onclick="switchRevenueChart('weekly')">Tuần</button>
                            <button class="btn btn-outline-primary" onclick="switchRevenueChart('monthly')">Tháng</button>
                        </div>
                    </div>
                    <canvas id="revenueChart" height="100"></canvas>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="chart-section">
                    <h5 class="mb-3">Phân bố doanh thu theo danh mục</h5>
                    <canvas id="categoryChart" height="250"></canvas>
                </div>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-md-6">
                <div class="chart-section">
                    <h5 class="mb-3">Trạng thái đơn hàng</h5>
                    <canvas id="orderStatusChart" height="200"></canvas>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="chart-section">
                    <h5 class="mb-3">Tăng trưởng khách hàng</h5>
                    <canvas id="customerGrowthChart" height="200"></canvas>
                </div>
            </div>
        </div>

        <!-- Detailed Report Section -->
        <div id="detailedReportSection" style="display: none;">
            <div class="table-report">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0" id="reportTitle">Chi tiết báo cáo</h5>
                    <button class="btn btn-sm btn-outline-secondary" onclick="closeDetailedReport()">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <div class="card-body" id="reportContent">
                    <!-- Dynamic content loaded here -->
                </div>
            </div>
        </div>

        <!-- Top Products Table -->
        <div class="table-report mt-4">
            <div class="card-header">
                <h5 class="mb-0">Sản phẩm bán chạy nhất</h5>
            </div>
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Sản phẩm</th>
                            <th>Danh mục</th>
                            <th>Số lượng bán</th>
                            <th>Doanh thu</th>
                            <th>Tăng trưởng</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model.TopProducts.Take(10))
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                                        {
                                            <img src="@product.ImageUrl" alt="@product.ProductName" 
                                                 class="me-2" style="width: 40px; height: 40px; object-fit: cover; border-radius: 6px;">
                                        }
                                        <div>
                                            <div class="fw-bold">@product.ProductName</div>
                                            <small class="text-muted">SKU: @product.SKU</small>
                                        </div>
                                    </div>
                                </td>
                                <td>@product.CategoryName</td>
                                <td>@product.QuantitySold</td>
                                <td class="fw-bold text-success">
                                    @product.Revenue.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                                </td>
                                <td>
                                    @if (product.GrowthRate > 0)
                                    {
                                        <span class="text-success">
                                            <i class="fas fa-arrow-up me-1"></i>
                                            +@product.GrowthRate.ToString("F1")%
                                        </span>
                                    }
                                    else if (product.GrowthRate < 0)
                                    {
                                        <span class="text-danger">
                                            <i class="fas fa-arrow-down me-1"></i>
                                            @product.GrowthRate.ToString("F1")%
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">0%</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let revenueChart, categoryChart, orderStatusChart, customerGrowthChart;

        document.addEventListener('DOMContentLoaded', function() {
            initializeCharts();
        });

        function initializeCharts() {
            // Revenue Chart
            const revenueCtx = document.getElementById('revenueChart').getContext('2d');
            revenueChart = new Chart(revenueCtx, {
                type: 'line',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.RevenueChartLabels)),
                    datasets: [{
                        label: 'Doanh thu',
                        data: @Html.Raw(Json.Serialize(Model.RevenueChartData)),
                        borderColor: '#11998e',
                        backgroundColor: 'rgba(17, 153, 142, 0.1)',
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return new Intl.NumberFormat('vi-VN', {
                                        style: 'currency',
                                        currency: 'VND'
                                    }).format(value);
                                }
                            }
                        }
                    }
                }
            });

            // Category Distribution Chart
            const categoryCtx = document.getElementById('categoryChart').getContext('2d');
            categoryChart = new Chart(categoryCtx, {
                type: 'doughnut',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.CategoryLabels)),
                    datasets: [{
                        data: @Html.Raw(Json.Serialize(Model.CategoryData)),
                        backgroundColor: [
                            '#11998e',
                            '#667eea',
                            '#f093fb',
                            '#4facfe',
                            '#f5576c'
                        ],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });

            // Order Status Chart
            const orderStatusCtx = document.getElementById('orderStatusChart').getContext('2d');
            orderStatusChart = new Chart(orderStatusCtx, {
                type: 'bar',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.OrderStatusLabels)),
                    datasets: [{
                        label: 'Số đơn hàng',
                        data: @Html.Raw(Json.Serialize(Model.OrderStatusData)),
                        backgroundColor: [
                            '#ffc107',
                            '#17a2b8',
                            '#28a745',
                            '#dc3545'
                        ],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Customer Growth Chart
            const customerGrowthCtx = document.getElementById('customerGrowthChart').getContext('2d');
            customerGrowthChart = new Chart(customerGrowthCtx, {
                type: 'line',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.CustomerChartLabels)),
                    datasets: [{
                        label: 'Khách hàng mới',
                        data: @Html.Raw(Json.Serialize(Model.NewCustomersData)),
                        borderColor: '#667eea',
                        backgroundColor: 'rgba(102, 126, 234, 0.1)',
                        borderWidth: 2,
                        fill: true
                    }, {
                        label: 'Khách hàng quay lại',
                        data: @Html.Raw(Json.Serialize(Model.ReturningCustomersData)),
                        borderColor: '#f093fb',
                        backgroundColor: 'rgba(240, 147, 251, 0.1)',
                        borderWidth: 2,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        function updateDateFilter() {
            const dateRange = document.querySelector('select[name="dateRange"]').value;
            const customDateFrom = document.getElementById('customDateFrom');
            const customDateTo = document.getElementById('customDateTo');
            
            if (dateRange === 'custom') {
                customDateFrom.style.display = 'block';
                customDateTo.style.display = 'block';
            } else {
                customDateFrom.style.display = 'none';
                customDateTo.style.display = 'none';
            }
        }

        function applyFilters() {
            // Show loading indicator
            showLoading();
            
            // Get filter values
            const formData = new FormData(document.getElementById('reportFilters'));
            const params = new URLSearchParams(formData);
            
            // Reload page with new filters
            window.location.href = '/Admin/Reports?' + params.toString();
        }

        function switchRevenueChart(period) {
            // Update active button
            document.querySelectorAll('.btn-group .btn').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');
            
            // Load new chart data
            showLoading();
            
            fetch(`/Admin/GetRevenueChartData?period=${period}`)
                .then(response => response.json())
                .then(data => {
                    revenueChart.data.labels = data.labels;
                    revenueChart.data.datasets[0].data = data.data;
                    revenueChart.update();
                    hideLoading();
                })
                .catch(error => {
                    console.error('Error updating chart:', error);
                    hideLoading();
                });
        }

        function loadDetailedReport(reportType) {
            const section = document.getElementById('detailedReportSection');
            const title = document.getElementById('reportTitle');
            const content = document.getElementById('reportContent');
            
            // Update title
            const titles = {
                'sales': 'Chi tiết báo cáo bán hàng',
                'products': 'Chi tiết báo cáo sản phẩm',
                'customers': 'Chi tiết báo cáo khách hàng',
                'inventory': 'Chi tiết báo cáo tồn kho'
            };
            title.textContent = titles[reportType];
            
            // Show loading
            content.innerHTML = '<div class="text-center py-4"><i class="fas fa-spinner fa-spin fa-2x"></i></div>';
            section.style.display = 'block';
            
            // Load detailed report
            fetch(`/Admin/GetDetailedReport/${reportType}`)
                .then(response => response.text())
                .then(html => {
                    content.innerHTML = html;
                })
                .catch(error => {
                    content.innerHTML = '<div class="alert alert-danger">Lỗi khi tải báo cáo chi tiết</div>';
                });
        }

        function closeDetailedReport() {
            document.getElementById('detailedReportSection').style.display = 'none';
        }

        function exportReport(reportType, format) {
            const params = new URLSearchParams(window.location.search);
            params.append('type', reportType);
            params.append('format', format);
            
            window.open(`/Admin/ExportReport?${params.toString()}`, '_blank');
        }

        function refreshData() {
            showLoading();
            setTimeout(() => {
                location.reload();
            }, 1000);
        }

        function showLoading() {
            // Add loading overlay
            const overlay = document.createElement('div');
            overlay.id = 'loadingOverlay';
            overlay.className = 'position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center';
            overlay.style.backgroundColor = 'rgba(255, 255, 255, 0.8)';
            overlay.style.zIndex = '9999';
            overlay.innerHTML = '<div class="text-center"><i class="fas fa-spinner fa-spin fa-3x text-primary"></i><br><br>Đang tải dữ liệu...</div>';
            document.body.appendChild(overlay);
        }

        function hideLoading() {
            const overlay = document.getElementById('loadingOverlay');
            if (overlay) {
                overlay.remove();
            }
        }
    </script>
}
