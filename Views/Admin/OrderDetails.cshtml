@model JohnHenryFashionWeb.ViewModels.OrderDetailsViewModel

@{
    ViewData["Title"] = "Chi tiết đơn hàng";
    ViewData["CurrentSection"] = "Orders";
    ViewData["PageIcon"] = "file-text";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="admin-content">
    <!-- Page Header -->
    <div class="admin-page-header">
        <div class="admin-page-header-content">
            <h1 class="admin-page-title">
                <i data-lucide="file-text"></i>
                Chi tiết đơn hàng #@Model.OrderNumber
            </h1>
        </div>
        <div class="admin-page-header-actions">
            <a href="@Url.Action("Orders", "Admin")" class="admin-btn admin-btn-secondary">
                <i data-lucide="arrow-left"></i>
                Quay lại
            </a>
        </div>
    </div>

<div class="admin-card">
    <div class="admin-card-body">
        <div class="row mb-4">
            <div class="col-md-6">
                <h6 class="admin-section-title mb-3">THÔNG TIN ĐƠN HÀNG</h6>
                <table class="admin-info-table">
                <tr>
                    <td width="120"><strong>Mã đơn hàng:</strong></td>
                    <td>#@Model.OrderNumber</td>
                </tr>
                <tr>
                    <td><strong>Ngày đặt:</strong></td>
                    <td>@Model.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                </tr>
                <tr>
                    <td><strong>Trạng thái:</strong></td>
                    <td>
                        <span class="admin-badge admin-badge-@GetStatusBadgeClass(Model.Status)">
                            @GetStatusText(Model.Status)
                        </span>
                    </td>
                </tr>
                <tr>
                    <td><strong>Thanh toán:</strong></td>
                    <td>
                        <span class="admin-badge admin-badge-@(Model.PaymentStatus == "Paid" ? "success" : "warning")">
                            @(Model.PaymentStatus == "Paid" ? "Đã thanh toán" : "Chưa thanh toán")
                        </span>
                    </td>
                </tr>
                <tr>
                    <td><strong>Phương thức:</strong></td>
                    <td>@Model.PaymentMethod</td>
                </tr>
            </table>
        </div>
        <div class="col-md-6">
            <h6 class="admin-section-title mb-3">THÔNG TIN KHÁCH HÀNG</h6>
            <table class="admin-info-table">
                <tr>
                    <td width="100"><strong>Họ tên:</strong></td>
                    <td>@Model.CustomerName</td>
                </tr>
                <tr>
                    <td><strong>Email:</strong></td>
                    <td>@Model.CustomerEmail</td>
                </tr>
                <tr>
                    <td><strong>Điện thoại:</strong></td>
                    <td>@Model.CustomerPhone</td>
                </tr>
                <tr>
                    <td><strong>Địa chỉ:</strong></td>
                    <td>@Model.ShippingAddress</td>
                </tr>
                @if (!string.IsNullOrEmpty(Model.Notes))
                {
                    <tr>
                        <td><strong>Ghi chú:</strong></td>
                        <td>@Model.Notes</td>
                    </tr>
                }
            </table>
        </div>
        </div>

        <h6 class="admin-section-title mb-3">CHI TIẾT SẢN PHẨM</h6>
        <div class="admin-table-wrapper">
            <table class="admin-table">
                <thead>
                <tr>
                    <th width="60">Ảnh</th>
                    <th>Sản phẩm</th>
                    <th width="80">Size</th>
                    <th width="80">Màu</th>
                    <th width="80">SL</th>
                    <th width="120">Đơn giá</th>
                    <th width="120">Thành tiền</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OrderItems)
                {
                    <tr>
                        <td>
                            @if (!string.IsNullOrEmpty(item.ProductImage))
                            {
                                <img src="@item.ProductImage" class="img-thumbnail" style="width: 50px; height: 50px; object-fit: cover;">
                            }
                            else
                            {
                                <div class="bg-light d-flex align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                    <i data-lucide="image" class="text-muted"></i>
                                </div>
                            }
                        </td>
                        <td>
                            <strong>@item.ProductName</strong>
                            @if (!string.IsNullOrEmpty(item.ProductSKU))
                            {
                                <br><small class="text-muted">SKU: @item.ProductSKU</small>
                            }
                        </td>
                        <td class="text-center">@item.Size</td>
                        <td class="text-center">@item.Color</td>
                        <td class="text-center">@item.Quantity</td>
                        <td class="text-end">@item.UnitPrice.ToString("N0") ₫</td>
                        <td class="text-end">@item.TotalPrice.ToString("N0") ₫</td>
                    </tr>
                }
            </tbody>
            <tfoot class="table-light">
                <tr>
                    <td colspan="6" class="text-end"><strong>Tạm tính:</strong></td>
                    <td class="text-end"><strong>@Model.SubTotal.ToString("N0") ₫</strong></td>
                </tr>
                @if (Model.DiscountAmount > 0)
                {
                    <tr>
                        <td colspan="6" class="text-end">
                            <strong>Giảm giá:</strong>
                            @if (!string.IsNullOrEmpty(Model.CouponCode))
                            {
                                <small class="text-muted">(@Model.CouponCode)</small>
                            }
                        </td>
                        <td class="text-end text-success"><strong>-@Model.DiscountAmount.ToString("N0") ₫</strong></td>
                    </tr>
                }
                <tr>
                    <td colspan="6" class="text-end"><strong>Phí vận chuyển:</strong></td>
                    <td class="text-end"><strong>@Model.ShippingFee.ToString("N0") ₫</strong></td>
                </tr>
                <tr style="background-color: var(--admin-bg-secondary);">
                    <td colspan="6" class="text-end"><strong>TỔNG CỘNG:</strong></td>
                    <td class="text-end"><strong style="color: var(--admin-primary); font-size: 1.125rem;">@Model.TotalAmount.ToString("N0") ₫</strong></td>
                </tr>
            </tfoot>
        </table>
        </div>

        @if (Model.OrderHistory.Any())
        {
            <h6 class="admin-section-title mb-3 mt-4">LỊCH SỬ ĐƠN HÀNG</h6>
            <div class="timeline">
                @foreach (var history in Model.OrderHistory.OrderByDescending(x => x.CreatedAt))
                {
                    <div class="timeline-item">
                        <div class="timeline-marker admin-badge-@GetStatusBadgeClass(history.Status)"></div>
                    <div class="timeline-content">
                        <h6 class="timeline-title">@GetStatusText(history.Status)</h6>
                        <p class="timeline-description">@history.Notes</p>
                        <small class="text-muted">
                            @history.CreatedAt.ToString("dd/MM/yyyy HH:mm") - @history.CreatedBy
                        </small>
                    </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<style>
    .admin-info-table {
        width: 100%;
    }
    
    .admin-info-table td {
        padding: 0.5rem 0;
        border: none;
    }
    
    .admin-section-title {
        font-size: 0.75rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 1px;
        color: var(--admin-text-muted);
        margin-bottom: 1rem;
    }

<style>
    .timeline {
        position: relative;
        padding-left: 30px;
    }

    .timeline::before {
        content: '';
        position: absolute;
        left: 15px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: var(--admin-border);
    }

    .timeline-item {
        position: relative;
        margin-bottom: 20px;
    }

    .timeline-marker {
        position: absolute;
        left: -22px;
        top: 0;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        border: 2px solid var(--admin-bg);
        box-shadow: 0 0 0 2px var(--admin-border);
    }
    
    .timeline-marker.admin-badge-warning {
        background-color: var(--status-warning);
    }
    
    .timeline-marker.admin-badge-info {
        background-color: var(--status-info);
    }
    
    .timeline-marker.admin-badge-success {
        background-color: var(--status-success);
    }
    
    .timeline-marker.admin-badge-danger {
        background-color: var(--status-danger);
    }

    .timeline-content {
        background: var(--admin-bg-secondary);
        padding: 15px;
        border-radius: var(--radius-md);
        border-left: 3px solid var(--admin-border);
    }

    .timeline-title {
        margin-bottom: 5px;
        font-size: 14px;
    }

    .timeline-description {
        margin-bottom: 5px;
        font-size: 13px;
    }
</style>

</div>
</div>

@section Scripts {
    <script>
        // Initialize Lucide icons
        lucide.createIcons();
    </script>
}

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "warning",
            "Confirmed" => "info",
            "Shipping" => "primary",
            "Completed" => "success",
            "Cancelled" => "danger",
            _ => "secondary"
        };
    }

    string GetStatusText(string status)
    {
        return status switch
        {
            "Pending" => "Chờ xử lý",
            "Confirmed" => "Đã xác nhận",
            "Shipping" => "Đang giao",
            "Completed" => "Hoàn thành",
            "Cancelled" => "Đã hủy",
            _ => "Không xác định"
        };
    }
}
