@model JohnHenryFashionWeb.ViewModels.UserManagementViewModel
@{
    ViewData["Title"] = "Quản Lý Người Dùng";
    ViewData["ActivePage"] = "Users";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <style>
        .user-management-modern {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 2rem 0;
        }

        .page-header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: white;
            padding: 2rem;
            border-radius: 20px;
            margin-bottom: 2rem;
        }

        .stats-overview {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 1.5rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            text-align: center;
            transition: transform 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-4px);
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            color: #1f2937;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: #6b7280;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .filters-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            margin-bottom: 2rem;
        }

        .filter-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .form-control, .form-select {
            border-radius: 12px;
            border: 1px solid #e5e7eb;
            padding: 0.75rem 1rem;
            transition: all 0.2s ease;
        }

        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .btn-modern {
            padding: 0.75rem 1.5rem;
            border-radius: 12px;
            font-weight: 600;
            transition: all 0.3s ease;
            border: none;
        }

        .btn-primary-modern {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
        }

        .btn-primary-modern:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .btn-outline-modern {
            background: transparent;
            border: 2px solid #667eea;
            color: #667eea;
        }

        .btn-outline-modern:hover {
            background: #667eea;
            color: white;
            transform: translateY(-2px);
        }

        .users-table-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            margin-bottom: 2rem;
        }

        .table-modern {
            border-collapse: separate;
            border-spacing: 0;
            width: 100%;
        }

        .table-modern thead th {
            background: #f8fafc;
            color: #374151;
            font-weight: 600;
            padding: 1rem 1.5rem;
            border: none;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .table-modern thead th:first-child {
            border-top-left-radius: 12px;
        }

        .table-modern thead th:last-child {
            border-top-right-radius: 12px;
        }

        .table-modern tbody tr {
            transition: all 0.2s ease;
        }

        .table-modern tbody tr:hover {
            background: rgba(102, 126, 234, 0.05);
        }

        .table-modern tbody td {
            padding: 1rem 1.5rem;
            border-bottom: 1px solid #f3f4f6;
            vertical-align: middle;
        }

        .user-avatar {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            background: linear-gradient(45deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 1.1rem;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .user-details h6 {
            margin: 0 0 0.25rem 0;
            font-weight: 600;
            color: #1f2937;
        }

        .user-details p {
            margin: 0;
            font-size: 0.875rem;
            color: #6b7280;
        }

        .role-badge {
            display: inline-block;
            padding: 0.375rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .role-admin {
            background: linear-gradient(45deg, #ef4444, #dc2626);
            color: white;
        }

        .role-customer {
            background: linear-gradient(45deg, #3b82f6, #2563eb);
            color: white;
        }

        .role-seller {
            background: linear-gradient(45deg, #f59e0b, #d97706);
            color: white;
        }

        .status-badge {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 600;
        }

        .status-active {
            background: rgba(16, 185, 129, 0.1);
            color: #059669;
        }

        .status-inactive {
            background: rgba(239, 68, 68, 0.1);
            color: #dc2626;
        }

        .status-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: currentColor;
        }

        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .btn-icon {
            width: 36px;
            height: 36px;
            border-radius: 8px;
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.875rem;
            transition: all 0.2s ease;
        }

        .btn-view {
            background: rgba(59, 130, 246, 0.1);
            color: #3b82f6;
        }

        .btn-edit {
            background: rgba(16, 185, 129, 0.1);
            color: #10b981;
        }

        .btn-delete {
            background: rgba(239, 68, 68, 0.1);
            color: #ef4444;
        }

        .btn-icon:hover {
            transform: scale(1.1);
        }

        .pagination-modern {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-top: 2rem;
        }

        .page-link-modern {
            padding: 0.75rem 1rem;
            border-radius: 8px;
            background: white;
            border: 1px solid #e5e7eb;
            color: #374151;
            text-decoration: none;
            transition: all 0.2s ease;
        }

        .page-link-modern:hover, .page-link-modern.active {
            background: #667eea;
            color: white;
            border-color: #667eea;
            text-decoration: none;
        }

        .search-highlight {
            background: rgba(102, 126, 234, 0.2);
            padding: 0.125rem 0.25rem;
            border-radius: 4px;
        }

        .empty-state {
            text-align: center;
            padding: 3rem 2rem;
            color: #6b7280;
        }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        @@media (max-width: 768px) {
            .filter-grid {
                grid-template-columns: 1fr;
            }
            
            .stats-overview {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .table-modern {
                font-size: 0.875rem;
            }
            
            .user-info {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }
            
            .action-buttons {
                flex-direction: column;
            }
        }
    </style>
}

<div class="user-management-modern">
    <div class="container-fluid">
        <!-- Page Header -->
        <div class="page-header">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h2 mb-2">
                        <i class="fas fa-users me-2"></i>
                        Quản Lý Người Dùng
                    </h1>
                    <p class="mb-0 opacity-90">Quản lý thông tin và quyền của người dùng trong hệ thống</p>
                </div>
                <div>
                    <a href="/admin/users/create" class="btn btn-primary-modern btn-modern">
                        <i class="fas fa-plus me-2"></i>
                        Thêm người dùng
                    </a>
                </div>
            </div>
        </div>

        <!-- Statistics Overview -->
        <div class="stats-overview">
            <div class="stat-card">
                <div class="stat-number">@(Model.Statistics?.GetValueOrDefault("Total", 0) ?? Model.TotalUsers)</div>
                <div class="stat-label">Tổng người dùng</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">@(Model.Statistics?.GetValueOrDefault("Active", 0) ?? Model.ActiveUsers)</div>
                <div class="stat-label">Đang hoạt động</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">@(Model.Statistics?.GetValueOrDefault("NewThisMonth", 0) ?? Model.NewUsersThisMonth)</div>
                <div class="stat-label">Mới tháng này</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">@(Model.Statistics?.GetValueOrDefault("Customers", 0) ?? 0)</div>
                <div class="stat-label">Khách hàng</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">@(Model.Statistics?.GetValueOrDefault("Sellers", 0) ?? Model.SellersCount)</div>
                <div class="stat-label">Người bán</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">@(Model.Statistics?.GetValueOrDefault("Admins", 0) ?? 0)</div>
                <div class="stat-label">Quản trị viên</div>
            </div>
        </div>

        <!-- Filters Section -->
        <div class="filters-section">
            <form method="get" id="filterForm">
                <div class="filter-grid">
                    <div>
                        <label class="form-label fw-semibold">Tìm kiếm</label>
                        <input type="text" name="searchTerm" value="@(Model.Filter?.SearchTerm ?? Model.SearchTerm)" 
                               class="form-control" placeholder="Tên, email, số điện thoại...">
                    </div>
                    <div>
                        <label class="form-label fw-semibold">Vai trò</label>
                        <select name="role" class="form-select">
                            <option value="">Tất cả vai trò</option>
                            @if (Model.AvailableRoles?.Any() == true)
                            {
                                @foreach (var role in Model.AvailableRoles)
                                {
                                    <option value="@role" selected="@(role == (Model.Filter?.Role ?? Model.RoleFilter))">@role</option>
                                }
                            }
                        </select>
                    </div>
                    <div>
                        <label class="form-label fw-semibold">Trạng thái</label>
                        <select name="isActive" class="form-select">
                            <option value="">Tất cả trạng thái</option>
                            <option value="true" selected="@(Model.Filter?.IsActive == true)">Hoạt động</option>
                            <option value="false" selected="@(Model.Filter?.IsActive == false)">Đã khóa</option>
                        </select>
                    </div>
                    <div>
                        <label class="form-label fw-semibold">Từ ngày</label>
                        <input type="date" name="createdFrom" value="@(Model.Filter?.CreatedFrom?.ToString("yyyy-MM-dd"))" class="form-control">
                    </div>
                    <div>
                        <label class="form-label fw-semibold">Đến ngày</label>
                        <input type="date" name="createdTo" value="@(Model.Filter?.CreatedTo?.ToString("yyyy-MM-dd"))" class="form-control">
                    </div>
                    <div>
                        <label class="form-label fw-semibold">Sắp xếp</label>
                        <select name="sortBy" class="form-select">
                            <option value="CreatedAt" selected="@((Model.Filter?.SortBy ?? "CreatedAt") == "CreatedAt")">Ngày tạo</option>
                            <option value="FirstName" selected="@((Model.Filter?.SortBy ?? "") == "FirstName")">Tên</option>
                            <option value="Email" selected="@((Model.Filter?.SortBy ?? "") == "Email")">Email</option>
                            <option value="LastLoginDate" selected="@((Model.Filter?.SortBy ?? "") == "LastLoginDate")">Lần đăng nhập cuối</option>
                        </select>
                    </div>
                </div>
                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-primary-modern btn-modern">
                        <i class="fas fa-search me-2"></i>
                        Tìm kiếm
                    </button>
                    <a href="/admin/users" class="btn btn-outline-modern btn-modern">
                        <i class="fas fa-redo me-2"></i>
                        Đặt lại
                    </a>
                </div>
            </form>
        </div>

        <!-- Users Table -->
        <div class="users-table-container">
            @if (Model.Users?.Any() == true)
            {
                <div class="table-responsive">
                    <table class="table-modern">
                        <thead>
                            <tr>
                                <th>Người dùng</th>
                                <th>Vai trò</th>
                                <th>Trạng thái</th>
                                <th>Đơn hàng</th>
                                <th>Tổng chi tiêu</th>
                                <th>Lần cuối đăng nhập</th>
                                <th>Ngày tạo</th>
                                <th class="text-center">Hành động</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.Users)
                            {
                                <tr>
                                    <td>
                                        <div class="user-info">
                                            <div class="user-avatar">
                                                @if (!string.IsNullOrEmpty(user.Avatar))
                                                {
                                                    <img src="@user.Avatar" alt="@user.FullName" style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;">
                                                }
                                                else
                                                {
                                                    @(user.FirstName?.Substring(0, 1) ?? "U")
                                                }
                                            </div>
                                            <div class="user-details">
                                                <h6>@user.FullName</h6>
                                                <p>@user.Email</p>
                                                @if (!string.IsNullOrEmpty(user.PhoneNumber))
                                                {
                                                    <p><i class="fas fa-phone text-muted me-1"></i>@user.PhoneNumber</p>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @if (user.Roles?.Any() == true)
                                        {
                                            @foreach (var role in user.Roles.Take(2))
                                            {
                                                <span class="role-badge role-@role.ToLower() me-1">@role</span>
                                            }
                                            @if (user.Roles.Count > 2)
                                            {
                                                <span class="text-muted">+@(user.Roles.Count - 2)</span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="role-badge role-customer">Customer</span>
                                        }
                                    </td>
                                    <td>
                                        <span class="status-badge @(user.IsActive ? "status-active" : "status-inactive")">
                                            <span class="status-indicator"></span>
                                            @user.StatusText
                                        </span>
                                    </td>
                                    <td>
                                        <strong>@user.OrderCount</strong>
                                    </td>
                                    <td>
                                        <strong>@user.TotalSpent.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</strong>
                                    </td>
                                    <td>
                                        @if (user.LastLoginDate.HasValue)
                                        {
                                            <span>@user.LastLoginDate.Value.ToString("dd/MM/yyyy HH:mm")</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Chưa đăng nhập</span>
                                        }
                                    </td>
                                    <td>@user.CreatedAt.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        <div class="action-buttons">
                                            <a href="/admin/users/@user.Id" class="btn-icon btn-view" title="Xem chi tiết">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a href="/admin/users/@user.Id/edit" class="btn-icon btn-edit" title="Chỉnh sửa">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button type="button" class="btn-icon btn-toggle" 
                                                    onclick="toggleUserStatus('@user.Id')" 
                                                    title="@(user.IsActive ? "Khóa tài khoản" : "Kích hoạt tài khoản")">
                                                <i class="fas fa-@(user.IsActive ? "lock" : "unlock")"></i>
                                            </button>
                                            <button type="button" class="btn-icon btn-delete" 
                                                    onclick="deleteUser('@user.Id')" 
                                                    title="Xóa người dùng">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <div class="pagination-modern">
                        @if (Model.CurrentPage > 1)
                        {
                            <a href="?page=@(Model.CurrentPage - 1)&searchTerm=@(Model.Filter?.SearchTerm ?? Model.SearchTerm)&role=@(Model.Filter?.Role ?? Model.RoleFilter)&isActive=@(Model.Filter?.IsActive)" 
                               class="page-link-modern">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        }

                        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                        {
                            <a href="?page=@i&searchTerm=@(Model.Filter?.SearchTerm ?? Model.SearchTerm)&role=@(Model.Filter?.Role ?? Model.RoleFilter)&isActive=@(Model.Filter?.IsActive)" 
                               class="page-link-modern @(i == Model.CurrentPage ? "active" : "")">
                                @i
                            </a>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <a href="?page=@(Model.CurrentPage + 1)&searchTerm=@(Model.Filter?.SearchTerm ?? Model.SearchTerm)&role=@(Model.Filter?.Role ?? Model.RoleFilter)&isActive=@(Model.Filter?.IsActive)" 
                               class="page-link-modern">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        }
                    </div>
                }
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-users"></i>
                    <h4>Không tìm thấy người dùng</h4>
                    <p>Thay đổi bộ lọc hoặc thêm người dùng mới để bắt đầu.</p>
                    <a href="/admin/users/create" class="btn btn-primary-modern btn-modern mt-3">
                        <i class="fas fa-plus me-2"></i>
                        Thêm người dùng đầu tiên
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleUserStatus(userId) {
            if (!confirm('Bạn có chắc chắn muốn thay đổi trạng thái của người dùng này?')) {
                return;
            }

            fetch(`/admin/users/${userId}/toggle-status`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message || 'Có lỗi xảy ra!');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi thực hiện thao tác!');
            });
        }

        function deleteUser(userId) {
            if (!confirm('Bạn có chắc chắn muốn xóa người dùng này? Hành động này không thể hoàn tác!')) {
                return;
            }

            fetch(`/admin/users/${userId}/delete`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message || 'Có lỗi xảy ra!');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi thực hiện thao tác!');
            });
        }

        // Auto-submit form on filter change
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('filterForm');
            const selects = form.querySelectorAll('select');
            
            selects.forEach(select => {
                select.addEventListener('change', function() {
                    form.submit();
                });
            });
        });
    </script>
}