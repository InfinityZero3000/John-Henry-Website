@model JohnHenryFashionWeb.ViewModels.OrderManagementViewModel

@{
    ViewData["Title"] = "Quản lý đơn hàng";
    ViewData["ActivePage"] = "Orders";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <style>
        .order-management {
            background: #f8f9fa;
        }
        
        .filter-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 1.5rem;
        }
        
        .orders-table {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .status-badge {
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }
        
        .status-pending {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }
        
        .status-processing {
            background: #cce5ff;
            color: #004085;
            border: 1px solid #99d6ff;
        }
        
        .status-shipped {
            background: #d4edda;
            color: #155724;
            border: 1px solid #a8d4b0;
        }
        
        .status-delivered {
            background: #d1ecf1;
            color: #0c5460;
            border: 1px solid #7dd3fc;
        }
        
        .status-cancelled {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f1b0b7;
        }
        
        .product-image {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 8px;
        }
        
        .bulk-actions {
            display: none;
            align-items: center;
            gap: 1rem;
        }
        
        .bulk-actions.show {
            display: flex;
        }
    </style>
}

<div class="content-wrapper">
    <div class="page-header">
        <h1 class="page-title">
            <i class="fas fa-shopping-cart me-2"></i>
            Quản lý đơn hàng
        </h1>
        <div class="page-actions">
            <button class="btn btn-primary" onclick="exportOrders()">
                <i class="fas fa-download me-2"></i>Xuất báo cáo
            </button>
        </div>
    </div>

    <!-- Order Statistics -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="stat-card bg-warning text-white">
                <div class="stat-icon">
                    <i class="fas fa-clock"></i>
                </div>
                <div class="stat-content">
                    <h3>@Model.PendingOrdersCount</h3>
                    <p>Chờ xử lý</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card bg-info text-white">
                <div class="stat-icon">
                    <i class="fas fa-cog"></i>
                </div>
                <div class="stat-content">
                    <h3>@Model.ProcessingOrdersCount</h3>
                    <p>Đang xử lý</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card bg-success text-white">
                <div class="stat-icon">
                    <i class="fas fa-shipping-fast"></i>
                </div>
                <div class="stat-content">
                    <h3>@Model.ShippedOrdersCount</h3>
                    <p>Đã giao hàng</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card bg-primary text-white">
                <div class="stat-icon">
                    <i class="fas fa-chart-line"></i>
                </div>
                <div class="stat-content">
                    <h3>@Model.TotalRevenue.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</h3>
                    <p>Tổng doanh thu</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Filters -->
    <div class="filter-card">
        <div class="card-body">
            <form method="get" id="orderFilterForm">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label class="form-label">Tìm kiếm</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-search"></i></span>
                            <input type="text" class="form-control" name="search" placeholder="Mã đơn hàng, khách hàng..." 
                                   value="@Model.SearchTerm">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Trạng thái</label>
                        <select name="status" class="form-select">
                            <option value="">Tất cả</option>
                            <option value="Pending" selected="@(Model.StatusFilter == "Pending")">Chờ xử lý</option>
                            <option value="Processing" selected="@(Model.StatusFilter == "Processing")">Đang xử lý</option>
                            <option value="Shipped" selected="@(Model.StatusFilter == "Shipped")">Đã giao</option>
                            <option value="Delivered" selected="@(Model.StatusFilter == "Delivered")">Hoàn thành</option>
                            <option value="Cancelled" selected="@(Model.StatusFilter == "Cancelled")">Đã hủy</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Từ ngày</label>
                        <input type="date" class="form-control" name="fromDate" value="@Model.FromDate?.ToString("yyyy-MM-dd")">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Đến ngày</label>
                        <input type="date" class="form-control" name="toDate" value="@Model.ToDate?.ToString("yyyy-MM-dd")">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Sắp xếp</label>
                        <select name="sortBy" class="form-select">
                            <option value="newest" selected="@(Model.SortBy == "newest")">Mới nhất</option>
                            <option value="oldest" selected="@(Model.SortBy == "oldest")">Cũ nhất</option>
                            <option value="amount_high" selected="@(Model.SortBy == "amount_high")">Giá trị cao</option>
                            <option value="amount_low" selected="@(Model.SortBy == "amount_low")">Giá trị thấp</option>
                        </select>
                    </div>
                    <div class="col-md-1">
                        <label class="form-label">&nbsp;</label>
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-filter"></i>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Bulk Actions -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="bulk-actions" id="bulkActions">
            <span class="text-muted">
                <span id="selectedCount">0</span> đơn hàng được chọn
            </span>
            <div class="btn-group">
                <button class="btn btn-sm btn-outline-success" onclick="updateSelectedOrders('Processing')">
                    <i class="fas fa-play"></i> Xử lý
                </button>
                <button class="btn btn-sm btn-outline-info" onclick="updateSelectedOrders('Shipped')">
                    <i class="fas fa-shipping-fast"></i> Giao hàng
                </button>
                <button class="btn btn-sm btn-outline-primary" onclick="updateSelectedOrders('Delivered')">
                    <i class="fas fa-check"></i> Hoàn thành
                </button>
                <button class="btn btn-sm btn-outline-danger" onclick="updateSelectedOrders('Cancelled')">
                    <i class="fas fa-times"></i> Hủy đơn
                </button>
            </div>
        </div>
        <div class="d-flex align-items-center gap-2">
            <span class="text-muted">@Model.Orders.Count() đơn hàng</span>
        </div>
    </div>
                <div class="stat-content">
                    <h3>@Model.CompletedOrders</h3>
                    <p>Hoàn thành</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card bg-danger text-white">
                <div class="stat-icon">
                    <i class="fas fa-times-circle"></i>
                </div>
                <div class="stat-content">
                    <h3>@Model.CancelledOrders</h3>
                    <p>Đã hủy</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-2">
                    <label class="form-label">Trạng thái</label>
                    <select name="status" class="form-select">
                        <option value="">Tất cả</option>
                        <option value="Pending" selected="@(ViewBag.Status == "Pending")">Chờ xử lý</option>
                        <option value="Confirmed" selected="@(ViewBag.Status == "Confirmed")">Đã xác nhận</option>
                        <option value="Shipping" selected="@(ViewBag.Status == "Shipping")">Đang giao</option>
                        <option value="Completed" selected="@(ViewBag.Status == "Completed")">Hoàn thành</option>
                        <option value="Cancelled" selected="@(ViewBag.Status == "Cancelled")">Đã hủy</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Từ ngày</label>
                    <input type="date" name="fromDate" class="form-control" value="@ViewBag.FromDate" />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Đến ngày</label>
                    <input type="date" name="toDate" class="form-control" value="@ViewBag.ToDate" />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Tìm kiếm</label>
                    <input type="text" name="search" class="form-control" placeholder="Mã đơn, tên KH, SĐT..." value="@ViewBag.Search" />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Hiển thị</label>
                    <select name="pageSize" class="form-select">
                        <option value="10" selected="@(ViewBag.PageSize == 10)">10</option>
                        <option value="25" selected="@(ViewBag.PageSize == 25)">25</option>
                        <option value="50" selected="@(ViewBag.PageSize == 50)">50</option>
                        <option value="100" selected="@(ViewBag.PageSize == 100)">100</option>
                    </select>
                </div>
                <div class="col-md-1 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Orders Table -->
    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">Danh sách đơn hàng (@Model.TotalOrders đơn hàng)</h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th width="100">Mã đơn</th>
                            <th width="150">Khách hàng</th>
                            <th width="120">Ngày đặt</th>
                            <th width="100">Tổng tiền</th>
                            <th width="100">Trạng thái</th>
                            <th width="120">Thanh toán</th>
                            <th width="150">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model.Orders)
                        {
                            <tr>
                                <td>
                                    <strong>#@order.OrderNumber</strong>
                                </td>
                                <td>
                                    <div>
                                        <strong>@order.CustomerName</strong>
                                        <br>
                                        <small class="text-muted">@order.CustomerPhone</small>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        @order.OrderDate.ToString("dd/MM/yyyy")
                                        <br>
                                        <small class="text-muted">@order.OrderDate.ToString("HH:mm")</small>
                                    </div>
                                </td>
                                <td>
                                    <strong class="text-primary">@order.TotalAmount.ToString("N0") ₫</strong>
                                </td>
                                <td>
                                    <span class="badge bg-@GetStatusBadgeClass(order.Status)">
                                        @GetStatusText(order.Status)
                                    </span>
                                </td>
                                <td>
                                    <span class="badge bg-@(order.PaymentStatus == "Paid" ? "success" : "warning")">
                                        @(order.PaymentStatus == "Paid" ? "Đã thanh toán" : "Chưa thanh toán")
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="viewOrderDetails(@order.Id)">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-success" onclick="printInvoice(@order.Id)">
                                            <i class="fas fa-print"></i>
                                        </button>
                                        @if (order.Status == "Pending")
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-info" onclick="updateOrderStatus(@order.Id, 'Confirmed')">
                                                <i class="fas fa-check"></i>
                                            </button>
                                        }
                                        @if (order.Status == "Confirmed")
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-warning" onclick="updateOrderStatus(@order.Id, 'Shipping')">
                                                <i class="fas fa-truck"></i>
                                            </button>
                                        }
                                        @if (order.Status == "Shipping")
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-success" onclick="updateOrderStatus(@order.Id, 'Completed')">
                                                <i class="fas fa-check-circle"></i>
                                            </button>
                                        }
                                        @if (order.Status == "Pending" || order.Status == "Confirmed")
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-danger" onclick="updateOrderStatus(@order.Id, 'Cancelled')">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        
        @if (Model.TotalPages > 1)
        {
            <div class="card-footer">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center mb-0">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(Model.CurrentPage - 1)&status=@ViewBag.Status&fromDate=@ViewBag.FromDate&toDate=@ViewBag.ToDate&search=@ViewBag.Search&pageSize=@ViewBag.PageSize">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        }
                        
                        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="?page=@i&status=@ViewBag.Status&fromDate=@ViewBag.FromDate&toDate=@ViewBag.ToDate&search=@ViewBag.Search&pageSize=@ViewBag.PageSize">@i</a>
                            </li>
                        }
                        
                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(Model.CurrentPage + 1)&status=@ViewBag.Status&fromDate=@ViewBag.FromDate&toDate=@ViewBag.ToDate&search=@ViewBag.Search&pageSize=@ViewBag.PageSize">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        }
    </div>
</div>

<!-- Order Details Modal -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chi tiết đơn hàng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="orderDetailsContent">
                <!-- Order details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" onclick="printCurrentOrder()">
                    <i class="fas fa-print me-2"></i>In hóa đơn
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentOrderId = 0;

        function viewOrderDetails(orderId) {
            currentOrderId = orderId;
            // Load order details via AJAX
            fetch(`/admin/order-details/${orderId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('orderDetailsContent').innerHTML = html;
                    new bootstrap.Modal(document.getElementById('orderDetailsModal')).show();
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Không thể tải thông tin đơn hàng');
                });
        }

        function updateOrderStatus(orderId, newStatus) {
            const statusText = {
                'Confirmed': 'xác nhận',
                'Shipping': 'chuyển sang đang giao',
                'Completed': 'hoàn thành',
                'Cancelled': 'hủy'
            };

            if (confirm(`Bạn có chắc muốn ${statusText[newStatus]} đơn hàng này?`)) {
                // Update status via AJAX
                fetch('/admin/update-order-status', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({
                        orderId: orderId,
                        status: newStatus
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Có lỗi xảy ra: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Không thể cập nhật trạng thái đơn hàng');
                });
            }
        }

        function printInvoice(orderId) {
            window.open(`/admin/print-invoice/${orderId}`, '_blank');
        }

        function printCurrentOrder() {
            if (currentOrderId > 0) {
                printInvoice(currentOrderId);
            }
        }

        function exportOrders() {
            const params = new URLSearchParams(window.location.search);
            window.location.href = '/admin/export-orders?' + params.toString();
        }

        // Auto refresh every 30 seconds for pending orders
        @if (ViewBag.Status == "Pending" || string.IsNullOrEmpty(ViewBag.Status))
        {
            @:setInterval(() => {
                @:if (document.querySelector('.modal.show') === null) {
                    @:location.reload();
                @:}
            @:}, 30000);
        }
    </script>
}

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "warning",
            "Confirmed" => "info",
            "Shipping" => "primary",
            "Completed" => "success",
            "Cancelled" => "danger",
            _ => "secondary"
        };
    }

    string GetStatusText(string status)
    {
        return status switch
        {
            "Pending" => "Chờ xử lý",
            "Confirmed" => "Đã xác nhận",
            "Shipping" => "Đang giao",
            "Completed" => "Hoàn thành",
            "Cancelled" => "Đã hủy",
            _ => "Không xác định"
        };
    }
}
