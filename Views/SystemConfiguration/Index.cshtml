@model IEnumerable<JohnHenryFashionWeb.Models.SystemConfiguration>
@{
    ViewData["Title"] = "System Settings";
    var currentCategory = ViewBag.CurrentCategory as string;
    var categories = ViewBag.Categories as List<string> ?? new List<string>();
}

<style>
    .glassmorphism {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }

    .settings-gradient {
        background: linear-gradient(135deg, #00d2ff 0%, #3a47d5 100%);
    }

    .category-badge {
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
        text-transform: capitalize;
    }

    .category-general { background: rgba(96, 125, 139, 0.2); color: #607d8b; border: 1px solid rgba(96, 125, 139, 0.3); }
    .category-payment { background: rgba(76, 175, 80, 0.2); color: #4caf50; border: 1px solid rgba(76, 175, 80, 0.3); }
    .category-shipping { background: rgba(33, 150, 243, 0.2); color: #2196f3; border: 1px solid rgba(33, 150, 243, 0.3); }
    .category-tax { background: rgba(255, 152, 0, 0.2); color: #ff9800; border: 1px solid rgba(255, 152, 0, 0.3); }
    .category-email { background: rgba(233, 30, 99, 0.2); color: #e91e63; border: 1px solid rgba(233, 30, 99, 0.3); }
    .category-notification { background: rgba(156, 39, 176, 0.2); color: #9c27b0; border: 1px solid rgba(156, 39, 176, 0.3); }
    .category-security { background: rgba(244, 67, 54, 0.2); color: #f44336; border: 1px solid rgba(244, 67, 54, 0.3); }
    .category-api { background: rgba(0, 188, 212, 0.2); color: #00bcd4; border: 1px solid rgba(0, 188, 212, 0.3); }

    .type-badge {
        padding: 2px 8px;
        border-radius: 12px;
        font-size: 0.75rem;
        background: rgba(255, 255, 255, 0.2);
        color: #fff;
    }

    .nav-pills .nav-link {
        color: rgba(255, 255, 255, 0.7);
        border-radius: 10px;
        transition: all 0.3s ease;
    }

    .nav-pills .nav-link:hover {
        color: white;
        background: rgba(255, 255, 255, 0.1);
    }

    .nav-pills .nav-link.active {
        background: rgba(255, 255, 255, 0.2);
        color: white;
    }
</style>

<div class="settings-gradient min-vh-100 py-5">
    <div class="container-fluid">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="glassmorphism p-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="text-white mb-1">
                                <i class="fas fa-cog me-2"></i>System Settings
                            </h2>
                            <p class="text-white-50 mb-0">Manage system configuration and settings</p>
                        </div>
                        <div>
                            <a href="@Url.Action("Create")" class="btn btn-light me-2">
                                <i class="fas fa-plus me-2"></i>New Setting
                            </a>
                            <a href="/admin" class="btn btn-outline-light">
                                <i class="fas fa-arrow-left me-2"></i>Back to Admin
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Links -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="glassmorphism p-3">
                    <div class="row g-2">
                        <div class="col-md-3">
                            <a href="@Url.Action("Shipping")" class="btn btn-outline-light w-100">
                                <i class="fas fa-shipping-fast me-2"></i>Shipping Providers
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a href="@Url.Action("Email")" class="btn btn-outline-light w-100">
                                <i class="fas fa-envelope me-2"></i>Email Configuration
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a href="@Url.Action("PaymentGateways")" class="btn btn-outline-light w-100">
                                <i class="fas fa-credit-card me-2"></i>Payment Gateways
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a href="@Url.Action("Index")" class="btn btn-light w-100">
                                <i class="fas fa-sliders-h me-2"></i>General Settings
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Category Filter -->
        @if (categories.Any())
        {
            <div class="row mb-4">
                <div class="col-12">
                    <div class="glassmorphism p-3">
                        <ul class="nav nav-pills mb-0">
                            <li class="nav-item">
                                <a class="nav-link @(string.IsNullOrEmpty(currentCategory) ? "active" : "")" href="@Url.Action("Index")">
                                    All Categories
                                </a>
                            </li>
                            @foreach (var cat in categories)
                            {
                                <li class="nav-item">
                                    <a class="nav-link @(currentCategory == cat ? "active" : "")" href="@Url.Action("Index", new { category = cat })">
                                        <span class="text-capitalize">@cat</span>
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }

        <!-- Settings List -->
        <div class="row">
            <div class="col-12">
                <div class="glassmorphism p-4">
                    @if (Model != null && Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-dark table-hover mb-0">
                                <thead>
                                    <tr>
                                        <th>Key</th>
                                        <th>Value</th>
                                        <th>Type</th>
                                        <th>Category</th>
                                        <th>Description</th>
                                        <th>Updated</th>
                                        <th width="150">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var setting in Model)
                                    {
                                        <tr>
                                            <td>
                                                <code class="text-info">@setting.Key</code>
                                                @if (setting.IsEncrypted)
                                                {
                                                    <i class="fas fa-lock text-warning ms-2" title="Encrypted"></i>
                                                }
                                            </td>
                                            <td>
                                                @if (setting.IsEncrypted)
                                                {
                                                    <span class="text-white-50">••••••••</span>
                                                }
                                                else if (setting.Value.Length > 50)
                                                {
                                                    <span class="text-white" title="@setting.Value">@setting.Value.Substring(0, 50)...</span>
                                                }
                                                else
                                                {
                                                    <span class="text-white">@setting.Value</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="type-badge">@setting.Type</span>
                                            </td>
                                            <td>
                                                <span class="category-badge category-@setting.Category">@setting.Category</span>
                                            </td>
                                            <td>
                                                <span class="text-white-50">@setting.Description</span>
                                            </td>
                                            <td>
                                                <small class="text-white-50">
                                                    @setting.UpdatedAt.ToString("MMM dd, yyyy")
                                                    @if (!string.IsNullOrEmpty(setting.UpdatedBy))
                                                    {
                                                        <br />
                                                        <span>by @setting.UpdatedBy</span>
                                                    }
                                                </small>
                                            </td>
                                            <td>
                                                <a href="@Url.Action("Edit", new { id = setting.Id })" class="btn btn-sm btn-info me-1" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button type="button" class="btn btn-sm btn-danger" onclick="confirmDelete('@setting.Id', '@setting.Key')" title="Delete">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-cog fa-3x text-white-50 mb-3"></i>
                            <p class="text-white-50">No settings found</p>
                            <a href="@Url.Action("Create")" class="btn btn-light mt-3">
                                <i class="fas fa-plus me-2"></i>Create First Setting
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content bg-dark">
            <div class="modal-header border-secondary">
                <h5 class="modal-title text-white">Delete Setting</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <form id="deleteForm" method="post">
                @@Html.AntiForgeryToken()
                <div class="modal-body">
                    <p class="text-white">Are you sure you want to delete the setting <strong id="settingKey"></strong>?</p>
                    <p class="text-danger">This action cannot be undone.</p>
                </div>
                <div class="modal-footer border-secondary">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-2"></i>Delete
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(id, key) {
            document.getElementById('settingKey').textContent = key;
            document.getElementById('deleteForm').action = `/admin/settings/${id}/delete`;
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }
    </script>
}
