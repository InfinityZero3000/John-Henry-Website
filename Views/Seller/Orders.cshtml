@model JohnHenryFashionWeb.ViewModels.OrderListViewModel
@{
    ViewData["Title"] = "Quản lý đơn hàng";
    Layout = "~/Views/Shared/_SellerLayout.cshtml";
}

@section Styles {
    <!-- Orders now uses the clean seller-modern.css file instead of inline purple styles -->
}
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            border: none;
        }

        .status-pending {
            background: linear-gradient(45deg, #f59e0b, #d97706);
            color: white;
        }

        .status-processing {
            background: linear-gradient(45deg, #3b82f6, #1d4ed8);
            color: white;
        }

        .status-shipped {
            background: linear-gradient(45deg, #10b981, #059669);
            color: white;
        }

        .status-delivered {
            background: linear-gradient(45deg, #06b6d4, #0891b2);
            color: white;
        }

        .status-cancelled {
            background: linear-gradient(45deg, #ef4444, #dc2626);
            color: white;
        }

        .filter-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            margin-bottom: 2rem;
        }
    </style>
}

<div class="orders-modern">
    <div class="container-fluid">
        <!-- Header -->
        <div class="page-header">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h2 fw-bold mb-2">
                        <i class="fas fa-shopping-cart me-3"></i>
                        Quản lý đơn hàng
                    </h1>
                    <p class="mb-0 opacity-75">Theo dõi và xử lý các đơn hàng của bạn</p>
                </div>
                <div>
                    <button type="button" class="btn btn-light btn-lg">
                        <i class="fas fa-download me-2"></i>Xuất báo cáo
                    </button>
                </div>
            </div>
        </div>

        <!-- Filter and Search -->
        <div class="filter-card">
            <form method="get" class="row g-3">
                <div class="col-md-3">
                    <label for="searchTerm" class="form-label fw-medium text-dark">Tìm kiếm</label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="fas fa-search text-muted"></i>
                        </span>
                        <input type="text" class="form-control border-start-0" id="searchTerm" name="search" 
                               placeholder="Mã đơn, tên khách hàng..." value="@Model.SearchTerm">
                    </div>
                </div>
                <div class="col-md-3">
                    <label for="status" class="form-label fw-medium text-dark">Trạng thái</label>
                    <select class="form-select" id="status" name="status">
                        <option value="">Tất cả trạng thái</option>
                        @{
                            var statusOptions = new[] {
                                new { Value = "pending", Text = "Chờ xử lý" },
                                new { Value = "processing", Text = "Đang xử lý" },
                                new { Value = "shipped", Text = "Đã gửi" },
                                new { Value = "delivered", Text = "Đã giao" },
                                new { Value = "cancelled", Text = "Đã hủy" }
                            };
                        }
                        @foreach (var option in statusOptions)
                        {
                            if (Model.Status == option.Value)
                            {
                                <option value="@option.Value" selected>@option.Text</option>
                            }
                            else
                            {
                                <option value="@option.Value">@option.Text</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="dateFrom" class="form-label fw-medium text-dark">Từ ngày</label>
                    <input type="date" class="form-control" id="dateFrom" name="fromDate" value="@Model.FromDate?.ToString("yyyy-MM-dd")">
                </div>
                <div class="col-md-2">
                    <label for="dateTo" class="form-label fw-medium text-dark">Đến ngày</label>
                    <input type="date" class="form-control" id="dateTo" name="toDate" value="@Model.ToDate?.ToString("yyyy-MM-dd")">
                </div>
                <div class="col-md-2">
                    <label class="form-label text-transparent">.</label>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search me-1"></i>Tìm
                        </button>
                    </div>
                </div>
            </form>
        </div>

        <!-- Orders Table -->
        <div class="orders-table">
            @if (Model.Orders.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="fw-bold">Mã đơn hàng</th>
                                <th class="fw-bold">Khách hàng</th>
                                <th class="fw-bold">Tổng tiền</th>
                                <th class="fw-bold">Trạng thái</th>
                                <th class="fw-bold">Thanh toán</th>
                                <th class="fw-bold">Ngày đặt</th>
                                <th class="fw-bold">Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Orders)
                            {
                                <tr>
                                    <td>
                                        <strong class="text-primary">@order.OrderNumber</strong>
                                    </td>
                                    <td>
                                        <div>
                                            <strong>@order.CustomerName</strong>
                                            <br><small class="text-muted">@order.CustomerEmail</small>
                                        </div>
                                    </td>
                                    <td>
                                        <strong class="text-success">@order.Total.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</strong>
                                    </td>
                                    <td>
                                        <span class="status-badge status-@order.Status.ToLower()">
                                            @GetStatusText(order.Status)
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge @GetPaymentStatusBadgeClass(order.PaymentStatus)">
                                            @GetPaymentStatusText(order.PaymentStatus)
                                        </span>
                                    </td>
                                    <td>
                                        <small class="text-muted">@order.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <a href="@Url.Action("OrderDetail", "Seller", new { id = order.Id })" 
                                               class="btn btn-outline-primary btn-sm">
                                                <i class="fas fa-eye me-1"></i>Chi tiết
                                            </a>
                                            @if (order.Status == "pending")
                                            {
                                                <button class="btn btn-outline-success btn-sm" 
                                                        onclick="updateOrderStatus('@order.Id', 'processing')">
                                                    <i class="fas fa-check me-1"></i>Duyệt
                                                </button>
                                            }
                                            else if (order.Status == "processing")
                                            {
                                                <button class="btn btn-outline-info btn-sm" 
                                                        onclick="updateOrderStatus('@order.Id', 'shipped')">
                                                    <i class="fas fa-truck me-1"></i>Gửi hàng
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-inbox text-muted" style="font-size: 4rem;"></i>
                    <h4 class="text-muted mt-3">Chưa có đơn hàng nào</h4>
                    <p class="text-muted">Các đơn hàng sẽ hiển thị tại đây khi có khách đặt mua.</p>
                </div>
            }
        </div>
    </div>
}

@functions {
    string GetStatusText(string status)
    {
        return status?.ToLower() switch
        {
            "pending" => "Chờ xử lý",
            "processing" => "Đang xử lý", 
            "shipped" => "Đã gửi",
            "delivered" => "Đã giao",
            "cancelled" => "Đã hủy",
            _ => "Không xác định"
        };
    }

    string GetPaymentStatusText(string paymentStatus)
    {
        return paymentStatus?.ToLower() switch
        {
            "pending" => "Chờ thanh toán",
            "paid" => "Đã thanh toán",
            "failed" => "Thất bại",
            "refunded" => "Đã hoàn tiền",
            _ => "Không xác định"
        };
    }

    string GetPaymentStatusBadgeClass(string paymentStatus)
    {
        return paymentStatus?.ToLower() switch
        {
            "pending" => "bg-warning",
            "paid" => "bg-success",
            "failed" => "bg-danger",
            "refunded" => "bg-info",
            _ => "bg-secondary"
        };
    }
}

@section Scripts {
    <script>
        function updateOrderStatus(orderId, newStatus) {
            if (confirm('Bạn có chắc chắn muốn cập nhật trạng thái đơn hàng này?')) {
                // Here you would make an AJAX call to update the order status
                // For now, we'll just reload the page
                window.location.reload();
            }
        }

        // Auto-submit form when filter changes
        document.querySelectorAll('select[name="status"]').forEach(select => {
            select.addEventListener('change', function() {
                this.form.submit();
            });
        });
    </script>
}