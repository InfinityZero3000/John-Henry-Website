@using JohnHenryFashionWeb.Models
@using System.Security.Claims
@model IEnumerable<ProductReview>
@{
    ViewData["Title"] = $"Đánh giá sản phẩm - {ViewBag.Product.Name}";
    var product = ViewBag.Product as Product;
    var totalReviews = (int)ViewBag.TotalReviews;
    var currentPage = (int)ViewBag.CurrentPage;
    var totalPages = (int)ViewBag.TotalPages;
    var ratingStats = ViewBag.RatingStats as IEnumerable<dynamic>;
    var averageRating = (double)ViewBag.AverageRating;
    var canReview = (bool)ViewBag.CanReview;
}

<div class="container my-5">
    <!-- Product Header -->
    <div class="row mb-4">
        <div class="col-md-3">
            <img src="@(!string.IsNullOrEmpty(product?.FeaturedImageUrl) ? product.FeaturedImageUrl : "/images/no-image.jpg")" 
                 alt="@product?.Name" class="img-fluid rounded">
        </div>
        <div class="col-md-9">
            <h1 class="h3">@product?.Name</h1>
            <p class="text-muted">@product?.Category?.Name</p>
            <p class="fw-bold text-primary fs-4">@product?.Price.ToString("C")</p>
            
            <!-- Rating Summary -->
            <div class="d-flex align-items-center mb-3">
                <div class="star-rating me-3">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <i class="fas fa-star @(i <= averageRating ? "text-warning" : "text-muted")"></i>
                    }
                </div>
                <span class="fw-bold">@averageRating.ToString("F1")</span>
                <span class="text-muted ms-2">(@totalReviews đánh giá)</span>
            </div>
            
            <a href="/Products/Details/@product?.Id" class="btn btn-outline-primary">
                <i class="fas fa-arrow-left"></i> Quay lại sản phẩm
            </a>
        </div>
    </div>

    <!-- Rating Statistics -->
    @if (ratingStats != null && ratingStats.Any())
    {
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Thống kê đánh giá</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    @for (int rating = 5; rating >= 1; rating--)
                    {
                        var count = ratingStats.FirstOrDefault(r => r.Rating == rating)?.Count ?? 0;
                        var percentage = totalReviews > 0 ? (count * 100 / totalReviews) : 0;
                        
                        <div class="col-12 mb-2">
                            <div class="d-flex align-items-center">
                                <span class="me-2">@rating sao</span>
                                <div class="progress flex-grow-1 me-2" style="height: 8px;">
                                    <div class="progress-bar bg-warning" style="width: @percentage%"></div>
                                </div>
                                <span class="text-muted">@count</span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    <!-- Add Review Section -->
    @if (canReview)
    {
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Viết đánh giá của bạn</h5>
            </div>
            <div class="card-body">
                <form id="reviewForm">
                    <div class="mb-3">
                        <label class="form-label">Đánh giá *</label>
                        <div class="star-rating-input">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <input type="radio" name="rating" value="@i" id="star@i" class="d-none" required>
                                <label for="star@i" class="star-label">
                                    <i class="fas fa-star"></i>
                                </label>
                            }
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="reviewTitle" class="form-label">Tiêu đề đánh giá</label>
                        <input type="text" class="form-control" id="reviewTitle" name="title" maxlength="100">
                    </div>
                    
                    <div class="mb-3">
                        <label for="reviewComment" class="form-label">Nội dung đánh giá</label>
                        <textarea class="form-control" id="reviewComment" name="comment" rows="4" maxlength="500"></textarea>
                    </div>
                    
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-paper-plane"></i> Gửi đánh giá
                    </button>
                </form>
            </div>
        </div>
    }
    else if (User.Identity?.IsAuthenticated == true)
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle"></i>
            Bạn chỉ có thể đánh giá sản phẩm đã mua và chưa từng đánh giá.
        </div>
    }
    else
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle"></i>
            Vui lòng <a href="/Account/Login">đăng nhập</a> để viết đánh giá.
        </div>
    }

    <!-- Reviews List -->
    <div class="reviews-section">
        <h4 class="mb-4">Đánh giá từ khách hàng (@totalReviews)</h4>
        
        @if (Model.Any())
        {
            @foreach (var review in Model)
            {
                <div class="card mb-3 review-item">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <div>
                                <div class="d-flex align-items-center mb-1">
                                    <strong class="me-2">@($"{review.User.FirstName} {review.User.LastName}".Trim())</strong>
                                    <div class="star-rating me-2">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted") small"></i>
                                        }
                                    </div>
                                </div>
                                @if (!string.IsNullOrEmpty(review.Title))
                                {
                                    <h6 class="fw-bold">@review.Title</h6>
                                }
                            </div>
                            <small class="text-muted">@review.CreatedAt.ToString("dd/MM/yyyy")</small>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(review.Comment))
                        {
                            <p class="mb-2">@review.Comment</p>
                        }
                        
                        <!-- Review Actions -->
                        <div class="d-flex align-items-center justify-content-between">
                            <div>
                                @if (User.Identity?.IsAuthenticated == true)
                                {
                                    <button class="btn btn-sm btn-outline-secondary" onclick="toggleHelpful('@review.Id')">
                                        <i class="fas fa-thumbs-up"></i> Hữu ích
                                    </button>
                                }
                            </div>
                            
                            @if (User.Identity?.IsAuthenticated == true && review.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier))
                            {
                                <div>
                                    <button class="btn btn-sm btn-outline-primary" onclick="editReview('@review.Id', @review.Rating, '@review.Title', '@review.Comment')">
                                        <i class="fas fa-edit"></i> Sửa
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteReview('@review.Id')">
                                        <i class="fas fa-trash"></i> Xóa
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            
            <!-- Pagination -->
            @if (totalPages > 1)
            {
                <nav aria-label="Review pagination">
                    <ul class="pagination justify-content-center">
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(currentPage - 1)">Trước</a>
                            </li>
                        }
                        
                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="?page=@i">@i</a>
                            </li>
                        }
                        
                        @if (currentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(currentPage + 1)">Sau</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-comment-alt fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">Chưa có đánh giá nào</h5>
                <p class="text-muted">Hãy là người đầu tiên đánh giá sản phẩm này!</p>
            </div>
        }
    </div>
</div>

<!-- Edit Review Modal -->
<div class="modal fade" id="editReviewModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chỉnh sửa đánh giá</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="editReviewForm">
                <div class="modal-body">
                    <input type="hidden" id="editReviewId">
                    
                    <div class="mb-3">
                        <label class="form-label">Đánh giá *</label>
                        <div class="star-rating-input" id="editStarRating">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <input type="radio" name="editRating" value="@i" id="editStar@i" class="d-none" required>
                                <label for="editStar@i" class="star-label">
                                    <i class="fas fa-star"></i>
                                </label>
                            }
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="editReviewTitle" class="form-label">Tiêu đề đánh giá</label>
                        <input type="text" class="form-control" id="editReviewTitle" maxlength="100">
                    </div>
                    
                    <div class="mb-3">
                        <label for="editReviewComment" class="form-label">Nội dung đánh giá</label>
                        <textarea class="form-control" id="editReviewComment" rows="4" maxlength="500"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">Cập nhật</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Star rating functionality
        function initStarRating() {
            $('.star-rating-input').each(function() {
                const container = $(this);
                const stars = container.find('.star-label');
                
                stars.hover(
                    function() {
                        const index = stars.index(this);
                        stars.slice(0, index + 1).addClass('hover');
                        stars.slice(index + 1).removeClass('hover');
                    },
                    function() {
                        stars.removeClass('hover');
                    }
                );
                
                stars.click(function() {
                    const index = stars.index(this);
                    const radio = container.find(`input[value="${index + 1}"]`);
                    radio.prop('checked', true);
                    
                    stars.removeClass('selected');
                    stars.slice(0, index + 1).addClass('selected');
                });
            });
        }

        // Submit review
        $('#reviewForm').submit(function(e) {
            e.preventDefault();
            
            const formData = {
                productId: '@product?.Id',
                rating: $('input[name="rating"]:checked').val(),
                title: $('#reviewTitle').val(),
                comment: $('#reviewComment').val()
            };

            $.post('/Review/Add', formData)
                .done(function(response) {
                    if (response.success) {
                        showAlert('success', response.message);
                        setTimeout(() => location.reload(), 1500);
                    } else {
                        showAlert('danger', response.message);
                    }
                })
                .fail(function() {
                    showAlert('danger', 'Có lỗi xảy ra khi gửi đánh giá');
                });
        });

        // Edit review
        function editReview(reviewId, rating, title, comment) {
            $('#editReviewId').val(reviewId);
            $('#editReviewTitle').val(title || '');
            $('#editReviewComment').val(comment || '');
            
            // Set rating
            $(`#editStar${rating}`).prop('checked', true);
            $('#editStarRating .star-label').removeClass('selected');
            $('#editStarRating .star-label').slice(0, rating).addClass('selected');
            
            $('#editReviewModal').modal('show');
        }

        $('#editReviewForm').submit(function(e) {
            e.preventDefault();
            
            const formData = {
                reviewId: $('#editReviewId').val(),
                rating: $('input[name="editRating"]:checked').val(),
                title: $('#editReviewTitle').val(),
                comment: $('#editReviewComment').val()
            };

            $.post('/Review/Edit', formData)
                .done(function(response) {
                    if (response.success) {
                        showAlert('success', response.message);
                        $('#editReviewModal').modal('hide');
                        setTimeout(() => location.reload(), 1500);
                    } else {
                        showAlert('danger', response.message);
                    }
                })
                .fail(function() {
                    showAlert('danger', 'Có lỗi xảy ra khi cập nhật đánh giá');
                });
        });

        // Delete review
        function deleteReview(reviewId) {
            if (confirm('Bạn có chắc muốn xóa đánh giá này?')) {
                $.post('/Review/Delete', { reviewId: reviewId })
                    .done(function(response) {
                        if (response.success) {
                            showAlert('success', response.message);
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            showAlert('danger', response.message);
                        }
                    })
                    .fail(function() {
                        showAlert('danger', 'Có lỗi xảy ra khi xóa đánh giá');
                    });
            }
        }

        // Toggle helpful
        function toggleHelpful(reviewId) {
            $.post('/Review/ToggleHelpful', { reviewId: reviewId })
                .done(function(response) {
                    if (response.success) {
                        showAlert('info', response.message);
                    }
                });
        }

        // Show alert
        function showAlert(type, message) {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show position-fixed" 
                     style="top: 20px; right: 20px; z-index: 9999; min-width: 300px;">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
            $('body').append(alertHtml);
        }

        // Initialize on page load
        $(document).ready(function() {
            initStarRating();
        });
    </script>

    <style>
        .star-rating .fa-star {
            font-size: 1rem;
        }
        
        .star-rating-input {
            font-size: 1.5rem;
        }
        
        .star-rating-input .star-label {
            cursor: pointer;
            color: #ddd;
            transition: color 0.2s;
        }
        
        .star-rating-input .star-label:hover,
        .star-rating-input .star-label.hover {
            color: #ffc107;
        }
        
        .star-rating-input .star-label.selected {
            color: #ffc107;
        }
        
        .review-item {
            transition: box-shadow 0.2s;
        }
        
        .review-item:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .progress {
            background-color: #f8f9fa;
        }
    </style>
}
