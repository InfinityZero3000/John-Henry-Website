@model JohnHenryFashionWeb.Models.SupportTicket
@{
    ViewData["Title"] = $"Ticket #{Model.TicketNumber}";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    
    var admins = ViewBag.Admins as List<dynamic>;
    var replies = ViewBag.Replies as List<JohnHenryFashionWeb.Models.TicketReply>;
}

<style>
    .ticket-details-container {
        padding: 2rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: calc(100vh - 80px);
    }

    .back-btn-glass {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(15px);
        border-radius: 12px;
        padding: 0.75rem 1.5rem;
        margin-bottom: 1.5rem;
        display: inline-block;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: #667eea;
        text-decoration: none;
        transition: all 0.3s ease;
    }

    .back-btn-glass:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
    }

    .ticket-header-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(15px);
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .info-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(15px);
        border-radius: 16px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .action-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(15px);
        border-radius: 16px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .conversation-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(15px);
        border-radius: 16px;
        padding: 1.5rem;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .reply-item {
        background: rgba(102, 126, 234, 0.05);
        border-radius: 12px;
        padding: 1rem;
        margin-bottom: 1rem;
        border-left: 4px solid #667eea;
    }

    .reply-item.internal {
        background: rgba(255, 193, 7, 0.1);
        border-left-color: #ffc107;
    }

    .reply-header {
        display: flex;
        justify-content: between;
        align-items: center;
        margin-bottom: 0.5rem;
    }

    .reply-author {
        font-weight: 600;
        color: #667eea;
    }

    .reply-time {
        font-size: 0.85rem;
        color: #999;
    }

    .priority-badge {
        padding: 0.35rem 0.75rem;
        border-radius: 8px;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .priority-urgent {
        background: linear-gradient(135deg, #ff6b6b, #ee5a6f);
        color: white;
    }

    .priority-high {
        background: linear-gradient(135deg, #ffa502, #ff6348);
        color: white;
    }

    .priority-medium {
        background: linear-gradient(135deg, #ffd32a, #ffb142);
        color: white;
    }

    .priority-low {
        background: linear-gradient(135deg, #48dbfb, #0abde3);
        color: white;
    }

    .status-badge {
        padding: 0.35rem 0.75rem;
        border-radius: 8px;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .status-open {
        background: linear-gradient(135deg, #48dbfb, #0abde3);
        color: white;
    }

    .status-inprogress {
        background: linear-gradient(135deg, #ffd32a, #ffb142);
        color: white;
    }

    .status-resolved {
        background: linear-gradient(135deg, #1dd1a1, #10ac84);
        color: white;
    }

    .status-closed {
        background: linear-gradient(135deg, #a29bfe, #6c5ce7);
        color: white;
    }

    .btn-action {
        padding: 0.5rem 1.5rem;
        border-radius: 10px;
        border: none;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-action:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    .info-item {
        padding: 0.75rem 0;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }

    .info-item:last-child {
        border-bottom: none;
    }

    .info-label {
        font-weight: 600;
        color: #667eea;
        margin-bottom: 0.25rem;
    }

    .info-value {
        color: #333;
    }
</style>

<div class="ticket-details-container">
    <!-- Back Button -->
    <a href="@Url.Action("Tickets")" class="back-btn-glass">
        <i class="fas fa-arrow-left me-2"></i>Quay lại danh sách
    </a>

    <!-- Ticket Header -->
    <div class="ticket-header-card">
        <div class="d-flex justify-content-between align-items-start mb-3">
            <div>
                <h3 class="mb-2" style="color: #667eea; font-weight: 700;">
                    Ticket #@Model.TicketNumber
                </h3>
                <h5 class="mb-3">@Model.Subject</h5>
            </div>
            <div class="d-flex gap-2">
                <span class="priority-badge priority-@Model.Priority?.ToLower()">
                    @Model.Priority
                </span>
                <span class="status-badge status-@Model.Status?.ToLower()">
                    @(Model.Status == "InProgress" ? "Đang xử lý" : 
                      Model.Status == "Open" ? "Mở" : 
                      Model.Status == "Resolved" ? "Đã giải quyết" : "Đã đóng")
                </span>
            </div>
        </div>
        
        <div class="alert alert-light mb-0">
            <strong>Mô tả:</strong><br/>
            @Model.Description
        </div>

        @if (!string.IsNullOrEmpty(Model.AttachmentUrls))
        {
            <div class="mt-3">
                <strong class="d-block mb-2">Tệp đính kèm:</strong>
                @foreach (var url in Model.AttachmentUrls.Split(','))
                {
                    var fileName = url.Split('/').LastOrDefault() ?? "Attachment";
                    <a href="@url" target="_blank" class="btn btn-sm btn-outline-primary me-2 mb-2">
                        <i class="fas fa-paperclip me-1"></i>@fileName
                    </a>
                }
            </div>
        }
    </div>

    <div class="row">
        <!-- Left Column: Info & Actions -->
        <div class="col-md-4">
            <!-- Ticket Information -->
            <div class="info-card">
                <h6 class="mb-3" style="color: #667eea; font-weight: 700;">
                    <i class="fas fa-info-circle me-2"></i>Thông tin Ticket
                </h6>
                
                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-user me-2"></i>Khách hàng
                    </div>
                    <div class="info-value">@(Model.User?.Email ?? "N/A")</div>
                </div>

                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-tag me-2"></i>Danh mục
                    </div>
                    <div class="info-value">@Model.Category</div>
                </div>

                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-user-tie me-2"></i>Phụ trách
                    </div>
                    <div class="info-value">
                        @if (Model.AssignedAdmin != null)
                        {
                            @Model.AssignedAdmin.Email
                        }
                        else
                        {
                            <span class="text-warning">Chưa gán</span>
                        }
                    </div>
                </div>

                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-clock me-2"></i>Thời gian tạo
                    </div>
                    <div class="info-value">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</div>
                </div>

                @if (Model.ResolvedAt.HasValue)
                {
                    <div class="info-item">
                        <div class="info-label">
                            <i class="fas fa-check-circle me-2"></i>Đã giải quyết
                        </div>
                        <div class="info-value">@Model.ResolvedAt.Value.ToString("dd/MM/yyyy HH:mm")</div>
                    </div>
                }

                @if (Model.ClosedAt.HasValue)
                {
                    <div class="info-item">
                        <div class="info-label">
                            <i class="fas fa-times-circle me-2"></i>Đã đóng
                        </div>
                        <div class="info-value">@Model.ClosedAt.Value.ToString("dd/MM/yyyy HH:mm")</div>
                    </div>
                }

                @if (Model.RelatedOrderId.HasValue)
                {
                    <div class="info-item">
                        <div class="info-label">
                            <i class="fas fa-shopping-cart me-2"></i>Đơn hàng
                        </div>
                        <div class="info-value">
                            <a href="#" style="color: #667eea;">
                                #@Model.RelatedOrder?.OrderNumber
                            </a>
                        </div>
                    </div>
                }

                @if (Model.RelatedProductId.HasValue)
                {
                    <div class="info-item">
                        <div class="info-label">
                            <i class="fas fa-box me-2"></i>Sản phẩm
                        </div>
                        <div class="info-value">
                            <a href="#" style="color: #667eea;">
                                @Model.RelatedProduct?.Name
                            </a>
                        </div>
                    </div>
                }
            </div>

            <!-- Assign Ticket -->
            @if (Model.AssignedTo == null)
            {
                <div class="action-card">
                    <h6 class="mb-3" style="color: #667eea; font-weight: 700;">
                        <i class="fas fa-user-plus me-2"></i>Gán Ticket
                    </h6>
                    <form method="post" asp-action="AssignTicket" asp-route-id="@Model.Id">
                        @Html.AntiForgeryToken()
                        <select name="adminId" class="form-select mb-3" required>
                            <option value="">-- Chọn Admin --</option>
                            @if (admins != null)
                            {
                                foreach (var admin in admins)
                                {
                                    <option value="@admin.Id">@admin.Email</option>
                                }
                            }
                        </select>
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-check me-2"></i>Gán cho Admin
                        </button>
                    </form>
                </div>
            }

            <!-- Update Status -->
            <div class="action-card">
                <h6 class="mb-3" style="color: #667eea; font-weight: 700;">
                    <i class="fas fa-sync-alt me-2"></i>Cập nhật Trạng thái
                </h6>
                <form method="post" asp-action="UpdateTicketStatus" asp-route-id="@Model.Id">
                    @Html.AntiForgeryToken()
                    <select name="status" class="form-select mb-3" required>
                        <option value="Open" selected="@(Model.Status == "Open")">Mở</option>
                        <option value="InProgress" selected="@(Model.Status == "InProgress")">Đang xử lý</option>
                        <option value="Resolved" selected="@(Model.Status == "Resolved")">Đã giải quyết</option>
                        <option value="Closed" selected="@(Model.Status == "Closed")">Đã đóng</option>
                    </select>
                    <button type="submit" class="btn btn-success w-100">
                        <i class="fas fa-save me-2"></i>Cập nhật Status
                    </button>
                </form>
            </div>

            <!-- Update Priority -->
            <div class="action-card">
                <h6 class="mb-3" style="color: #667eea; font-weight: 700;">
                    <i class="fas fa-flag me-2"></i>Cập nhật Độ Ưu tiên
                </h6>
                <form method="post" asp-action="UpdateTicketPriority" asp-route-id="@Model.Id">
                    @Html.AntiForgeryToken()
                    <select name="priority" class="form-select mb-3" required>
                        <option value="Low" selected="@(Model.Priority == "Low")">Thấp</option>
                        <option value="Medium" selected="@(Model.Priority == "Medium")">Trung bình</option>
                        <option value="High" selected="@(Model.Priority == "High")">Cao</option>
                        <option value="Urgent" selected="@(Model.Priority == "Urgent")">Khẩn cấp</option>
                    </select>
                    <button type="submit" class="btn btn-warning w-100">
                        <i class="fas fa-save me-2"></i>Cập nhật Priority
                    </button>
                </form>
            </div>
        </div>

        <!-- Right Column: Conversation -->
        <div class="col-md-8">
            <div class="conversation-card">
                <h6 class="mb-4" style="color: #667eea; font-weight: 700;">
                    <i class="fas fa-comments me-2"></i>Hội thoại (@Model.ReplyCount replies)
                </h6>

                <!-- Replies List -->
                @if (replies != null && replies.Any())
                {
                    foreach (var reply in replies)
                    {
                        <div class="reply-item @(reply.IsInternal ? "internal" : "")">
                            <div class="reply-header">
                                <div>
                                    <span class="reply-author">
                                        <i class="fas @(reply.IsInternal ? "fa-lock" : "fa-user") me-1"></i>
                                        @(reply.User?.Email ?? "Unknown")
                                    </span>
                                    @if (reply.IsInternal)
                                    {
                                        <span class="badge bg-warning ms-2">Internal Note</span>
                                    }
                                </div>
                                <span class="reply-time">@reply.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                            </div>
                            <div class="reply-content">
                                @reply.Message
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center text-muted py-4">
                        <i class="fas fa-inbox fa-3x mb-3"></i>
                        <p>Chưa có reply nào</p>
                    </div>
                }

                <!-- Reply Form -->
                <div class="mt-4 pt-4" style="border-top: 2px solid rgba(0,0,0,0.1);">
                    <h6 class="mb-3" style="color: #667eea; font-weight: 700;">
                        <i class="fas fa-reply me-2"></i>Trả lời Ticket
                    </h6>
                    <form method="post" asp-action="ReplyTicket" asp-route-id="@Model.Id">
                        @Html.AntiForgeryToken()
                        <div class="mb-3">
                            <textarea name="message" class="form-control" rows="4" 
                                      placeholder="Nhập nội dung trả lời..." required></textarea>
                        </div>
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" name="isInternal" id="isInternal">
                            <label class="form-check-label" for="isInternal">
                                <i class="fas fa-lock me-1"></i>
                                Internal Note (chỉ admin thấy)
                            </label>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-paper-plane me-2"></i>Gửi Reply
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
