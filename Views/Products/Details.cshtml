@model JohnHenryFashionWeb.Models.Product
@{
    ViewData["Title"] = Model?.Name ?? "Chi tiết sản phẩm";
    var isInWishlist = ViewBag.IsInWishlist as bool? ?? false;
    var isAuthenticated = ViewBag.IsAuthenticated as bool? ?? false;
    var breadcrumbs = ViewBag.Breadcrumbs as List<JohnHenryFashionWeb.Services.BreadcrumbItem> ?? new List<JohnHenryFashionWeb.Services.BreadcrumbItem>();
}

@Html.AntiForgeryToken()

<!-- Free Shipping Banner -->
<div class="shipping-banner bg-danger text-white py-2">
    <div class="container">
        <div class="d-flex align-items-center justify-content-center">
            <i class="fas fa-shipping-fast text-warning me-2"></i>
            <span>MIỄN PHÍ VẬN CHUYỂN ĐƠN HÀNG TỪ 299K</span>
        </div>
    </div>
</div>

<!-- Breadcrumb -->
<div class="container mt-3">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            @foreach (var breadcrumb in breadcrumbs)
            {
                @if (string.IsNullOrEmpty(breadcrumb.Url))
                {
                    <li class="breadcrumb-item active" aria-current="page">@breadcrumb.Name</li>
                }
                else
                {
                    <li class="breadcrumb-item"><a href="@breadcrumb.Url">@breadcrumb.Name</a></li>
                }
            }
        </ol>
    </nav>
</div>

<!-- Product Detail Section -->
<div class="container py-4">
    <div class="row">
        <!-- Product Images Gallery -->
        <div class="col-lg-6">
            <div class="product-gallery">
                <!-- Main Image -->
                <div class="main-image-container mb-3 position-relative">
                    @{
                        var mainImageUrl = !string.IsNullOrEmpty(Model?.FeaturedImageUrl) ? Model.FeaturedImageUrl : "~/images/placeholder-product.jpg";
                        var galleryImages = Model?.GalleryImages ?? new string[0];
                        var allImages = new List<string> { mainImageUrl }.Concat(galleryImages).Where(img => !string.IsNullOrEmpty(img)).ToList();
                    }
                    <img src="@mainImageUrl" 
                         alt="@Model?.Name" 
                         class="img-fluid main-product-image w-100" 
                         id="mainProductImage"
                         style="height: 600px; object-fit: cover;"
                         onerror="this.src='/images/placeholder-product.jpg'">
                    
                    <!-- Image Navigation Arrows -->
                    @if (allImages.Count > 1)
                    {
                        <button class="image-nav-btn prev-btn position-absolute" style="left: 10px; top: 50%; transform: translateY(-50%);" onclick="previousImage()">
                            <i class="fas fa-chevron-left"></i>
                        </button>
                        <button class="image-nav-btn next-btn position-absolute" style="right: 10px; top: 50%; transform: translateY(-50%);" onclick="nextImage()">
                            <i class="fas fa-chevron-right"></i>
                        </button>
                    }
                </div>
                
                <!-- Thumbnail Images -->
                @if (allImages.Count > 1)
                {
                    <div class="thumbnail-container">
                        <div class="row g-2">
                            @for (int i = 0; i < Math.Min(allImages.Count, 5); i++)
                            {
                                <div class="col-3">
                                    <img src="@allImages[i]" 
                                         alt="@Model?.Name - ảnh @(i+1)" 
                                         class="img-fluid thumbnail-image @(i == 0 ? "active" : "") border" 
                                         style="height: 80px; object-fit: cover; cursor: pointer;"
                                         onclick="changeMainImage('@allImages[i]', this)"
                                         onerror="this.src='/images/placeholder-product.jpg'">
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Product Information -->
        <div class="col-lg-6">
            <div class="product-info">
                <!-- Brand Logo and Badge -->
                <div class="product-header mb-3">
                    <div class="d-flex align-items-center mb-2">
                        <div class="brand-logo me-3">
                            <img src="~/images/logo.png" alt="JOHN HENRY" class="brand-img" style="height: 30px;">
                            <span class="brand-name fw-bold text-danger ms-2">JOHN HENRY</span>
                        </div>
                        <div class="shipping-badge">
                            <span class="badge bg-danger">MIỄN PHÍ VẬN CHUYỂN ĐƠN HÀNG TỪ 299K</span>
                        </div>
                    </div>
                </div>

                <!-- Product Title -->
                <h1 class="product-title h3 mb-3">@Model?.Name</h1>

                <!-- SKU and Wishlist -->
                <div class="d-flex justify-content-between align-items-center mb-3">
                    @if (!string.IsNullOrEmpty(Model?.SKU))
                    {
                        <div class="product-sku">
                            <span class="text-muted">SKU: <strong>@Model.SKU</strong></span>
                        </div>
                    }
                    
                    <button class="btn-wishlist @(isInWishlist ? "active" : "") btn btn-outline-danger btn-sm" 
                            onclick="toggleWishlist('@Model?.Id')"
                            @(!isAuthenticated ? "data-requires-auth='true'" : "")>
                        <i class="fas fa-heart"></i>
                    </button>
                </div>

                <!-- Price -->
                <div class="product-price mb-4">
                    @if (Model?.SalePrice.HasValue == true && Model.SalePrice > 0 && Model.SalePrice < Model.Price)
                    {
                        <span class="sale-price h3 text-danger fw-bold">@Model.SalePrice.Value.ToString("N0")₫</span>
                        <span class="original-price text-muted text-decoration-line-through ms-2">@Model.Price.ToString("N0")₫</span>
                        <span class="discount-badge badge bg-danger ms-2">
                            -@(Math.Round((Model.Price - Model.SalePrice.Value) / Model.Price * 100))%
                        </span>
                    }
                    else
                    {
                        <span class="current-price h3 text-danger fw-bold">@Model?.Price.ToString("N0")₫</span>
                    }
                </div>
                
                <!-- Product Options -->
                <div class="product-options mb-4">
                    <!-- Color Selection -->
                    <div class="option-group mb-3">
                        <label class="option-label fw-bold mb-2">COLOR: <span id="selectedColor" class="text-danger">RED</span></label>
                        <div class="color-options d-flex gap-2">
                            <div class="color-option active border border-2 border-danger" data-color="red" style="background-color: #dc3545; width: 40px; height: 40px; border-radius: 50%; cursor: pointer;" title="Đỏ"></div>
                            <div class="color-option border border-2" data-color="white" style="background-color: #ffffff; width: 40px; height: 40px; border-radius: 50%; cursor: pointer;" title="Trắng"></div>
                            <div class="color-option border border-2" data-color="blue" style="background-color: #0d6efd; width: 40px; height: 40px; border-radius: 50%; cursor: pointer;" title="Xanh"></div>
                        </div>
                    </div>
                    
                    <!-- Size Selection -->
                    <div class="option-group mb-3">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <label class="option-label fw-bold">SIZE:</label>
                            <a href="#" class="size-guide-link text-decoration-none small">
                                <i class="fas fa-ruler"></i> Hướng dẫn tính size
                            </a>
                        </div>
                        <div class="size-options d-flex gap-2 flex-wrap">
                            <button class="size-option btn btn-outline-secondary active" data-size="S">S</button>
                            <button class="size-option btn btn-outline-secondary" data-size="M">M</button>
                            <button class="size-option btn btn-outline-secondary" data-size="L">L</button>
                            <button class="size-option btn btn-outline-secondary" data-size="XL">XL</button>
                            <button class="size-option btn btn-outline-secondary" data-size="2XL">2XL</button>
                            <button class="size-option btn btn-outline-secondary disabled" data-size="3XL" disabled>3XL</button>
                        </div>
                    </div>
                </div>
                
                <!-- Quantity Selection -->
                <div class="quantity-section mb-4">
                    <div class="d-flex align-items-center">
                        <label class="me-3 fw-bold">Số lượng:</label>
                        <div class="quantity-controls d-flex border rounded">
                            <button class="qty-btn btn btn-outline-secondary border-0" onclick="decreaseQuantity()">-</button>
                            <input type="number" id="quantity" value="1" min="1" max="@(Model?.StockQuantity ?? 99)" class="qty-input form-control border-0 text-center" style="width: 80px;">
                            <button class="qty-btn btn btn-outline-secondary border-0" onclick="increaseQuantity()">+</button>
                        </div>
                    </div>
                </div>
                
                <!-- Action Buttons -->
                <div class="action-buttons mb-4">
                    @if (Model?.StockQuantity > 0)
                    {
                        <button class="btn btn-danger btn-lg w-100 mb-3 fw-bold" 
                                onclick="buyNow('@Model?.Id')"
                                @(!isAuthenticated ? "data-requires-auth='true'" : "")>
                            MUA NGAY
                        </button>
                        <button class="btn btn-outline-danger btn-lg w-100 mb-3 fw-bold" 
                                onclick="addToCartFromDetails('@Model?.Id')"
                                @(!isAuthenticated ? "data-requires-auth='true'" : "")>
                            THÊM VÀO GIỎ
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-secondary btn-lg w-100 mb-3" disabled>HẾT HÀNG</button>
                        <button class="btn btn-outline-secondary btn-lg w-100 mb-3" onclick="notifyWhenAvailable('@Model?.Id')">
                            THÔNG BÁO KHI CÓ HÀNG
                        </button>
                    }
                    
                    <!-- Store Availability -->
                    <button class="btn btn-outline-secondary btn-lg w-100 fw-bold">
                        <i class="fas fa-store me-2"></i> XEM CỬA HÀNG CÓ HÀNG
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Product Tabs -->
    <div class="row mt-5">
        <div class="col-12">
            <div class="product-tabs">
                <ul class="nav nav-tabs border-0" id="productTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active border-0 text-dark fw-bold" id="description-tab" data-bs-toggle="tab" 
                                data-bs-target="#description" type="button" role="tab">
                            MÔ TẢ SẢN PHẨM
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link border-0 text-dark fw-bold" id="policy-tab" data-bs-toggle="tab" 
                                data-bs-target="#policy" type="button" role="tab">
                            CHÍNH SÁCH ĐỔI HÀNG
                        </button>
                    </li>
                </ul>
                <div class="tab-content mt-4" id="productTabsContent">
                    <div class="tab-pane fade show active" id="description" role="tabpanel">
                        <div class="product-description">
                            @if (!string.IsNullOrEmpty(Model?.Description))
                            {
                                <div class="mb-4">
                                    @Html.Raw(Model.Description)
                                </div>
                            }
                            else if (!string.IsNullOrEmpty(Model?.ShortDescription))
                            {
                                <p>@Model.ShortDescription</p>
                            }
                            else
                            {
                                <p>Chất liệu 100% cotton mang lại sự thoáng mát và dễ chịu, đồng thời giữ độ bền cao và thấm hút mồ hôi tốt.</p>
                                <p>Form Sơ Mi dáng suông, cây ngắn thoải ái khác hoá giúp các chàng dễ mix để có phong cách riêng của mình, từ trẻ trung đi kèm quần jean đi làm và dạo phố cho ngày lễ cuối tuần bởi độ bóng dễ thương.</p>
                                <p>Thiết kế áo mang tính ứng dụng cao, dễ thấm hút trong nhiều hoàn cảnh. Từ trẻ trung đi kèm quần jean đi làm và dạo phố cho ngày lễ cuối tuần trẻ trung và thành vàng gọn.</p>
                            }
                            
                            <!-- Product Details Image -->
                            <div class="text-center mt-4">
                                <img src="@mainImageUrl" alt="@Model?.Name Chi tiết" class="img-fluid" style="max-height: 600px;">
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="policy" role="tabpanel">
                        <div class="policy-content">
                            <h5>Chính sách đổi hàng:</h5>
                            <ul class="list-unstyled">
                                <li class="mb-2"><i class="fas fa-check text-success me-2"></i>Đổi hàng trong vòng 7 ngày</li>
                                <li class="mb-2"><i class="fas fa-check text-success me-2"></i>Sản phẩm còn nguyên tag, chưa qua sử dụng</li>
                                <li class="mb-2"><i class="fas fa-check text-success me-2"></i>Miễn phí đổi size trong vòng 3 ngày</li>
                                <li class="mb-2"><i class="fas fa-check text-success me-2"></i>Hoàn tiền 100% nếu sản phẩm lỗi</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Related Products -->
    <div class="row mt-5">
        <div class="col-12">
            <h3 class="section-title text-center mb-4 fw-bold">SẢN PHẨM LIÊN QUAN</h3>
            <div class="related-products">
                <div class="row">
                    <!-- Related product items will be loaded here -->
                    @for (int i = 0; i < 4; i++)
                    {
                        <div class="col-lg-3 col-md-6 mb-4">
                            <div class="product-card">
                                <div class="product-image">
                                    <img src="@mainImageUrl" alt="Sản phẩm liên quan" class="img-fluid">
                                    <div class="product-overlay">
                                        <button class="btn btn-primary btn-sm">Xem chi tiết</button>
                                    </div>
                                </div>
                                <div class="product-info p-3">
                                    <h6 class="product-name">Áo Sơ Mi Nam Tay Ngắn Form Ôm...</h6>
                                    <div class="product-price">
                                        <span class="price text-danger fw-bold">700,000₫</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript for product functionality -->
<script>
    let currentImageIndex = 0;
    const images = @Html.Raw(Json.Serialize(allImages));
    
    function changeMainImage(imageUrl, thumbnailElement) {
        document.getElementById('mainProductImage').src = imageUrl;
        
        // Update active thumbnail
        document.querySelectorAll('.thumbnail-image').forEach(img => img.classList.remove('active', 'border-danger'));
        thumbnailElement.classList.add('active', 'border-danger');
        
        // Update current index
        currentImageIndex = Array.from(document.querySelectorAll('.thumbnail-image')).indexOf(thumbnailElement);
    }
    
    function nextImage() {
        if (images.length > 1) {
            currentImageIndex = (currentImageIndex + 1) % images.length;
            updateMainImage();
        }
    }
    
    function previousImage() {
        if (images.length > 1) {
            currentImageIndex = (currentImageIndex - 1 + images.length) % images.length;
            updateMainImage();
        }
    }
    
    function updateMainImage() {
        document.getElementById('mainProductImage').src = images[currentImageIndex];
        document.querySelectorAll('.thumbnail-image').forEach((img, index) => {
            img.classList.toggle('active', index === currentImageIndex);
            img.classList.toggle('border-danger', index === currentImageIndex);
        });
    }
    
    function increaseQuantity() {
        const qtyInput = document.getElementById('quantity');
        const max = parseInt(qtyInput.max);
        const current = parseInt(qtyInput.value);
        if (current < max) {
            qtyInput.value = current + 1;
        }
    }
    
    function decreaseQuantity() {
        const qtyInput = document.getElementById('quantity');
        const current = parseInt(qtyInput.value);
        if (current > 1) {
            qtyInput.value = current - 1;
        }
    }
    
    // Color selection
    document.querySelectorAll('.color-option').forEach(option => {
        option.addEventListener('click', function() {
            document.querySelectorAll('.color-option').forEach(opt => opt.classList.remove('active', 'border-danger'));
            this.classList.add('active', 'border-danger');
            document.getElementById('selectedColor').textContent = this.dataset.color.toUpperCase();
        });
    });
    
    // Size selection
    document.querySelectorAll('.size-option:not(.disabled)').forEach(option => {
        option.addEventListener('click', function() {
            document.querySelectorAll('.size-option').forEach(opt => opt.classList.remove('active'));
            this.classList.add('active');
        });
    });
    
    // Add to cart functionality
    function addToCartFromDetails(productId) {
        const quantity = document.getElementById('quantity').value;
        const selectedSize = document.querySelector('.size-option.active')?.dataset.size || '';
        const selectedColor = document.querySelector('.color-option.active')?.dataset.color || '';
        
        // Implementation for add to cart
        console.log('Adding to cart:', { productId, quantity, selectedSize, selectedColor });
    }
    
    function buyNow(productId) {
        // Implementation for buy now
        console.log('Buy now:', productId);
    }
    
    function toggleWishlist(productId) {
        // Implementation for wishlist toggle
        console.log('Toggle wishlist:', productId);
    }
    
    function notifyWhenAvailable(productId) {
        // Implementation for notify when available
        console.log('Notify when available:', productId);
    }
</script>

<style>
.shipping-banner {
    font-size: 14px;
    font-weight: bold;
}

.product-gallery .main-image-container {
    background-color: #f8f9fa;
    border-radius: 8px;
    overflow: hidden;
}

.image-nav-btn {
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
}

.image-nav-btn:hover {
    background: white;
    box-shadow: 0 2px 10px rgba(0,0,0,0.2);
}

.thumbnail-image {
    transition: all 0.3s ease;
}

.thumbnail-image:hover {
    transform: scale(1.05);
}

.thumbnail-image.active {
    border-color: #dc3545 !important;
    border-width: 2px !important;
}

.color-option {
    transition: all 0.3s ease;
}

.color-option:hover {
    transform: scale(1.1);
}

.color-option.active {
    border-color: #dc3545 !important;
    border-width: 3px !important;
}

.size-option.active {
    background-color: #dc3545;
    border-color: #dc3545;
    color: white;
}

.size-option.disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.product-card {
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.3s ease;
}

.product-card:hover {
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    transform: translateY(-2px);
}

.product-image {
    position: relative;
    overflow: hidden;
}

.product-image img {
    width: 100%;
    height: 250px;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.product-card:hover .product-image img {
    transform: scale(1.05);
}

.product-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0,0,0,0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.product-card:hover .product-overlay {
    opacity: 1;
}

.nav-tabs .nav-link.active {
    border-bottom: 2px solid #dc3545;
    background: none;
}

.section-title {
    position: relative;
    padding-bottom: 10px;
}

.section-title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 50px;
    height: 2px;
    background-color: #dc3545;
}
</style>