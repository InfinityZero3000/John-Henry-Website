@model JohnHenryFashionWeb.ViewModels.ProductSearchFilterViewModel
@{
    ViewData["Title"] = "Sản phẩm";
    ViewData["Description"] = "Khám phá bộ sưu tập thời trang John Henry với đa dạng sản phẩm chất lượng cao";
}

<!-- Advanced Search & Filter Page -->
<div class="container-fluid py-4">
    <!-- Search Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-1">Tìm kiếm sản phẩm</h1>
                    <p class="text-muted">Tìm thấy @Model.Results.TotalCount sản phẩm</p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-secondary" id="toggleFilters">
                        <i class="fas fa-filter"></i> Bộ lọc
                    </button>
                    <div class="dropdown">
                        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown">
                            <i class="fas fa-sort"></i> Sắp xếp
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                            <li><a class="dropdown-item" href="#" onclick="applySorting('name')">Tên A-Z</a></li>
                            <li><a class="dropdown-item" href="#" onclick="applySorting('price_asc')">Giá thấp đến cao</a></li>
                            <li><a class="dropdown-item" href="#" onclick="applySorting('price_desc')">Giá cao đến thấp</a></li>
                            <li><a class="dropdown-item" href="#" onclick="applySorting('newest')">Mới nhất</a></li>
                            <li><a class="dropdown-item" href="#" onclick="applySorting('featured')">Nổi bật</a></li>
                            <li><a class="dropdown-item" href="#" onclick="applySorting('popularity')">Phổ biến</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Filters Sidebar -->
        <div class="col-lg-3 col-md-4" id="filterSidebar">
            <form asp-action="Index" method="get" id="filterForm">
                <input type="hidden" asp-for="SortBy" />
                <input type="hidden" asp-for="Page" value="1" />

                <!-- Search Box -->
                <div class="card mb-3">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="fas fa-search"></i> Tìm kiếm</h6>
                    </div>
                    <div class="card-body">
                        <div class="input-group">
                            <input asp-for="SearchTerm" class="form-control" placeholder="Nhập từ khóa..." />
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Category Filter -->
                <div class="card mb-3">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="fas fa-tags"></i> Danh mục</h6>
                    </div>
                    <div class="card-body">
                        <select asp-for="CategoryId" class="form-select" onchange="this.form.submit()">
                            <option value="">Tất cả danh mục</option>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category.Id" selected="@(Model.CategoryId == category.Id)">
                                    @category.Name
                                </option>
                            }
                        </select>
                    </div>
                </div>

                <!-- Brand Filter -->
                <div class="card mb-3">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="fas fa-copyright"></i> Thương hiệu</h6>
                    </div>
                    <div class="card-body">
                        <select asp-for="BrandId" class="form-select" onchange="this.form.submit()">
                            <option value="">Tất cả thương hiệu</option>
                            @foreach (var brand in Model.Brands)
                            {
                                <option value="@brand.Id" selected="@(Model.BrandId == brand.Id)">
                                    @brand.Name
                                </option>
                            }
                        </select>
                    </div>
                </div>

                <!-- Price Range Filter -->
                <div class="card mb-3">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="fas fa-dollar-sign"></i> Khoảng giá</h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-6">
                                <input asp-for="MinPrice" class="form-control" type="number" placeholder="Từ..." step="10000" />
                            </div>
                            <div class="col-6">
                                <input asp-for="MaxPrice" class="form-control" type="number" placeholder="Đến..." step="10000" />
                            </div>
                        </div>
                        <div class="mt-2">
                            <small class="text-muted">
                                Từ @Model.MinPriceRange.ToString("N0") - @Model.MaxPriceRange.ToString("N0") VNĐ
                            </small>
                        </div>
                    </div>
                </div>

                <!-- Product Attributes -->
                @if (Model.AvailableSizes.Any())
                {
                    <div class="card mb-3">
                        <div class="card-header">
                            <h6 class="mb-0"><i class="fas fa-ruler"></i> Kích thước</h6>
                        </div>
                        <div class="card-body">
                            <select asp-for="Size" class="form-select" onchange="this.form.submit()">
                                <option value="">Tất cả kích thước</option>
                                @foreach (var size in Model.AvailableSizes)
                                {
                                    <option value="@size" selected="@(Model.Size == size)">@size</option>
                                }
                            </select>
                        </div>
                    </div>
                }

                @if (Model.AvailableColors.Any())
                {
                    <div class="card mb-3">
                        <div class="card-header">
                            <h6 class="mb-0"><i class="fas fa-palette"></i> Màu sắc</h6>
                        </div>
                        <div class="card-body">
                            <select asp-for="Color" class="form-select" onchange="this.form.submit()">
                                <option value="">Tất cả màu sắc</option>
                                @foreach (var color in Model.AvailableColors)
                                {
                                    <option value="@color" selected="@(Model.Color == color)">@color</option>
                                }
                            </select>
                        </div>
                    </div>
                }

                @if (Model.AvailableMaterials.Any())
                {
                    <div class="card mb-3">
                        <div class="card-header">
                            <h6 class="mb-0"><i class="fas fa-leaf"></i> Chất liệu</h6>
                        </div>
                        <div class="card-body">
                            <select asp-for="Material" class="form-select" onchange="this.form.submit()">
                                <option value="">Tất cả chất liệu</option>
                                @foreach (var material in Model.AvailableMaterials)
                                {
                                    <option value="@material" selected="@(Model.Material == material)">@material</option>
                                }
                            </select>
                        </div>
                    </div>
                }

                <!-- Additional Filters -->
                <div class="card mb-3">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="fas fa-filter"></i> Bộ lọc khác</h6>
                    </div>
                    <div class="card-body">
                        <div class="form-check mb-2">
                            <input asp-for="IsFeatured" class="form-check-input" type="checkbox" onchange="this.form.submit()" />
                            <label asp-for="IsFeatured" class="form-check-label">
                                Sản phẩm nổi bật
                            </label>
                        </div>

                        <div class="form-check">
                            <input asp-for="InStock" class="form-check-input" type="checkbox" onchange="this.form.submit()" />
                            <label asp-for="InStock" class="form-check-label">
                                Còn hàng
                            </label>
                        </div>
                    </div>
                </div>

                <!-- Clear Filters -->
                <div class="card">
                    <div class="card-body text-center">
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary w-100">
                            <i class="fas fa-eraser"></i> Xóa tất cả bộ lọc
                        </a>
                    </div>
                </div>
            </form>
        </div>

        <!-- Products Grid -->
        <div class="col-lg-9 col-md-8">
            <!-- Results Summary -->
            <div class="row mb-3">
                <div class="col-12">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <span class="text-muted">
                                Hiển thị @Model.Results.StartIndex - @Model.Results.EndIndex của @Model.Results.TotalCount sản phẩm
                            </span>
                        </div>
                        <div>
                            <select class="form-select form-select-sm" style="width: auto;" onchange="changePageSize(this.value)">
                                <option value="12" selected="@(Model.PageSize == 12)">12 sản phẩm</option>
                                <option value="24" selected="@(Model.PageSize == 24)">24 sản phẩm</option>
                                <option value="48" selected="@(Model.PageSize == 48)">48 sản phẩm</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Products List -->
            @if (Model.Results.Products.Any())
            {
                <div class="row g-4">
                    @foreach (var product in Model.Results.Products)
                    {
                        <div class="col-xl-4 col-lg-6 col-md-6">
                            <div class="product-card-unified h-100">
                                <!-- Product Image -->
                                <div class="product-image-wrapper position-relative">
                                    @if (!string.IsNullOrEmpty(product.ImageUrl))
                                    {
                                        <img src="@product.ImageUrl" class="product-img w-100" alt="@product.Name" />
                                    }
                                    else
                                    {
                                        <div class="product-img w-100 d-flex align-items-center justify-content-center bg-light">
                                            <i class="fas fa-image fa-3x text-muted"></i>
                                        </div>
                                    }

                                    <!-- Quick Actions -->
                                    <div class="product-actions">
                                        <button class="btn-action" onclick="addToWishlist('@product.Id')" title="Thêm vào yêu thích">
                                            <i class="fas fa-heart"></i>
                                        </button>
                                        <a href="@Url.Action("Details", new { id = product.Id })" class="btn-action" title="Xem chi tiết">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        @if (product.InStock)
                                        {
                                            <button class="btn-action" onclick="addToCart('@product.Id')" title="Thêm vào giỏ">
                                                <i class="fas fa-cart-plus"></i>
                                            </button>
                                        }
                                    </div>
                                </div>

                                <!-- Product Info -->
                                <div class="product-details">
                                    <h6 class="product-title">
                                        <a href="@Url.Action("Details", new { id = product.Id })" class="text-decoration-none text-dark">
                                            @product.Name
                                        </a>
                                    </h6>

                                    <!-- Price -->
                                    <div class="mt-auto">
                                        <span class="product-price">@product.PriceFormatted</span>
                                        @if (!product.InStock)
                                        {
                                            <small class="text-muted d-block">Hết hàng</small>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                @if (Model.Results.TotalPages > 1)
                {
                    <nav aria-label="Product pagination" class="mt-5">
                        <ul class="pagination justify-content-center">
                            @if (Model.Results.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@GetPageUrl(1)">Đầu</a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" href="@GetPageUrl(Model.Results.PageNumber - 1)">Trước</a>
                                </li>
                            }

                            @{
                                var startPage = Math.Max(1, Model.Results.PageNumber - 2);
                                var endPage = Math.Min(Model.Results.TotalPages, Model.Results.PageNumber + 2);
                            }

                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == Model.Results.PageNumber ? "active" : "")">
                                    <a class="page-link" href="@GetPageUrl(i)">@i</a>
                                </li>
                            }

                            @if (Model.Results.HasNextPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@GetPageUrl(Model.Results.PageNumber + 1)">Sau</a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" href="@GetPageUrl(Model.Results.TotalPages)">Cuối</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
            else
            {
                <!-- No Results -->
                <div class="text-center py-5">
                    <i class="fas fa-search fa-4x text-muted mb-3"></i>
                    <h4>Không tìm thấy sản phẩm</h4>
                    <p class="text-muted">Thử thay đổi tiêu chí tìm kiếm hoặc bộ lọc của bạn</p>
                    <a href="@Url.Action("Index")" class="btn btn-primary">Xem tất cả sản phẩm</a>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    string GetPageUrl(int page)
    {
        var routeValues = new RouteValueDictionary();
        
        if (!string.IsNullOrEmpty(Model.SearchTerm))
            routeValues.Add("SearchTerm", Model.SearchTerm);
        if (Model.CategoryId.HasValue)
            routeValues.Add("CategoryId", Model.CategoryId);
        if (Model.BrandId.HasValue)
            routeValues.Add("BrandId", Model.BrandId);
        if (Model.MinPrice.HasValue)
            routeValues.Add("MinPrice", Model.MinPrice);
        if (Model.MaxPrice.HasValue)
            routeValues.Add("MaxPrice", Model.MaxPrice);
        if (!string.IsNullOrEmpty(Model.Size))
            routeValues.Add("Size", Model.Size);
        if (!string.IsNullOrEmpty(Model.Color))
            routeValues.Add("Color", Model.Color);
        if (!string.IsNullOrEmpty(Model.Material))
            routeValues.Add("Material", Model.Material);
        if (Model.IsFeatured.HasValue)
            routeValues.Add("IsFeatured", Model.IsFeatured);
        if (Model.InStock.HasValue)
            routeValues.Add("InStock", Model.InStock);
        if (!string.IsNullOrEmpty(Model.SortBy))
            routeValues.Add("SortBy", Model.SortBy);
        
        routeValues.Add("Page", page);
        routeValues.Add("PageSize", Model.PageSize);
        
        return Url.Action("Index", routeValues)!;
    }
}

@section Scripts {
    <script>
        // Toggle filter sidebar on mobile
        document.getElementById('toggleFilters').addEventListener('click', function() {
            const sidebar = document.getElementById('filterSidebar');
            sidebar.classList.toggle('d-none');
        });

        // Apply sorting
        function applySorting(sortBy) {
            document.querySelector('[name="SortBy"]').value = sortBy;
            document.getElementById('filterForm').submit();
        }

        // Change page size
        function changePageSize(pageSize) {
            const form = document.getElementById('filterForm');
            const input = form.querySelector('[name="PageSize"]') || document.createElement('input');
            input.type = 'hidden';
            input.name = 'PageSize';
            input.value = pageSize;
            if (!form.contains(input)) {
                form.appendChild(input);
            }
            form.submit();
        }

        // Add to wishlist
        async function addToWishlist(productId) {
            try {
                const response = await fetch('/Products/AddToWishlist', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    },
                    body: JSON.stringify({ productId })
                });

                const result = await response.json();
                if (result.success) {
                    alert('Đã thêm vào danh sách yêu thích!');
                } else {
                    alert(result.message || 'Có lỗi xảy ra!');
                }
            } catch (error) {
                alert('Có lỗi xảy ra khi thêm vào yêu thích!');
            }
        }

        // Add to cart
        async function addToCart(productId) {
            try {
                const response = await fetch('/Products/AddToCart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    },
                    body: JSON.stringify({ productId, quantity: 1 })
                });

                const result = await response.json();
                if (result.success) {
                    alert('Đã thêm vào giỏ hàng!');
                    // Update cart count if element exists
                    const cartCount = document.querySelector('.cart-count');
                    if (cartCount && result.cartCount) {
                        cartCount.textContent = result.cartCount;
                    }
                } else {
                    alert(result.message || 'Có lỗi xảy ra!');
                }
            } catch (error) {
                alert('Có lỗi xảy ra khi thêm vào giỏ hàng!');
            }
        }

        // Auto-submit price filters on change
        document.querySelector('[name="MinPrice"]').addEventListener('change', function() {
            setTimeout(() => document.getElementById('filterForm').submit(), 1000);
        });

        document.querySelector('[name="MaxPrice"]').addEventListener('change', function() {
            setTimeout(() => document.getElementById('filterForm').submit(), 1000);
        });

        // Hide filters on mobile by default
        if (window.innerWidth < 768) {
            document.getElementById('filterSidebar').classList.add('d-none');
        }
    </script>
}

@section Styles {
    <style>
        .product-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border: none;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
        }

        .product-image-container {
            height: 250px;
            overflow: hidden;
            position: relative;
        }

        .product-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .product-card:hover .product-image {
            transform: scale(1.05);
        }

        .placeholder-image {
            height: 250px;
            background-color: #f8f9fa;
            border-radius: 0.375rem 0.375rem 0 0;
        }

        .product-actions {
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .product-card:hover .product-actions {
            opacity: 1;
        }

        .product-actions .btn {
            backdrop-filter: blur(10px);
            background-color: rgba(255, 255, 255, 0.9);
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .product-actions .btn:hover {
            background-color: rgba(255, 255, 255, 1);
            transform: scale(1.1);
        }

        .card-header h6 {
            color: #495057;
            font-weight: 600;
        }

        .stars i {
            font-size: 0.875rem;
        }

        .filter-section .form-check-input:checked {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        .badge {
            font-size: 0.75rem;
        }

        .pagination .page-link {
            color: #0d6efd;
            border-color: #dee2e6;
        }

        .pagination .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        @@media (max-width: 767.98px) {
            .product-image-container {
                height: 200px;
            }
            
            .container-fluid {
                padding-left: 1rem;
                padding-right: 1rem;
            }
        }
    </style>
}
